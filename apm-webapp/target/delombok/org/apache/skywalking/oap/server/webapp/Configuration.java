// Generated by delombok at Thu Apr 18 20:41:11 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.skywalking.oap.server.webapp;

public class Configuration {
  private String serverPort;
  private String oapServices;
  private String zipkinServices;

  public int port() {
    return serverPort == null || serverPort.trim().length() == 0 ? 80 : Integer.parseInt(serverPort);
  }

  public String[] oapServices() {
    if (oapServices == null || oapServices.trim().length() == 0) {
      throw new IllegalArgumentException("oapServices cannot be null or empty");
    }
    return oapServices.split(",");
  }

  public String[] zipkinServices() {
    if (zipkinServices == null || zipkinServices.trim().length() == 0) {
      throw new IllegalArgumentException("zipkinServices cannot be null or empty");
    }
    return zipkinServices.split(",");
  }


  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public static class ConfigurationBuilder {
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    private String serverPort;
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    private String oapServices;
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    private String zipkinServices;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    ConfigurationBuilder() {
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Configuration.ConfigurationBuilder serverPort(final String serverPort) {
      this.serverPort = serverPort;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Configuration.ConfigurationBuilder oapServices(final String oapServices) {
      this.oapServices = oapServices;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Configuration.ConfigurationBuilder zipkinServices(final String zipkinServices) {
      this.zipkinServices = zipkinServices;
      return this;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Configuration build() {
      return new Configuration(this.serverPort, this.oapServices, this.zipkinServices);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
      return "Configuration.ConfigurationBuilder(serverPort=" + this.serverPort + ", oapServices=" + this.oapServices + ", zipkinServices=" + this.zipkinServices + ")";
    }
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public static Configuration.ConfigurationBuilder builder() {
    return new Configuration.ConfigurationBuilder();
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public String getServerPort() {
    return this.serverPort;
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public String getOapServices() {
    return this.oapServices;
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public String getZipkinServices() {
    return this.zipkinServices;
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public void setServerPort(final String serverPort) {
    this.serverPort = serverPort;
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public void setOapServices(final String oapServices) {
    this.oapServices = oapServices;
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public void setZipkinServices(final String zipkinServices) {
    this.zipkinServices = zipkinServices;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof Configuration)) return false;
    final Configuration other = (Configuration) o;
    if (!other.canEqual((java.lang.Object) this)) return false;
    final java.lang.Object this$serverPort = this.getServerPort();
    final java.lang.Object other$serverPort = other.getServerPort();
    if (this$serverPort == null ? other$serverPort != null : !this$serverPort.equals(other$serverPort)) return false;
    final java.lang.Object this$oapServices = this.getOapServices();
    final java.lang.Object other$oapServices = other.getOapServices();
    if (this$oapServices == null ? other$oapServices != null : !this$oapServices.equals(other$oapServices)) return false;
    final java.lang.Object this$zipkinServices = this.getZipkinServices();
    final java.lang.Object other$zipkinServices = other.getZipkinServices();
    if (this$zipkinServices == null ? other$zipkinServices != null : !this$zipkinServices.equals(other$zipkinServices)) return false;
    return true;
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  protected boolean canEqual(final java.lang.Object other) {
    return other instanceof Configuration;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final java.lang.Object $serverPort = this.getServerPort();
    result = result * PRIME + ($serverPort == null ? 43 : $serverPort.hashCode());
    final java.lang.Object $oapServices = this.getOapServices();
    result = result * PRIME + ($oapServices == null ? 43 : $oapServices.hashCode());
    final java.lang.Object $zipkinServices = this.getZipkinServices();
    result = result * PRIME + ($zipkinServices == null ? 43 : $zipkinServices.hashCode());
    return result;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public java.lang.String toString() {
    return "Configuration(serverPort=" + this.getServerPort() + ", oapServices=" + this.getOapServices() + ", zipkinServices=" + this.getZipkinServices() + ")";
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public Configuration() {
  }

  @java.lang.SuppressWarnings("all")
  @lombok.Generated
  public Configuration(final String serverPort, final String oapServices, final String zipkinServices) {
    this.serverPort = serverPort;
    this.oapServices = oapServices;
    this.zipkinServices = zipkinServices;
  }
}
