// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/profiling/Continuous.proto

package org.apache.skywalking.apm.network.ebpf.profiling.v3;

/**
 * Protobuf type {@code skywalking.v3.ContinuousProfilingReport}
 */
public final class ContinuousProfilingReport extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.ContinuousProfilingReport)
    ContinuousProfilingReportOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ContinuousProfilingReport.newBuilder() to construct.
  private ContinuousProfilingReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ContinuousProfilingReport() {
    layer_ = "";
    serviceName_ = "";
    instanceName_ = "";
    processName_ = "";
    causes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ContinuousProfilingReport();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ContinuousProfilingReport(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            layer_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            serviceName_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            instanceName_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            processName_ = s;
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              causes_ = new java.util.ArrayList<org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause>();
              mutable_bitField0_ |= 0x00000001;
            }
            causes_.add(
                input.readMessage(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.parser(), extensionRegistry));
            break;
          }
          case 48: {

            duration_ = input.readInt32();
            break;
          }
          case 58: {
            org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask.Builder subBuilder = null;
            if (targetTaskCase_ == 7) {
              subBuilder = ((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask) targetTask_).toBuilder();
            }
            targetTask_ =
                input.readMessage(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask) targetTask_);
              targetTask_ = subBuilder.buildPartial();
            }
            targetTaskCase_ = 7;
            break;
          }
          case 66: {
            org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask.Builder subBuilder = null;
            if (targetTaskCase_ == 8) {
              subBuilder = ((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask) targetTask_).toBuilder();
            }
            targetTask_ =
                input.readMessage(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask) targetTask_);
              targetTask_ = subBuilder.buildPartial();
            }
            targetTaskCase_ = 8;
            break;
          }
          case 74: {
            org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask.Builder subBuilder = null;
            if (targetTaskCase_ == 9) {
              subBuilder = ((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask) targetTask_).toBuilder();
            }
            targetTask_ =
                input.readMessage(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask) targetTask_);
              targetTask_ = subBuilder.buildPartial();
            }
            targetTaskCase_ = 9;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        causes_ = java.util.Collections.unmodifiableList(causes_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.skywalking.apm.network.ebpf.profiling.v3.Continuous.internal_static_skywalking_v3_ContinuousProfilingReport_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.skywalking.apm.network.ebpf.profiling.v3.Continuous.internal_static_skywalking_v3_ContinuousProfilingReport_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport.class, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport.Builder.class);
  }

  private int targetTaskCase_ = 0;
  private java.lang.Object targetTask_;
  public enum TargetTaskCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    ONCPU(7),
    OFFCPU(8),
    NETWORK(9),
    TARGETTASK_NOT_SET(0);
    private final int value;
    private TargetTaskCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TargetTaskCase valueOf(int value) {
      return forNumber(value);
    }

    public static TargetTaskCase forNumber(int value) {
      switch (value) {
        case 7: return ONCPU;
        case 8: return OFFCPU;
        case 9: return NETWORK;
        case 0: return TARGETTASK_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TargetTaskCase
  getTargetTaskCase() {
    return TargetTaskCase.forNumber(
        targetTaskCase_);
  }

  public static final int LAYER_FIELD_NUMBER = 1;
  private volatile java.lang.Object layer_;
  /**
   * <pre>
   * over threshold process entity
   * </pre>
   *
   * <code>string layer = 1;</code>
   * @return The layer.
   */
  @java.lang.Override
  public java.lang.String getLayer() {
    java.lang.Object ref = layer_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      layer_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * over threshold process entity
   * </pre>
   *
   * <code>string layer = 1;</code>
   * @return The bytes for layer.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLayerBytes() {
    java.lang.Object ref = layer_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      layer_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICENAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object serviceName_;
  /**
   * <code>string serviceName = 2;</code>
   * @return The serviceName.
   */
  @java.lang.Override
  public java.lang.String getServiceName() {
    java.lang.Object ref = serviceName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      serviceName_ = s;
      return s;
    }
  }
  /**
   * <code>string serviceName = 2;</code>
   * @return The bytes for serviceName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getServiceNameBytes() {
    java.lang.Object ref = serviceName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      serviceName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INSTANCENAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object instanceName_;
  /**
   * <code>string instanceName = 3;</code>
   * @return The instanceName.
   */
  @java.lang.Override
  public java.lang.String getInstanceName() {
    java.lang.Object ref = instanceName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      instanceName_ = s;
      return s;
    }
  }
  /**
   * <code>string instanceName = 3;</code>
   * @return The bytes for instanceName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getInstanceNameBytes() {
    java.lang.Object ref = instanceName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      instanceName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROCESSNAME_FIELD_NUMBER = 4;
  private volatile java.lang.Object processName_;
  /**
   * <code>string processName = 4;</code>
   * @return The processName.
   */
  @java.lang.Override
  public java.lang.String getProcessName() {
    java.lang.Object ref = processName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      processName_ = s;
      return s;
    }
  }
  /**
   * <code>string processName = 4;</code>
   * @return The bytes for processName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getProcessNameBytes() {
    java.lang.Object ref = processName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      processName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CAUSES_FIELD_NUMBER = 5;
  private java.util.List<org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause> causes_;
  /**
   * <pre>
   * reached thresholds causes
   * </pre>
   *
   * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
   */
  @java.lang.Override
  public java.util.List<org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause> getCausesList() {
    return causes_;
  }
  /**
   * <pre>
   * reached thresholds causes
   * </pre>
   *
   * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCauseOrBuilder> 
      getCausesOrBuilderList() {
    return causes_;
  }
  /**
   * <pre>
   * reached thresholds causes
   * </pre>
   *
   * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
   */
  @java.lang.Override
  public int getCausesCount() {
    return causes_.size();
  }
  /**
   * <pre>
   * reached thresholds causes
   * </pre>
   *
   * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause getCauses(int index) {
    return causes_.get(index);
  }
  /**
   * <pre>
   * reached thresholds causes
   * </pre>
   *
   * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCauseOrBuilder getCausesOrBuilder(
      int index) {
    return causes_.get(index);
  }

  public static final int DURATION_FIELD_NUMBER = 6;
  private int duration_;
  /**
   * <pre>
   * The execution duration for this triggered profiling.
   * This is set at the agent side.
   * </pre>
   *
   * <code>int32 duration = 6;</code>
   * @return The duration.
   */
  @java.lang.Override
  public int getDuration() {
    return duration_;
  }

  public static final int ONCPU_FIELD_NUMBER = 7;
  /**
   * <code>.skywalking.v3.ContinuousOnCPUProfilingTask onCPU = 7;</code>
   * @return Whether the onCPU field is set.
   */
  @java.lang.Override
  public boolean hasOnCPU() {
    return targetTaskCase_ == 7;
  }
  /**
   * <code>.skywalking.v3.ContinuousOnCPUProfilingTask onCPU = 7;</code>
   * @return The onCPU.
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask getOnCPU() {
    if (targetTaskCase_ == 7) {
       return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask) targetTask_;
    }
    return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.ContinuousOnCPUProfilingTask onCPU = 7;</code>
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTaskOrBuilder getOnCPUOrBuilder() {
    if (targetTaskCase_ == 7) {
       return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask) targetTask_;
    }
    return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask.getDefaultInstance();
  }

  public static final int OFFCPU_FIELD_NUMBER = 8;
  /**
   * <code>.skywalking.v3.ContinuousOffCPUProfilingTask offCPU = 8;</code>
   * @return Whether the offCPU field is set.
   */
  @java.lang.Override
  public boolean hasOffCPU() {
    return targetTaskCase_ == 8;
  }
  /**
   * <code>.skywalking.v3.ContinuousOffCPUProfilingTask offCPU = 8;</code>
   * @return The offCPU.
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask getOffCPU() {
    if (targetTaskCase_ == 8) {
       return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask) targetTask_;
    }
    return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.ContinuousOffCPUProfilingTask offCPU = 8;</code>
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTaskOrBuilder getOffCPUOrBuilder() {
    if (targetTaskCase_ == 8) {
       return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask) targetTask_;
    }
    return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask.getDefaultInstance();
  }

  public static final int NETWORK_FIELD_NUMBER = 9;
  /**
   * <code>.skywalking.v3.ContinuousNetworkProfilingTask network = 9;</code>
   * @return Whether the network field is set.
   */
  @java.lang.Override
  public boolean hasNetwork() {
    return targetTaskCase_ == 9;
  }
  /**
   * <code>.skywalking.v3.ContinuousNetworkProfilingTask network = 9;</code>
   * @return The network.
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask getNetwork() {
    if (targetTaskCase_ == 9) {
       return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask) targetTask_;
    }
    return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.ContinuousNetworkProfilingTask network = 9;</code>
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTaskOrBuilder getNetworkOrBuilder() {
    if (targetTaskCase_ == 9) {
       return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask) targetTask_;
    }
    return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(layer_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, layer_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, serviceName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(instanceName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, instanceName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(processName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, processName_);
    }
    for (int i = 0; i < causes_.size(); i++) {
      output.writeMessage(5, causes_.get(i));
    }
    if (duration_ != 0) {
      output.writeInt32(6, duration_);
    }
    if (targetTaskCase_ == 7) {
      output.writeMessage(7, (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask) targetTask_);
    }
    if (targetTaskCase_ == 8) {
      output.writeMessage(8, (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask) targetTask_);
    }
    if (targetTaskCase_ == 9) {
      output.writeMessage(9, (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask) targetTask_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(layer_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, layer_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, serviceName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(instanceName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, instanceName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(processName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, processName_);
    }
    for (int i = 0; i < causes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, causes_.get(i));
    }
    if (duration_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, duration_);
    }
    if (targetTaskCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask) targetTask_);
    }
    if (targetTaskCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask) targetTask_);
    }
    if (targetTaskCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask) targetTask_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport)) {
      return super.equals(obj);
    }
    org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport other = (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport) obj;

    if (!getLayer()
        .equals(other.getLayer())) return false;
    if (!getServiceName()
        .equals(other.getServiceName())) return false;
    if (!getInstanceName()
        .equals(other.getInstanceName())) return false;
    if (!getProcessName()
        .equals(other.getProcessName())) return false;
    if (!getCausesList()
        .equals(other.getCausesList())) return false;
    if (getDuration()
        != other.getDuration()) return false;
    if (!getTargetTaskCase().equals(other.getTargetTaskCase())) return false;
    switch (targetTaskCase_) {
      case 7:
        if (!getOnCPU()
            .equals(other.getOnCPU())) return false;
        break;
      case 8:
        if (!getOffCPU()
            .equals(other.getOffCPU())) return false;
        break;
      case 9:
        if (!getNetwork()
            .equals(other.getNetwork())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + LAYER_FIELD_NUMBER;
    hash = (53 * hash) + getLayer().hashCode();
    hash = (37 * hash) + SERVICENAME_FIELD_NUMBER;
    hash = (53 * hash) + getServiceName().hashCode();
    hash = (37 * hash) + INSTANCENAME_FIELD_NUMBER;
    hash = (53 * hash) + getInstanceName().hashCode();
    hash = (37 * hash) + PROCESSNAME_FIELD_NUMBER;
    hash = (53 * hash) + getProcessName().hashCode();
    if (getCausesCount() > 0) {
      hash = (37 * hash) + CAUSES_FIELD_NUMBER;
      hash = (53 * hash) + getCausesList().hashCode();
    }
    hash = (37 * hash) + DURATION_FIELD_NUMBER;
    hash = (53 * hash) + getDuration();
    switch (targetTaskCase_) {
      case 7:
        hash = (37 * hash) + ONCPU_FIELD_NUMBER;
        hash = (53 * hash) + getOnCPU().hashCode();
        break;
      case 8:
        hash = (37 * hash) + OFFCPU_FIELD_NUMBER;
        hash = (53 * hash) + getOffCPU().hashCode();
        break;
      case 9:
        hash = (37 * hash) + NETWORK_FIELD_NUMBER;
        hash = (53 * hash) + getNetwork().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.ContinuousProfilingReport}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.ContinuousProfilingReport)
      org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReportOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.skywalking.apm.network.ebpf.profiling.v3.Continuous.internal_static_skywalking_v3_ContinuousProfilingReport_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.skywalking.apm.network.ebpf.profiling.v3.Continuous.internal_static_skywalking_v3_ContinuousProfilingReport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport.class, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport.Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getCausesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      layer_ = "";

      serviceName_ = "";

      instanceName_ = "";

      processName_ = "";

      if (causesBuilder_ == null) {
        causes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        causesBuilder_.clear();
      }
      duration_ = 0;

      targetTaskCase_ = 0;
      targetTask_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.skywalking.apm.network.ebpf.profiling.v3.Continuous.internal_static_skywalking_v3_ContinuousProfilingReport_descriptor;
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport getDefaultInstanceForType() {
      return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport build() {
      org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport buildPartial() {
      org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport result = new org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport(this);
      int from_bitField0_ = bitField0_;
      result.layer_ = layer_;
      result.serviceName_ = serviceName_;
      result.instanceName_ = instanceName_;
      result.processName_ = processName_;
      if (causesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          causes_ = java.util.Collections.unmodifiableList(causes_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.causes_ = causes_;
      } else {
        result.causes_ = causesBuilder_.build();
      }
      result.duration_ = duration_;
      if (targetTaskCase_ == 7) {
        if (onCPUBuilder_ == null) {
          result.targetTask_ = targetTask_;
        } else {
          result.targetTask_ = onCPUBuilder_.build();
        }
      }
      if (targetTaskCase_ == 8) {
        if (offCPUBuilder_ == null) {
          result.targetTask_ = targetTask_;
        } else {
          result.targetTask_ = offCPUBuilder_.build();
        }
      }
      if (targetTaskCase_ == 9) {
        if (networkBuilder_ == null) {
          result.targetTask_ = targetTask_;
        } else {
          result.targetTask_ = networkBuilder_.build();
        }
      }
      result.targetTaskCase_ = targetTaskCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport) {
        return mergeFrom((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport other) {
      if (other == org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport.getDefaultInstance()) return this;
      if (!other.getLayer().isEmpty()) {
        layer_ = other.layer_;
        onChanged();
      }
      if (!other.getServiceName().isEmpty()) {
        serviceName_ = other.serviceName_;
        onChanged();
      }
      if (!other.getInstanceName().isEmpty()) {
        instanceName_ = other.instanceName_;
        onChanged();
      }
      if (!other.getProcessName().isEmpty()) {
        processName_ = other.processName_;
        onChanged();
      }
      if (causesBuilder_ == null) {
        if (!other.causes_.isEmpty()) {
          if (causes_.isEmpty()) {
            causes_ = other.causes_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCausesIsMutable();
            causes_.addAll(other.causes_);
          }
          onChanged();
        }
      } else {
        if (!other.causes_.isEmpty()) {
          if (causesBuilder_.isEmpty()) {
            causesBuilder_.dispose();
            causesBuilder_ = null;
            causes_ = other.causes_;
            bitField0_ = (bitField0_ & ~0x00000001);
            causesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCausesFieldBuilder() : null;
          } else {
            causesBuilder_.addAllMessages(other.causes_);
          }
        }
      }
      if (other.getDuration() != 0) {
        setDuration(other.getDuration());
      }
      switch (other.getTargetTaskCase()) {
        case ONCPU: {
          mergeOnCPU(other.getOnCPU());
          break;
        }
        case OFFCPU: {
          mergeOffCPU(other.getOffCPU());
          break;
        }
        case NETWORK: {
          mergeNetwork(other.getNetwork());
          break;
        }
        case TARGETTASK_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int targetTaskCase_ = 0;
    private java.lang.Object targetTask_;
    public TargetTaskCase
        getTargetTaskCase() {
      return TargetTaskCase.forNumber(
          targetTaskCase_);
    }

    public Builder clearTargetTask() {
      targetTaskCase_ = 0;
      targetTask_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object layer_ = "";
    /**
     * <pre>
     * over threshold process entity
     * </pre>
     *
     * <code>string layer = 1;</code>
     * @return The layer.
     */
    public java.lang.String getLayer() {
      java.lang.Object ref = layer_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        layer_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * over threshold process entity
     * </pre>
     *
     * <code>string layer = 1;</code>
     * @return The bytes for layer.
     */
    public com.google.protobuf.ByteString
        getLayerBytes() {
      java.lang.Object ref = layer_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        layer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * over threshold process entity
     * </pre>
     *
     * <code>string layer = 1;</code>
     * @param value The layer to set.
     * @return This builder for chaining.
     */
    public Builder setLayer(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      layer_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * over threshold process entity
     * </pre>
     *
     * <code>string layer = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearLayer() {
      
      layer_ = getDefaultInstance().getLayer();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * over threshold process entity
     * </pre>
     *
     * <code>string layer = 1;</code>
     * @param value The bytes for layer to set.
     * @return This builder for chaining.
     */
    public Builder setLayerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      layer_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object serviceName_ = "";
    /**
     * <code>string serviceName = 2;</code>
     * @return The serviceName.
     */
    public java.lang.String getServiceName() {
      java.lang.Object ref = serviceName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serviceName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string serviceName = 2;</code>
     * @return The bytes for serviceName.
     */
    public com.google.protobuf.ByteString
        getServiceNameBytes() {
      java.lang.Object ref = serviceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serviceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string serviceName = 2;</code>
     * @param value The serviceName to set.
     * @return This builder for chaining.
     */
    public Builder setServiceName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      serviceName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string serviceName = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearServiceName() {
      
      serviceName_ = getDefaultInstance().getServiceName();
      onChanged();
      return this;
    }
    /**
     * <code>string serviceName = 2;</code>
     * @param value The bytes for serviceName to set.
     * @return This builder for chaining.
     */
    public Builder setServiceNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      serviceName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object instanceName_ = "";
    /**
     * <code>string instanceName = 3;</code>
     * @return The instanceName.
     */
    public java.lang.String getInstanceName() {
      java.lang.Object ref = instanceName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        instanceName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string instanceName = 3;</code>
     * @return The bytes for instanceName.
     */
    public com.google.protobuf.ByteString
        getInstanceNameBytes() {
      java.lang.Object ref = instanceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        instanceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string instanceName = 3;</code>
     * @param value The instanceName to set.
     * @return This builder for chaining.
     */
    public Builder setInstanceName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      instanceName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string instanceName = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearInstanceName() {
      
      instanceName_ = getDefaultInstance().getInstanceName();
      onChanged();
      return this;
    }
    /**
     * <code>string instanceName = 3;</code>
     * @param value The bytes for instanceName to set.
     * @return This builder for chaining.
     */
    public Builder setInstanceNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      instanceName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object processName_ = "";
    /**
     * <code>string processName = 4;</code>
     * @return The processName.
     */
    public java.lang.String getProcessName() {
      java.lang.Object ref = processName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        processName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string processName = 4;</code>
     * @return The bytes for processName.
     */
    public com.google.protobuf.ByteString
        getProcessNameBytes() {
      java.lang.Object ref = processName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        processName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string processName = 4;</code>
     * @param value The processName to set.
     * @return This builder for chaining.
     */
    public Builder setProcessName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      processName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string processName = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearProcessName() {
      
      processName_ = getDefaultInstance().getProcessName();
      onChanged();
      return this;
    }
    /**
     * <code>string processName = 4;</code>
     * @param value The bytes for processName to set.
     * @return This builder for chaining.
     */
    public Builder setProcessNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      processName_ = value;
      onChanged();
      return this;
    }

    private java.util.List<org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause> causes_ =
      java.util.Collections.emptyList();
    private void ensureCausesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        causes_ = new java.util.ArrayList<org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause>(causes_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCauseOrBuilder> causesBuilder_;

    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public java.util.List<org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause> getCausesList() {
      if (causesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(causes_);
      } else {
        return causesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public int getCausesCount() {
      if (causesBuilder_ == null) {
        return causes_.size();
      } else {
        return causesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause getCauses(int index) {
      if (causesBuilder_ == null) {
        return causes_.get(index);
      } else {
        return causesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public Builder setCauses(
        int index, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause value) {
      if (causesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCausesIsMutable();
        causes_.set(index, value);
        onChanged();
      } else {
        causesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public Builder setCauses(
        int index, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.Builder builderForValue) {
      if (causesBuilder_ == null) {
        ensureCausesIsMutable();
        causes_.set(index, builderForValue.build());
        onChanged();
      } else {
        causesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public Builder addCauses(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause value) {
      if (causesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCausesIsMutable();
        causes_.add(value);
        onChanged();
      } else {
        causesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public Builder addCauses(
        int index, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause value) {
      if (causesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCausesIsMutable();
        causes_.add(index, value);
        onChanged();
      } else {
        causesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public Builder addCauses(
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.Builder builderForValue) {
      if (causesBuilder_ == null) {
        ensureCausesIsMutable();
        causes_.add(builderForValue.build());
        onChanged();
      } else {
        causesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public Builder addCauses(
        int index, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.Builder builderForValue) {
      if (causesBuilder_ == null) {
        ensureCausesIsMutable();
        causes_.add(index, builderForValue.build());
        onChanged();
      } else {
        causesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public Builder addAllCauses(
        java.lang.Iterable<? extends org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause> values) {
      if (causesBuilder_ == null) {
        ensureCausesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, causes_);
        onChanged();
      } else {
        causesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public Builder clearCauses() {
      if (causesBuilder_ == null) {
        causes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        causesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public Builder removeCauses(int index) {
      if (causesBuilder_ == null) {
        ensureCausesIsMutable();
        causes_.remove(index);
        onChanged();
      } else {
        causesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.Builder getCausesBuilder(
        int index) {
      return getCausesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCauseOrBuilder getCausesOrBuilder(
        int index) {
      if (causesBuilder_ == null) {
        return causes_.get(index);  } else {
        return causesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public java.util.List<? extends org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCauseOrBuilder> 
         getCausesOrBuilderList() {
      if (causesBuilder_ != null) {
        return causesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(causes_);
      }
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.Builder addCausesBuilder() {
      return getCausesFieldBuilder().addBuilder(
          org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.getDefaultInstance());
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.Builder addCausesBuilder(
        int index) {
      return getCausesFieldBuilder().addBuilder(
          index, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.getDefaultInstance());
    }
    /**
     * <pre>
     * reached thresholds causes
     * </pre>
     *
     * <code>repeated .skywalking.v3.ContinuousProfilingCause causes = 5;</code>
     */
    public java.util.List<org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.Builder> 
         getCausesBuilderList() {
      return getCausesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCauseOrBuilder> 
        getCausesFieldBuilder() {
      if (causesBuilder_ == null) {
        causesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCauseOrBuilder>(
                causes_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        causes_ = null;
      }
      return causesBuilder_;
    }

    private int duration_ ;
    /**
     * <pre>
     * The execution duration for this triggered profiling.
     * This is set at the agent side.
     * </pre>
     *
     * <code>int32 duration = 6;</code>
     * @return The duration.
     */
    @java.lang.Override
    public int getDuration() {
      return duration_;
    }
    /**
     * <pre>
     * The execution duration for this triggered profiling.
     * This is set at the agent side.
     * </pre>
     *
     * <code>int32 duration = 6;</code>
     * @param value The duration to set.
     * @return This builder for chaining.
     */
    public Builder setDuration(int value) {
      
      duration_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The execution duration for this triggered profiling.
     * This is set at the agent side.
     * </pre>
     *
     * <code>int32 duration = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearDuration() {
      
      duration_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTaskOrBuilder> onCPUBuilder_;
    /**
     * <code>.skywalking.v3.ContinuousOnCPUProfilingTask onCPU = 7;</code>
     * @return Whether the onCPU field is set.
     */
    @java.lang.Override
    public boolean hasOnCPU() {
      return targetTaskCase_ == 7;
    }
    /**
     * <code>.skywalking.v3.ContinuousOnCPUProfilingTask onCPU = 7;</code>
     * @return The onCPU.
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask getOnCPU() {
      if (onCPUBuilder_ == null) {
        if (targetTaskCase_ == 7) {
          return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask) targetTask_;
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask.getDefaultInstance();
      } else {
        if (targetTaskCase_ == 7) {
          return onCPUBuilder_.getMessage();
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.ContinuousOnCPUProfilingTask onCPU = 7;</code>
     */
    public Builder setOnCPU(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask value) {
      if (onCPUBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        targetTask_ = value;
        onChanged();
      } else {
        onCPUBuilder_.setMessage(value);
      }
      targetTaskCase_ = 7;
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousOnCPUProfilingTask onCPU = 7;</code>
     */
    public Builder setOnCPU(
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask.Builder builderForValue) {
      if (onCPUBuilder_ == null) {
        targetTask_ = builderForValue.build();
        onChanged();
      } else {
        onCPUBuilder_.setMessage(builderForValue.build());
      }
      targetTaskCase_ = 7;
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousOnCPUProfilingTask onCPU = 7;</code>
     */
    public Builder mergeOnCPU(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask value) {
      if (onCPUBuilder_ == null) {
        if (targetTaskCase_ == 7 &&
            targetTask_ != org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask.getDefaultInstance()) {
          targetTask_ = org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask.newBuilder((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask) targetTask_)
              .mergeFrom(value).buildPartial();
        } else {
          targetTask_ = value;
        }
        onChanged();
      } else {
        if (targetTaskCase_ == 7) {
          onCPUBuilder_.mergeFrom(value);
        }
        onCPUBuilder_.setMessage(value);
      }
      targetTaskCase_ = 7;
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousOnCPUProfilingTask onCPU = 7;</code>
     */
    public Builder clearOnCPU() {
      if (onCPUBuilder_ == null) {
        if (targetTaskCase_ == 7) {
          targetTaskCase_ = 0;
          targetTask_ = null;
          onChanged();
        }
      } else {
        if (targetTaskCase_ == 7) {
          targetTaskCase_ = 0;
          targetTask_ = null;
        }
        onCPUBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousOnCPUProfilingTask onCPU = 7;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask.Builder getOnCPUBuilder() {
      return getOnCPUFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.ContinuousOnCPUProfilingTask onCPU = 7;</code>
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTaskOrBuilder getOnCPUOrBuilder() {
      if ((targetTaskCase_ == 7) && (onCPUBuilder_ != null)) {
        return onCPUBuilder_.getMessageOrBuilder();
      } else {
        if (targetTaskCase_ == 7) {
          return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask) targetTask_;
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.ContinuousOnCPUProfilingTask onCPU = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTaskOrBuilder> 
        getOnCPUFieldBuilder() {
      if (onCPUBuilder_ == null) {
        if (!(targetTaskCase_ == 7)) {
          targetTask_ = org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask.getDefaultInstance();
        }
        onCPUBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTaskOrBuilder>(
                (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOnCPUProfilingTask) targetTask_,
                getParentForChildren(),
                isClean());
        targetTask_ = null;
      }
      targetTaskCase_ = 7;
      onChanged();;
      return onCPUBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTaskOrBuilder> offCPUBuilder_;
    /**
     * <code>.skywalking.v3.ContinuousOffCPUProfilingTask offCPU = 8;</code>
     * @return Whether the offCPU field is set.
     */
    @java.lang.Override
    public boolean hasOffCPU() {
      return targetTaskCase_ == 8;
    }
    /**
     * <code>.skywalking.v3.ContinuousOffCPUProfilingTask offCPU = 8;</code>
     * @return The offCPU.
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask getOffCPU() {
      if (offCPUBuilder_ == null) {
        if (targetTaskCase_ == 8) {
          return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask) targetTask_;
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask.getDefaultInstance();
      } else {
        if (targetTaskCase_ == 8) {
          return offCPUBuilder_.getMessage();
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.ContinuousOffCPUProfilingTask offCPU = 8;</code>
     */
    public Builder setOffCPU(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask value) {
      if (offCPUBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        targetTask_ = value;
        onChanged();
      } else {
        offCPUBuilder_.setMessage(value);
      }
      targetTaskCase_ = 8;
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousOffCPUProfilingTask offCPU = 8;</code>
     */
    public Builder setOffCPU(
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask.Builder builderForValue) {
      if (offCPUBuilder_ == null) {
        targetTask_ = builderForValue.build();
        onChanged();
      } else {
        offCPUBuilder_.setMessage(builderForValue.build());
      }
      targetTaskCase_ = 8;
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousOffCPUProfilingTask offCPU = 8;</code>
     */
    public Builder mergeOffCPU(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask value) {
      if (offCPUBuilder_ == null) {
        if (targetTaskCase_ == 8 &&
            targetTask_ != org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask.getDefaultInstance()) {
          targetTask_ = org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask.newBuilder((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask) targetTask_)
              .mergeFrom(value).buildPartial();
        } else {
          targetTask_ = value;
        }
        onChanged();
      } else {
        if (targetTaskCase_ == 8) {
          offCPUBuilder_.mergeFrom(value);
        }
        offCPUBuilder_.setMessage(value);
      }
      targetTaskCase_ = 8;
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousOffCPUProfilingTask offCPU = 8;</code>
     */
    public Builder clearOffCPU() {
      if (offCPUBuilder_ == null) {
        if (targetTaskCase_ == 8) {
          targetTaskCase_ = 0;
          targetTask_ = null;
          onChanged();
        }
      } else {
        if (targetTaskCase_ == 8) {
          targetTaskCase_ = 0;
          targetTask_ = null;
        }
        offCPUBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousOffCPUProfilingTask offCPU = 8;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask.Builder getOffCPUBuilder() {
      return getOffCPUFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.ContinuousOffCPUProfilingTask offCPU = 8;</code>
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTaskOrBuilder getOffCPUOrBuilder() {
      if ((targetTaskCase_ == 8) && (offCPUBuilder_ != null)) {
        return offCPUBuilder_.getMessageOrBuilder();
      } else {
        if (targetTaskCase_ == 8) {
          return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask) targetTask_;
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.ContinuousOffCPUProfilingTask offCPU = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTaskOrBuilder> 
        getOffCPUFieldBuilder() {
      if (offCPUBuilder_ == null) {
        if (!(targetTaskCase_ == 8)) {
          targetTask_ = org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask.getDefaultInstance();
        }
        offCPUBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTaskOrBuilder>(
                (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousOffCPUProfilingTask) targetTask_,
                getParentForChildren(),
                isClean());
        targetTask_ = null;
      }
      targetTaskCase_ = 8;
      onChanged();;
      return offCPUBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTaskOrBuilder> networkBuilder_;
    /**
     * <code>.skywalking.v3.ContinuousNetworkProfilingTask network = 9;</code>
     * @return Whether the network field is set.
     */
    @java.lang.Override
    public boolean hasNetwork() {
      return targetTaskCase_ == 9;
    }
    /**
     * <code>.skywalking.v3.ContinuousNetworkProfilingTask network = 9;</code>
     * @return The network.
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask getNetwork() {
      if (networkBuilder_ == null) {
        if (targetTaskCase_ == 9) {
          return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask) targetTask_;
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask.getDefaultInstance();
      } else {
        if (targetTaskCase_ == 9) {
          return networkBuilder_.getMessage();
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.ContinuousNetworkProfilingTask network = 9;</code>
     */
    public Builder setNetwork(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask value) {
      if (networkBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        targetTask_ = value;
        onChanged();
      } else {
        networkBuilder_.setMessage(value);
      }
      targetTaskCase_ = 9;
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousNetworkProfilingTask network = 9;</code>
     */
    public Builder setNetwork(
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask.Builder builderForValue) {
      if (networkBuilder_ == null) {
        targetTask_ = builderForValue.build();
        onChanged();
      } else {
        networkBuilder_.setMessage(builderForValue.build());
      }
      targetTaskCase_ = 9;
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousNetworkProfilingTask network = 9;</code>
     */
    public Builder mergeNetwork(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask value) {
      if (networkBuilder_ == null) {
        if (targetTaskCase_ == 9 &&
            targetTask_ != org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask.getDefaultInstance()) {
          targetTask_ = org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask.newBuilder((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask) targetTask_)
              .mergeFrom(value).buildPartial();
        } else {
          targetTask_ = value;
        }
        onChanged();
      } else {
        if (targetTaskCase_ == 9) {
          networkBuilder_.mergeFrom(value);
        }
        networkBuilder_.setMessage(value);
      }
      targetTaskCase_ = 9;
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousNetworkProfilingTask network = 9;</code>
     */
    public Builder clearNetwork() {
      if (networkBuilder_ == null) {
        if (targetTaskCase_ == 9) {
          targetTaskCase_ = 0;
          targetTask_ = null;
          onChanged();
        }
      } else {
        if (targetTaskCase_ == 9) {
          targetTaskCase_ = 0;
          targetTask_ = null;
        }
        networkBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousNetworkProfilingTask network = 9;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask.Builder getNetworkBuilder() {
      return getNetworkFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.ContinuousNetworkProfilingTask network = 9;</code>
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTaskOrBuilder getNetworkOrBuilder() {
      if ((targetTaskCase_ == 9) && (networkBuilder_ != null)) {
        return networkBuilder_.getMessageOrBuilder();
      } else {
        if (targetTaskCase_ == 9) {
          return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask) targetTask_;
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.ContinuousNetworkProfilingTask network = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTaskOrBuilder> 
        getNetworkFieldBuilder() {
      if (networkBuilder_ == null) {
        if (!(targetTaskCase_ == 9)) {
          targetTask_ = org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask.getDefaultInstance();
        }
        networkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTaskOrBuilder>(
                (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousNetworkProfilingTask) targetTask_,
                getParentForChildren(),
                isClean());
        targetTask_ = null;
      }
      targetTaskCase_ = 9;
      onChanged();;
      return networkBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.ContinuousProfilingReport)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.ContinuousProfilingReport)
  private static final org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport();
  }

  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ContinuousProfilingReport>
      PARSER = new com.google.protobuf.AbstractParser<ContinuousProfilingReport>() {
    @java.lang.Override
    public ContinuousProfilingReport parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ContinuousProfilingReport(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ContinuousProfilingReport> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ContinuousProfilingReport> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingReport getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

