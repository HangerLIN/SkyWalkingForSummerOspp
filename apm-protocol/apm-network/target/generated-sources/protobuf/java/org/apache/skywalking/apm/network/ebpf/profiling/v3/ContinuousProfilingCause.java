// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/profiling/Continuous.proto

package org.apache.skywalking.apm.network.ebpf.profiling.v3;

/**
 * Protobuf type {@code skywalking.v3.ContinuousProfilingCause}
 */
public final class ContinuousProfilingCause extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.ContinuousProfilingCause)
    ContinuousProfilingCauseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ContinuousProfilingCause.newBuilder() to construct.
  private ContinuousProfilingCause(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ContinuousProfilingCause() {
    type_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ContinuousProfilingCause();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ContinuousProfilingCause(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 18: {
            org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause.Builder subBuilder = null;
            if (causeCase_ == 2) {
              subBuilder = ((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause) cause_).toBuilder();
            }
            cause_ =
                input.readMessage(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause) cause_);
              cause_ = subBuilder.buildPartial();
            }
            causeCase_ = 2;
            break;
          }
          case 26: {
            org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause.Builder subBuilder = null;
            if (causeCase_ == 3) {
              subBuilder = ((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause) cause_).toBuilder();
            }
            cause_ =
                input.readMessage(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause) cause_);
              cause_ = subBuilder.buildPartial();
            }
            causeCase_ = 3;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.skywalking.apm.network.ebpf.profiling.v3.Continuous.internal_static_skywalking_v3_ContinuousProfilingCause_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.skywalking.apm.network.ebpf.profiling.v3.Continuous.internal_static_skywalking_v3_ContinuousProfilingCause_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.class, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.Builder.class);
  }

  private int causeCase_ = 0;
  private java.lang.Object cause_;
  public enum CauseCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    SINGLEVALUE(2),
    URI(3),
    CAUSE_NOT_SET(0);
    private final int value;
    private CauseCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CauseCase valueOf(int value) {
      return forNumber(value);
    }

    public static CauseCase forNumber(int value) {
      switch (value) {
        case 2: return SINGLEVALUE;
        case 3: return URI;
        case 0: return CAUSE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public CauseCase
  getCauseCase() {
    return CauseCase.forNumber(
        causeCase_);
  }

  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_;
  /**
   * <code>.skywalking.v3.ContinuousProfilingTriggeredMonitorType type = 1;</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <code>.skywalking.v3.ContinuousProfilingTriggeredMonitorType type = 1;</code>
   * @return The type.
   */
  @java.lang.Override public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingTriggeredMonitorType getType() {
    @SuppressWarnings("deprecation")
    org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingTriggeredMonitorType result = org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingTriggeredMonitorType.valueOf(type_);
    return result == null ? org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingTriggeredMonitorType.UNRECOGNIZED : result;
  }

  public static final int SINGLEVALUE_FIELD_NUMBER = 2;
  /**
   * <code>.skywalking.v3.ContinuousProfilingSingleValueCause singleValue = 2;</code>
   * @return Whether the singleValue field is set.
   */
  @java.lang.Override
  public boolean hasSingleValue() {
    return causeCase_ == 2;
  }
  /**
   * <code>.skywalking.v3.ContinuousProfilingSingleValueCause singleValue = 2;</code>
   * @return The singleValue.
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause getSingleValue() {
    if (causeCase_ == 2) {
       return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause) cause_;
    }
    return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.ContinuousProfilingSingleValueCause singleValue = 2;</code>
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCauseOrBuilder getSingleValueOrBuilder() {
    if (causeCase_ == 2) {
       return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause) cause_;
    }
    return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause.getDefaultInstance();
  }

  public static final int URI_FIELD_NUMBER = 3;
  /**
   * <code>.skywalking.v3.ContinuousProfilingURICause uri = 3;</code>
   * @return Whether the uri field is set.
   */
  @java.lang.Override
  public boolean hasUri() {
    return causeCase_ == 3;
  }
  /**
   * <code>.skywalking.v3.ContinuousProfilingURICause uri = 3;</code>
   * @return The uri.
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause getUri() {
    if (causeCase_ == 3) {
       return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause) cause_;
    }
    return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.ContinuousProfilingURICause uri = 3;</code>
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICauseOrBuilder getUriOrBuilder() {
    if (causeCase_ == 3) {
       return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause) cause_;
    }
    return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (type_ != org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingTriggeredMonitorType.ProcessCPU.getNumber()) {
      output.writeEnum(1, type_);
    }
    if (causeCase_ == 2) {
      output.writeMessage(2, (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause) cause_);
    }
    if (causeCase_ == 3) {
      output.writeMessage(3, (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause) cause_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (type_ != org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingTriggeredMonitorType.ProcessCPU.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_);
    }
    if (causeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause) cause_);
    }
    if (causeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause) cause_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause)) {
      return super.equals(obj);
    }
    org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause other = (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause) obj;

    if (type_ != other.type_) return false;
    if (!getCauseCase().equals(other.getCauseCase())) return false;
    switch (causeCase_) {
      case 2:
        if (!getSingleValue()
            .equals(other.getSingleValue())) return false;
        break;
      case 3:
        if (!getUri()
            .equals(other.getUri())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    switch (causeCase_) {
      case 2:
        hash = (37 * hash) + SINGLEVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getSingleValue().hashCode();
        break;
      case 3:
        hash = (37 * hash) + URI_FIELD_NUMBER;
        hash = (53 * hash) + getUri().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.ContinuousProfilingCause}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.ContinuousProfilingCause)
      org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCauseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.skywalking.apm.network.ebpf.profiling.v3.Continuous.internal_static_skywalking_v3_ContinuousProfilingCause_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.skywalking.apm.network.ebpf.profiling.v3.Continuous.internal_static_skywalking_v3_ContinuousProfilingCause_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.class, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      type_ = 0;

      causeCase_ = 0;
      cause_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.skywalking.apm.network.ebpf.profiling.v3.Continuous.internal_static_skywalking_v3_ContinuousProfilingCause_descriptor;
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause getDefaultInstanceForType() {
      return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause build() {
      org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause buildPartial() {
      org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause result = new org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause(this);
      result.type_ = type_;
      if (causeCase_ == 2) {
        if (singleValueBuilder_ == null) {
          result.cause_ = cause_;
        } else {
          result.cause_ = singleValueBuilder_.build();
        }
      }
      if (causeCase_ == 3) {
        if (uriBuilder_ == null) {
          result.cause_ = cause_;
        } else {
          result.cause_ = uriBuilder_.build();
        }
      }
      result.causeCase_ = causeCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause) {
        return mergeFrom((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause other) {
      if (other == org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause.getDefaultInstance()) return this;
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      switch (other.getCauseCase()) {
        case SINGLEVALUE: {
          mergeSingleValue(other.getSingleValue());
          break;
        }
        case URI: {
          mergeUri(other.getUri());
          break;
        }
        case CAUSE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int causeCase_ = 0;
    private java.lang.Object cause_;
    public CauseCase
        getCauseCase() {
      return CauseCase.forNumber(
          causeCase_);
    }

    public Builder clearCause() {
      causeCase_ = 0;
      cause_ = null;
      onChanged();
      return this;
    }


    private int type_ = 0;
    /**
     * <code>.skywalking.v3.ContinuousProfilingTriggeredMonitorType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingTriggeredMonitorType type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingTriggeredMonitorType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingTriggeredMonitorType getType() {
      @SuppressWarnings("deprecation")
      org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingTriggeredMonitorType result = org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingTriggeredMonitorType.valueOf(type_);
      return result == null ? org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingTriggeredMonitorType.UNRECOGNIZED : result;
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingTriggeredMonitorType type = 1;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingTriggeredMonitorType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingTriggeredMonitorType type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCauseOrBuilder> singleValueBuilder_;
    /**
     * <code>.skywalking.v3.ContinuousProfilingSingleValueCause singleValue = 2;</code>
     * @return Whether the singleValue field is set.
     */
    @java.lang.Override
    public boolean hasSingleValue() {
      return causeCase_ == 2;
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingSingleValueCause singleValue = 2;</code>
     * @return The singleValue.
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause getSingleValue() {
      if (singleValueBuilder_ == null) {
        if (causeCase_ == 2) {
          return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause) cause_;
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause.getDefaultInstance();
      } else {
        if (causeCase_ == 2) {
          return singleValueBuilder_.getMessage();
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingSingleValueCause singleValue = 2;</code>
     */
    public Builder setSingleValue(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause value) {
      if (singleValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cause_ = value;
        onChanged();
      } else {
        singleValueBuilder_.setMessage(value);
      }
      causeCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingSingleValueCause singleValue = 2;</code>
     */
    public Builder setSingleValue(
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause.Builder builderForValue) {
      if (singleValueBuilder_ == null) {
        cause_ = builderForValue.build();
        onChanged();
      } else {
        singleValueBuilder_.setMessage(builderForValue.build());
      }
      causeCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingSingleValueCause singleValue = 2;</code>
     */
    public Builder mergeSingleValue(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause value) {
      if (singleValueBuilder_ == null) {
        if (causeCase_ == 2 &&
            cause_ != org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause.getDefaultInstance()) {
          cause_ = org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause.newBuilder((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause) cause_)
              .mergeFrom(value).buildPartial();
        } else {
          cause_ = value;
        }
        onChanged();
      } else {
        if (causeCase_ == 2) {
          singleValueBuilder_.mergeFrom(value);
        }
        singleValueBuilder_.setMessage(value);
      }
      causeCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingSingleValueCause singleValue = 2;</code>
     */
    public Builder clearSingleValue() {
      if (singleValueBuilder_ == null) {
        if (causeCase_ == 2) {
          causeCase_ = 0;
          cause_ = null;
          onChanged();
        }
      } else {
        if (causeCase_ == 2) {
          causeCase_ = 0;
          cause_ = null;
        }
        singleValueBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingSingleValueCause singleValue = 2;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause.Builder getSingleValueBuilder() {
      return getSingleValueFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingSingleValueCause singleValue = 2;</code>
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCauseOrBuilder getSingleValueOrBuilder() {
      if ((causeCase_ == 2) && (singleValueBuilder_ != null)) {
        return singleValueBuilder_.getMessageOrBuilder();
      } else {
        if (causeCase_ == 2) {
          return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause) cause_;
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingSingleValueCause singleValue = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCauseOrBuilder> 
        getSingleValueFieldBuilder() {
      if (singleValueBuilder_ == null) {
        if (!(causeCase_ == 2)) {
          cause_ = org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause.getDefaultInstance();
        }
        singleValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCauseOrBuilder>(
                (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingSingleValueCause) cause_,
                getParentForChildren(),
                isClean());
        cause_ = null;
      }
      causeCase_ = 2;
      onChanged();;
      return singleValueBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICauseOrBuilder> uriBuilder_;
    /**
     * <code>.skywalking.v3.ContinuousProfilingURICause uri = 3;</code>
     * @return Whether the uri field is set.
     */
    @java.lang.Override
    public boolean hasUri() {
      return causeCase_ == 3;
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingURICause uri = 3;</code>
     * @return The uri.
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause getUri() {
      if (uriBuilder_ == null) {
        if (causeCase_ == 3) {
          return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause) cause_;
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause.getDefaultInstance();
      } else {
        if (causeCase_ == 3) {
          return uriBuilder_.getMessage();
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingURICause uri = 3;</code>
     */
    public Builder setUri(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause value) {
      if (uriBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cause_ = value;
        onChanged();
      } else {
        uriBuilder_.setMessage(value);
      }
      causeCase_ = 3;
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingURICause uri = 3;</code>
     */
    public Builder setUri(
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause.Builder builderForValue) {
      if (uriBuilder_ == null) {
        cause_ = builderForValue.build();
        onChanged();
      } else {
        uriBuilder_.setMessage(builderForValue.build());
      }
      causeCase_ = 3;
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingURICause uri = 3;</code>
     */
    public Builder mergeUri(org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause value) {
      if (uriBuilder_ == null) {
        if (causeCase_ == 3 &&
            cause_ != org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause.getDefaultInstance()) {
          cause_ = org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause.newBuilder((org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause) cause_)
              .mergeFrom(value).buildPartial();
        } else {
          cause_ = value;
        }
        onChanged();
      } else {
        if (causeCase_ == 3) {
          uriBuilder_.mergeFrom(value);
        }
        uriBuilder_.setMessage(value);
      }
      causeCase_ = 3;
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingURICause uri = 3;</code>
     */
    public Builder clearUri() {
      if (uriBuilder_ == null) {
        if (causeCase_ == 3) {
          causeCase_ = 0;
          cause_ = null;
          onChanged();
        }
      } else {
        if (causeCase_ == 3) {
          causeCase_ = 0;
          cause_ = null;
        }
        uriBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingURICause uri = 3;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause.Builder getUriBuilder() {
      return getUriFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingURICause uri = 3;</code>
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICauseOrBuilder getUriOrBuilder() {
      if ((causeCase_ == 3) && (uriBuilder_ != null)) {
        return uriBuilder_.getMessageOrBuilder();
      } else {
        if (causeCase_ == 3) {
          return (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause) cause_;
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.ContinuousProfilingURICause uri = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICauseOrBuilder> 
        getUriFieldBuilder() {
      if (uriBuilder_ == null) {
        if (!(causeCase_ == 3)) {
          cause_ = org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause.getDefaultInstance();
        }
        uriBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause.Builder, org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICauseOrBuilder>(
                (org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingURICause) cause_,
                getParentForChildren(),
                isClean());
        cause_ = null;
      }
      causeCase_ = 3;
      onChanged();;
      return uriBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.ContinuousProfilingCause)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.ContinuousProfilingCause)
  private static final org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause();
  }

  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ContinuousProfilingCause>
      PARSER = new com.google.protobuf.AbstractParser<ContinuousProfilingCause>() {
    @java.lang.Override
    public ContinuousProfilingCause parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ContinuousProfilingCause(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ContinuousProfilingCause> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ContinuousProfilingCause> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.v3.ContinuousProfilingCause getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

