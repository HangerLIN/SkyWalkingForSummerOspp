// Generated by delombok at Thu Apr 18 20:40:02 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.analyzer.provider.meter.process;

import com.google.common.collect.ImmutableMap;
import org.apache.skywalking.oap.meter.analyzer.dsl.Sample;

/**
 * Help to build Sample with agent side meter.
 */
public class SampleBuilder {
    final String name;
    final ImmutableMap<String, String> labels;
    final double value;

    public Sample build(String service, String instance, long timestamp) {
        return 
        // Put original labels
        // Put report service and instance to labels
        Sample.builder().name(name).labels(ImmutableMap.<String, String>builder().putAll(labels).put("service", service).put("instance", instance).build()).value(value).timestamp(timestamp).build();
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    SampleBuilder(final String name, final ImmutableMap<String, String> labels, final double value) {
        this.name = name;
        this.labels = labels;
        this.value = value;
    }


    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static class SampleBuilderBuilder {
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private String name;
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private ImmutableMap<String, String> labels;
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private double value;

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        SampleBuilderBuilder() {
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public SampleBuilder.SampleBuilderBuilder name(final String name) {
            this.name = name;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public SampleBuilder.SampleBuilderBuilder labels(final ImmutableMap<String, String> labels) {
            this.labels = labels;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public SampleBuilder.SampleBuilderBuilder value(final double value) {
            this.value = value;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public SampleBuilder build() {
            return new SampleBuilder(this.name, this.labels, this.value);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public java.lang.String toString() {
            return "SampleBuilder.SampleBuilderBuilder(name=" + this.name + ", labels=" + this.labels + ", value=" + this.value + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static SampleBuilder.SampleBuilderBuilder builder() {
        return new SampleBuilder.SampleBuilderBuilder();
    }
}
