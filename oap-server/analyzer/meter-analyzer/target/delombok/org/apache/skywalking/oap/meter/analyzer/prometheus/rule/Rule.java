// Generated by delombok at Thu Apr 18 20:40:00 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.meter.analyzer.prometheus.rule;

import org.apache.skywalking.oap.meter.analyzer.MetricRuleConfig;
import java.util.List;

/**
 * Rule contains the global configuration of prometheus fetcher.
 */
public class Rule implements MetricRuleConfig {
    private String name;
    private String metricPrefix;
    private String expSuffix;
    private String expPrefix;
    private String filter;
    private String initExp;
    private List<MetricsRule> metricsRules;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getName() {
        return this.name;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getMetricPrefix() {
        return this.metricPrefix;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getExpSuffix() {
        return this.expSuffix;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getExpPrefix() {
        return this.expPrefix;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getFilter() {
        return this.filter;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getInitExp() {
        return this.initExp;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<MetricsRule> getMetricsRules() {
        return this.metricsRules;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setName(final String name) {
        this.name = name;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setMetricPrefix(final String metricPrefix) {
        this.metricPrefix = metricPrefix;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setExpSuffix(final String expSuffix) {
        this.expSuffix = expSuffix;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setExpPrefix(final String expPrefix) {
        this.expPrefix = expPrefix;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setFilter(final String filter) {
        this.filter = filter;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setInitExp(final String initExp) {
        this.initExp = initExp;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setMetricsRules(final List<MetricsRule> metricsRules) {
        this.metricsRules = metricsRules;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Rule)) return false;
        final Rule other = (Rule) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$name = this.getName();
        final java.lang.Object other$name = other.getName();
        if (this$name == null ? other$name != null : !this$name.equals(other$name)) return false;
        final java.lang.Object this$metricPrefix = this.getMetricPrefix();
        final java.lang.Object other$metricPrefix = other.getMetricPrefix();
        if (this$metricPrefix == null ? other$metricPrefix != null : !this$metricPrefix.equals(other$metricPrefix)) return false;
        final java.lang.Object this$expSuffix = this.getExpSuffix();
        final java.lang.Object other$expSuffix = other.getExpSuffix();
        if (this$expSuffix == null ? other$expSuffix != null : !this$expSuffix.equals(other$expSuffix)) return false;
        final java.lang.Object this$expPrefix = this.getExpPrefix();
        final java.lang.Object other$expPrefix = other.getExpPrefix();
        if (this$expPrefix == null ? other$expPrefix != null : !this$expPrefix.equals(other$expPrefix)) return false;
        final java.lang.Object this$filter = this.getFilter();
        final java.lang.Object other$filter = other.getFilter();
        if (this$filter == null ? other$filter != null : !this$filter.equals(other$filter)) return false;
        final java.lang.Object this$initExp = this.getInitExp();
        final java.lang.Object other$initExp = other.getInitExp();
        if (this$initExp == null ? other$initExp != null : !this$initExp.equals(other$initExp)) return false;
        final java.lang.Object this$metricsRules = this.getMetricsRules();
        final java.lang.Object other$metricsRules = other.getMetricsRules();
        if (this$metricsRules == null ? other$metricsRules != null : !this$metricsRules.equals(other$metricsRules)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof Rule;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $name = this.getName();
        result = result * PRIME + ($name == null ? 43 : $name.hashCode());
        final java.lang.Object $metricPrefix = this.getMetricPrefix();
        result = result * PRIME + ($metricPrefix == null ? 43 : $metricPrefix.hashCode());
        final java.lang.Object $expSuffix = this.getExpSuffix();
        result = result * PRIME + ($expSuffix == null ? 43 : $expSuffix.hashCode());
        final java.lang.Object $expPrefix = this.getExpPrefix();
        result = result * PRIME + ($expPrefix == null ? 43 : $expPrefix.hashCode());
        final java.lang.Object $filter = this.getFilter();
        result = result * PRIME + ($filter == null ? 43 : $filter.hashCode());
        final java.lang.Object $initExp = this.getInitExp();
        result = result * PRIME + ($initExp == null ? 43 : $initExp.hashCode());
        final java.lang.Object $metricsRules = this.getMetricsRules();
        result = result * PRIME + ($metricsRules == null ? 43 : $metricsRules.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "Rule(name=" + this.getName() + ", metricPrefix=" + this.getMetricPrefix() + ", expSuffix=" + this.getExpSuffix() + ", expPrefix=" + this.getExpPrefix() + ", filter=" + this.getFilter() + ", initExp=" + this.getInitExp() + ", metricsRules=" + this.getMetricsRules() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Rule() {
    }
}
