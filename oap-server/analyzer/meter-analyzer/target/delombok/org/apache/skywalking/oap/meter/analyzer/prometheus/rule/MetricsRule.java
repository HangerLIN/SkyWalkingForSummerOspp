// Generated by delombok at Thu Apr 18 20:40:00 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.meter.analyzer.prometheus.rule;

import org.apache.skywalking.oap.meter.analyzer.MetricRuleConfig;

/**
 * MetricsRule holds the parsing expression.
 */
public class MetricsRule implements MetricRuleConfig.RuleConfig {
    private String name;
    private String exp;


    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static class MetricsRuleBuilder {
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private String name;
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private String exp;

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        MetricsRuleBuilder() {
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public MetricsRule.MetricsRuleBuilder name(final String name) {
            this.name = name;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public MetricsRule.MetricsRuleBuilder exp(final String exp) {
            this.exp = exp;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public MetricsRule build() {
            return new MetricsRule(this.name, this.exp);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public java.lang.String toString() {
            return "MetricsRule.MetricsRuleBuilder(name=" + this.name + ", exp=" + this.exp + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static MetricsRule.MetricsRuleBuilder builder() {
        return new MetricsRule.MetricsRuleBuilder();
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getName() {
        return this.name;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getExp() {
        return this.exp;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setName(final String name) {
        this.name = name;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setExp(final String exp) {
        this.exp = exp;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof MetricsRule)) return false;
        final MetricsRule other = (MetricsRule) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$name = this.getName();
        final java.lang.Object other$name = other.getName();
        if (this$name == null ? other$name != null : !this$name.equals(other$name)) return false;
        final java.lang.Object this$exp = this.getExp();
        final java.lang.Object other$exp = other.getExp();
        if (this$exp == null ? other$exp != null : !this$exp.equals(other$exp)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof MetricsRule;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $name = this.getName();
        result = result * PRIME + ($name == null ? 43 : $name.hashCode());
        final java.lang.Object $exp = this.getExp();
        result = result * PRIME + ($exp == null ? 43 : $exp.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "MetricsRule(name=" + this.getName() + ", exp=" + this.getExp() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public MetricsRule() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public MetricsRule(final String name, final String exp) {
        this.name = name;
        this.exp = exp;
    }
}
