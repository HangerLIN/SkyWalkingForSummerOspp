// Generated by delombok at Thu Apr 18 20:40:00 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.meter.analyzer.dsl.EntityDescription;

import com.google.common.collect.ImmutableList;
import org.apache.skywalking.oap.server.core.analysis.meter.ScopeType;
import java.util.List;

public class ProcessEntityDescription implements EntityDescription {
    private final ScopeType scopeType = ScopeType.PROCESS;
    private final List<String> serviceKeys;
    private final List<String> serviceInstanceKeys;
    private final List<String> processKeys;
    private final String layerKey;
    private final String delimiter;

    @Override
    public List<String> getLabelKeys() {
        return ImmutableList.<String>builder().addAll(serviceKeys).addAll(serviceInstanceKeys).addAll(processKeys).add(layerKey).build();
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public ScopeType getScopeType() {
        return this.scopeType;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<String> getServiceKeys() {
        return this.serviceKeys;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<String> getServiceInstanceKeys() {
        return this.serviceInstanceKeys;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<String> getProcessKeys() {
        return this.processKeys;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getLayerKey() {
        return this.layerKey;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getDelimiter() {
        return this.delimiter;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public ProcessEntityDescription(final List<String> serviceKeys, final List<String> serviceInstanceKeys, final List<String> processKeys, final String layerKey, final String delimiter) {
        this.serviceKeys = serviceKeys;
        this.serviceInstanceKeys = serviceInstanceKeys;
        this.processKeys = processKeys;
        this.layerKey = layerKey;
        this.delimiter = delimiter;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "ProcessEntityDescription(scopeType=" + this.getScopeType() + ", serviceKeys=" + this.getServiceKeys() + ", serviceInstanceKeys=" + this.getServiceInstanceKeys() + ", processKeys=" + this.getProcessKeys() + ", layerKey=" + this.getLayerKey() + ", delimiter=" + this.getDelimiter() + ")";
    }
}
