// Generated by delombok at Thu Apr 18 20:40:53 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.skywalking.mqe.rt.type;

public class MQEValue {
    private String id;
    private String value;
    private String traceID;
    private double doubleValue;
    private boolean isEmptyValue;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public MQEValue() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getId() {
        return this.id;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getValue() {
        return this.value;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getTraceID() {
        return this.traceID;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public double getDoubleValue() {
        return this.doubleValue;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isEmptyValue() {
        return this.isEmptyValue;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setId(final String id) {
        this.id = id;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setValue(final String value) {
        this.value = value;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTraceID(final String traceID) {
        this.traceID = traceID;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setDoubleValue(final double doubleValue) {
        this.doubleValue = doubleValue;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setEmptyValue(final boolean isEmptyValue) {
        this.isEmptyValue = isEmptyValue;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof MQEValue)) return false;
        final MQEValue other = (MQEValue) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (java.lang.Double.compare(this.getDoubleValue(), other.getDoubleValue()) != 0) return false;
        if (this.isEmptyValue() != other.isEmptyValue()) return false;
        final java.lang.Object this$id = this.getId();
        final java.lang.Object other$id = other.getId();
        if (this$id == null ? other$id != null : !this$id.equals(other$id)) return false;
        final java.lang.Object this$value = this.getValue();
        final java.lang.Object other$value = other.getValue();
        if (this$value == null ? other$value != null : !this$value.equals(other$value)) return false;
        final java.lang.Object this$traceID = this.getTraceID();
        final java.lang.Object other$traceID = other.getTraceID();
        if (this$traceID == null ? other$traceID != null : !this$traceID.equals(other$traceID)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof MQEValue;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final long $doubleValue = java.lang.Double.doubleToLongBits(this.getDoubleValue());
        result = result * PRIME + (int) ($doubleValue >>> 32 ^ $doubleValue);
        result = result * PRIME + (this.isEmptyValue() ? 79 : 97);
        final java.lang.Object $id = this.getId();
        result = result * PRIME + ($id == null ? 43 : $id.hashCode());
        final java.lang.Object $value = this.getValue();
        result = result * PRIME + ($value == null ? 43 : $value.hashCode());
        final java.lang.Object $traceID = this.getTraceID();
        result = result * PRIME + ($traceID == null ? 43 : $traceID.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "MQEValue(id=" + this.getId() + ", value=" + this.getValue() + ", traceID=" + this.getTraceID() + ", doubleValue=" + this.getDoubleValue() + ", isEmptyValue=" + this.isEmptyValue() + ")";
    }
}
