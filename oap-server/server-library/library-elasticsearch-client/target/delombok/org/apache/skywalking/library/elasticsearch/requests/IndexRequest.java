// Generated by delombok at Thu Apr 18 20:39:45 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.skywalking.library.elasticsearch.requests;

import java.util.Map;
import java.util.Optional;

public final class IndexRequest {
    private final String index;
    private final String type;
    private final String id;
    /**
     * The routing value of the request.
     */
    private final Optional<String> routing;
    private final Map<String, ?> doc;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    private static Optional<String> $default$routing() {
        return Optional.empty();
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    IndexRequest(final String index, final String type, final String id, final Optional<String> routing, final Map<String, ?> doc) {
        this.index = index;
        this.type = type;
        this.id = id;
        this.routing = routing;
        this.doc = doc;
    }


    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static class IndexRequestBuilder {
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private String index;
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private String type;
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private String id;
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private boolean routing$set;
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private Optional<String> routing$value;
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private Map<String, ?> doc;

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        IndexRequestBuilder() {
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public IndexRequest.IndexRequestBuilder index(final String index) {
            this.index = index;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public IndexRequest.IndexRequestBuilder type(final String type) {
            this.type = type;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public IndexRequest.IndexRequestBuilder id(final String id) {
            this.id = id;
            return this;
        }

        /**
         * The routing value of the request.
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public IndexRequest.IndexRequestBuilder routing(final Optional<String> routing) {
            this.routing$value = routing;
            routing$set = true;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public IndexRequest.IndexRequestBuilder doc(final Map<String, ?> doc) {
            this.doc = doc;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public IndexRequest build() {
            Optional<String> routing$value = this.routing$value;
            if (!this.routing$set) routing$value = IndexRequest.$default$routing();
            return new IndexRequest(this.index, this.type, this.id, routing$value, this.doc);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public java.lang.String toString() {
            return "IndexRequest.IndexRequestBuilder(index=" + this.index + ", type=" + this.type + ", id=" + this.id + ", routing$value=" + this.routing$value + ", doc=" + this.doc + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static IndexRequest.IndexRequestBuilder builder() {
        return new IndexRequest.IndexRequestBuilder();
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getIndex() {
        return this.index;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getType() {
        return this.type;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getId() {
        return this.id;
    }

    /**
     * The routing value of the request.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Optional<String> getRouting() {
        return this.routing;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Map<String, ?> getDoc() {
        return this.doc;
    }
}
