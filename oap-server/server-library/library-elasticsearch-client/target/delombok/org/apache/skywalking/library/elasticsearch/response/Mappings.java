// Generated by delombok at Thu Apr 18 20:39:45 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.skywalking.library.elasticsearch.response;

import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Set;
// For deserialization
public final class Mappings {
    @JsonIgnore
    private String type;
    private Map<String, Object> properties = new HashMap<>();
    @JsonProperty("_source")
    private Source source = new Source();


    public static class Source {
        @JsonProperty("excludes")
        private Set<String> excludes = new HashSet<>();

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public boolean equals(final java.lang.Object o) {
            if (o == this) return true;
            if (!(o instanceof Mappings.Source)) return false;
            final Mappings.Source other = (Mappings.Source) o;
            if (!other.canEqual((java.lang.Object) this)) return false;
            final java.lang.Object this$excludes = this.getExcludes();
            final java.lang.Object other$excludes = other.getExcludes();
            if (this$excludes == null ? other$excludes != null : !this$excludes.equals(other$excludes)) return false;
            return true;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        protected boolean canEqual(final java.lang.Object other) {
            return other instanceof Mappings.Source;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public int hashCode() {
            final int PRIME = 59;
            int result = 1;
            final java.lang.Object $excludes = this.getExcludes();
            result = result * PRIME + ($excludes == null ? 43 : $excludes.hashCode());
            return result;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public Set<String> getExcludes() {
            return this.excludes;
        }

        @JsonProperty("excludes")
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public void setExcludes(final Set<String> excludes) {
            this.excludes = excludes;
        }
    }


    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static class MappingsBuilder {
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private String type;
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private Map<String, Object> properties;
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private Source source;

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        MappingsBuilder() {
        }

        /**
         * @return {@code this}.
         */
        @JsonIgnore
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public Mappings.MappingsBuilder type(final String type) {
            this.type = type;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public Mappings.MappingsBuilder properties(final Map<String, Object> properties) {
            this.properties = properties;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @JsonProperty("_source")
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public Mappings.MappingsBuilder source(final Source source) {
            this.source = source;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public Mappings build() {
            return new Mappings(this.type, this.properties, this.source);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public java.lang.String toString() {
            return "Mappings.MappingsBuilder(type=" + this.type + ", properties=" + this.properties + ", source=" + this.source + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static Mappings.MappingsBuilder builder() {
        return new Mappings.MappingsBuilder();
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "Mappings(type=" + this.getType() + ", properties=" + this.getProperties() + ", source=" + this.getSource() + ")";
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Mappings)) return false;
        final Mappings other = (Mappings) o;
        final java.lang.Object this$type = this.getType();
        final java.lang.Object other$type = other.getType();
        if (this$type == null ? other$type != null : !this$type.equals(other$type)) return false;
        final java.lang.Object this$properties = this.getProperties();
        final java.lang.Object other$properties = other.getProperties();
        if (this$properties == null ? other$properties != null : !this$properties.equals(other$properties)) return false;
        final java.lang.Object this$source = this.getSource();
        final java.lang.Object other$source = other.getSource();
        if (this$source == null ? other$source != null : !this$source.equals(other$source)) return false;
        return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $type = this.getType();
        result = result * PRIME + ($type == null ? 43 : $type.hashCode());
        final java.lang.Object $properties = this.getProperties();
        result = result * PRIME + ($properties == null ? 43 : $properties.hashCode());
        final java.lang.Object $source = this.getSource();
        result = result * PRIME + ($source == null ? 43 : $source.hashCode());
        return result;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Mappings() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Mappings(final String type, final Map<String, Object> properties, final Source source) {
        this.type = type;
        this.properties = properties;
        this.source = source;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getType() {
        return this.type;
    }

    @JsonIgnore
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setType(final String type) {
        this.type = type;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Map<String, Object> getProperties() {
        return this.properties;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setProperties(final Map<String, Object> properties) {
        this.properties = properties;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Source getSource() {
        return this.source;
    }

    @JsonProperty("_source")
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSource(final Source source) {
        this.source = source;
    }
}
