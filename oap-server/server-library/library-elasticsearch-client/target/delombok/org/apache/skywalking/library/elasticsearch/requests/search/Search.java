// Generated by delombok at Thu Apr 18 20:39:45 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.skywalking.library.elasticsearch.requests.search;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableMap;
import org.apache.skywalking.library.elasticsearch.requests.search.aggregation.Aggregation;

/**
 * Represents the criteria when searching documents in ElasticSearch.
 *
 * @see SearchBuilder to build an immutable instance of this class.
 */
public final class Search {
    private final Integer from;
    private final Integer size;
    @JsonProperty("_source")
    private final ImmutableList<String> source;
    private final Query query;
    private final Sorts sort;
    private final ImmutableMap<String, Aggregation> aggregations;

    public static SearchBuilder builder() {
        return new SearchBuilder();
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Integer getFrom() {
        return this.from;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Integer getSize() {
        return this.size;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public ImmutableList<String> getSource() {
        return this.source;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Query getQuery() {
        return this.query;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Sorts getSort() {
        return this.sort;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public ImmutableMap<String, Aggregation> getAggregations() {
        return this.aggregations;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    Search(final Integer from, final Integer size, final ImmutableList<String> source, final Query query, final Sorts sort, final ImmutableMap<String, Aggregation> aggregations) {
        this.from = from;
        this.size = size;
        this.source = source;
        this.query = query;
        this.sort = sort;
        this.aggregations = aggregations;
    }
}
