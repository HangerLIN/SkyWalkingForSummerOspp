// Generated by delombok at Thu Apr 18 20:40:56 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.query.logql.rt.result;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class LogQLParseResult {
    // stream selector result
    private Map<String, String> labelMap = new HashMap<>();
    // line filter expression result
    private List<String> keywordsOfContent = new ArrayList<>();
    private List<String> excludingKeywordsOfContent = new ArrayList<>();

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public LogQLParseResult() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Map<String, String> getLabelMap() {
        return this.labelMap;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<String> getKeywordsOfContent() {
        return this.keywordsOfContent;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<String> getExcludingKeywordsOfContent() {
        return this.excludingKeywordsOfContent;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setLabelMap(final Map<String, String> labelMap) {
        this.labelMap = labelMap;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setKeywordsOfContent(final List<String> keywordsOfContent) {
        this.keywordsOfContent = keywordsOfContent;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setExcludingKeywordsOfContent(final List<String> excludingKeywordsOfContent) {
        this.excludingKeywordsOfContent = excludingKeywordsOfContent;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof LogQLParseResult)) return false;
        final LogQLParseResult other = (LogQLParseResult) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$labelMap = this.getLabelMap();
        final java.lang.Object other$labelMap = other.getLabelMap();
        if (this$labelMap == null ? other$labelMap != null : !this$labelMap.equals(other$labelMap)) return false;
        final java.lang.Object this$keywordsOfContent = this.getKeywordsOfContent();
        final java.lang.Object other$keywordsOfContent = other.getKeywordsOfContent();
        if (this$keywordsOfContent == null ? other$keywordsOfContent != null : !this$keywordsOfContent.equals(other$keywordsOfContent)) return false;
        final java.lang.Object this$excludingKeywordsOfContent = this.getExcludingKeywordsOfContent();
        final java.lang.Object other$excludingKeywordsOfContent = other.getExcludingKeywordsOfContent();
        if (this$excludingKeywordsOfContent == null ? other$excludingKeywordsOfContent != null : !this$excludingKeywordsOfContent.equals(other$excludingKeywordsOfContent)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof LogQLParseResult;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $labelMap = this.getLabelMap();
        result = result * PRIME + ($labelMap == null ? 43 : $labelMap.hashCode());
        final java.lang.Object $keywordsOfContent = this.getKeywordsOfContent();
        result = result * PRIME + ($keywordsOfContent == null ? 43 : $keywordsOfContent.hashCode());
        final java.lang.Object $excludingKeywordsOfContent = this.getExcludingKeywordsOfContent();
        result = result * PRIME + ($excludingKeywordsOfContent == null ? 43 : $excludingKeywordsOfContent.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "LogQLParseResult(labelMap=" + this.getLabelMap() + ", keywordsOfContent=" + this.getKeywordsOfContent() + ", excludingKeywordsOfContent=" + this.getExcludingKeywordsOfContent() + ")";
    }
}
