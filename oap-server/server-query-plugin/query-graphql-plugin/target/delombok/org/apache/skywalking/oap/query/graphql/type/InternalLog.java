// Generated by delombok at Thu Apr 18 20:40:54 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.skywalking.oap.query.graphql.type;

public final class InternalLog {
    private String line;
    private String container;


    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static class InternalLogBuilder {
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private String line;
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private String container;

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        InternalLogBuilder() {
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public InternalLog.InternalLogBuilder line(final String line) {
            this.line = line;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public InternalLog.InternalLogBuilder container(final String container) {
            this.container = container;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public InternalLog build() {
            return new InternalLog(this.line, this.container);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public java.lang.String toString() {
            return "InternalLog.InternalLogBuilder(line=" + this.line + ", container=" + this.container + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static InternalLog.InternalLogBuilder builder() {
        return new InternalLog.InternalLogBuilder();
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String line() {
        return this.line;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String container() {
        return this.container;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public InternalLog line(final String line) {
        this.line = line;
        return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public InternalLog container(final String container) {
        this.container = container;
        return this;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof InternalLog)) return false;
        final InternalLog other = (InternalLog) o;
        final java.lang.Object this$line = this.line();
        final java.lang.Object other$line = other.line();
        if (this$line == null ? other$line != null : !this$line.equals(other$line)) return false;
        final java.lang.Object this$container = this.container();
        final java.lang.Object other$container = other.container();
        if (this$container == null ? other$container != null : !this$container.equals(other$container)) return false;
        return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $line = this.line();
        result = result * PRIME + ($line == null ? 43 : $line.hashCode());
        final java.lang.Object $container = this.container();
        result = result * PRIME + ($container == null ? 43 : $container.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "InternalLog(line=" + this.line() + ", container=" + this.container() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public InternalLog(final String line, final String container) {
        this.line = line;
        this.container = container;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public InternalLog() {
    }
}
