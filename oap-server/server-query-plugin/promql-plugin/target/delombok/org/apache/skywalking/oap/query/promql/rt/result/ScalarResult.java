// Generated by delombok at Thu Apr 18 20:40:55 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.query.promql.rt.result;

import org.apache.skywalking.oap.query.promql.entity.MetricInfo;

public class ScalarResult extends ParseResult {
    private MetricInfo metricInfo;
    private double value;

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof ScalarResult)) return false;
        final ScalarResult other = (ScalarResult) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (!super.equals(o)) return false;
        if (java.lang.Double.compare(this.getValue(), other.getValue()) != 0) return false;
        final java.lang.Object this$metricInfo = this.getMetricInfo();
        final java.lang.Object other$metricInfo = other.getMetricInfo();
        if (this$metricInfo == null ? other$metricInfo != null : !this$metricInfo.equals(other$metricInfo)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof ScalarResult;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = super.hashCode();
        final long $value = java.lang.Double.doubleToLongBits(this.getValue());
        result = result * PRIME + (int) ($value >>> 32 ^ $value);
        final java.lang.Object $metricInfo = this.getMetricInfo();
        result = result * PRIME + ($metricInfo == null ? 43 : $metricInfo.hashCode());
        return result;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public ScalarResult() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public MetricInfo getMetricInfo() {
        return this.metricInfo;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public double getValue() {
        return this.value;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setMetricInfo(final MetricInfo metricInfo) {
        this.metricInfo = metricInfo;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setValue(final double value) {
        this.value = value;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "ScalarResult(metricInfo=" + this.getMetricInfo() + ", value=" + this.getValue() + ")";
    }
}
