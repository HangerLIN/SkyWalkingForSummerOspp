// Generated by delombok at Thu Apr 18 20:40:55 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.query.promql.entity;

import org.apache.skywalking.oap.query.promql.entity.response.ResultType;

public class ResponseData {
    private ResultType resultType;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public ResponseData() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public ResultType getResultType() {
        return this.resultType;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setResultType(final ResultType resultType) {
        this.resultType = resultType;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof ResponseData)) return false;
        final ResponseData other = (ResponseData) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$resultType = this.getResultType();
        final java.lang.Object other$resultType = other.getResultType();
        if (this$resultType == null ? other$resultType != null : !this$resultType.equals(other$resultType)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof ResponseData;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $resultType = this.getResultType();
        result = result * PRIME + ($resultType == null ? 43 : $resultType.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "ResponseData(resultType=" + this.getResultType() + ")";
    }
}
