// Generated by delombok at Thu Apr 18 20:41:06 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.configuration.configmap;

import org.apache.skywalking.oap.server.library.module.ModuleConfig;

public class ConfigmapConfigurationSettings extends ModuleConfig {
    /**
     * namespace for deployment
     */
    private String namespace;
    /**
     * how to find the configmap
     */
    private String labelSelector;
    /**
     * the period for skywalking configuration reloading
     */
    private Integer period;

    /**
     * namespace for deployment
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setNamespace(final String namespace) {
        this.namespace = namespace;
    }

    /**
     * how to find the configmap
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setLabelSelector(final String labelSelector) {
        this.labelSelector = labelSelector;
    }

    /**
     * the period for skywalking configuration reloading
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setPeriod(final Integer period) {
        this.period = period;
    }

    /**
     * namespace for deployment
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getNamespace() {
        return this.namespace;
    }

    /**
     * how to find the configmap
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getLabelSelector() {
        return this.labelSelector;
    }

    /**
     * the period for skywalking configuration reloading
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Integer getPeriod() {
        return this.period;
    }
}
