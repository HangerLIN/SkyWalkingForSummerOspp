// Generated by delombok at Thu Apr 18 20:41:05 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.configuration.zookeeper;

import org.apache.skywalking.oap.server.library.module.ModuleConfig;

public class ZookeeperServerSettings extends ModuleConfig {
    private String namespace = "/default";
    private String hostPort;
    private int baseSleepTimeMs = 1000;
    private int maxRetries = 3;
    private int period = 60;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getNamespace() {
        return this.namespace;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getHostPort() {
        return this.hostPort;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getBaseSleepTimeMs() {
        return this.baseSleepTimeMs;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getMaxRetries() {
        return this.maxRetries;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getPeriod() {
        return this.period;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setNamespace(final String namespace) {
        this.namespace = namespace;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setHostPort(final String hostPort) {
        this.hostPort = hostPort;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setBaseSleepTimeMs(final int baseSleepTimeMs) {
        this.baseSleepTimeMs = baseSleepTimeMs;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setMaxRetries(final int maxRetries) {
        this.maxRetries = maxRetries;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setPeriod(final int period) {
        this.period = period;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "ZookeeperServerSettings(namespace=" + this.getNamespace() + ", hostPort=" + this.getHostPort() + ", baseSleepTimeMs=" + this.getBaseSleepTimeMs() + ", maxRetries=" + this.getMaxRetries() + ", period=" + this.getPeriod() + ")";
    }
}
