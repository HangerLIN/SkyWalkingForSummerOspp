// Generated by delombok at Thu Apr 18 20:41:05 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.skywalking.oap.server.configuration.etcd;

import com.google.common.base.Strings;
import java.util.Arrays;
import org.apache.skywalking.oap.server.library.module.ModuleConfig;

public class EtcdServerSettings extends ModuleConfig {
    private int period;
    private String endpoints;
    private String namespace;
    private String authority;
    private String user;
    private String password;
    private boolean authentication;

    public String getNamespace() {
        if (Strings.isNullOrEmpty(namespace)) {
            return null;
        }
        if (!namespace.endsWith("/")) {
            return namespace + "/";
        }
        return namespace;
    }

    public String[] getEndpointArray() {
        return Arrays.stream(endpoints.split("\\s*,\\s*")).toArray(String[]::new);
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public EtcdServerSettings() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getPeriod() {
        return this.period;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getEndpoints() {
        return this.endpoints;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getAuthority() {
        return this.authority;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getUser() {
        return this.user;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getPassword() {
        return this.password;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isAuthentication() {
        return this.authentication;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setPeriod(final int period) {
        this.period = period;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setEndpoints(final String endpoints) {
        this.endpoints = endpoints;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setNamespace(final String namespace) {
        this.namespace = namespace;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setAuthority(final String authority) {
        this.authority = authority;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setUser(final String user) {
        this.user = user;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setPassword(final String password) {
        this.password = password;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setAuthentication(final boolean authentication) {
        this.authentication = authentication;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "EtcdServerSettings(period=" + this.getPeriod() + ", endpoints=" + this.getEndpoints() + ", namespace=" + this.getNamespace() + ", authority=" + this.getAuthority() + ", user=" + this.getUser() + ", password=" + this.getPassword() + ", authentication=" + this.isAuthentication() + ")";
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof EtcdServerSettings)) return false;
        final EtcdServerSettings other = (EtcdServerSettings) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (!super.equals(o)) return false;
        if (this.getPeriod() != other.getPeriod()) return false;
        if (this.isAuthentication() != other.isAuthentication()) return false;
        final java.lang.Object this$endpoints = this.getEndpoints();
        final java.lang.Object other$endpoints = other.getEndpoints();
        if (this$endpoints == null ? other$endpoints != null : !this$endpoints.equals(other$endpoints)) return false;
        final java.lang.Object this$namespace = this.getNamespace();
        final java.lang.Object other$namespace = other.getNamespace();
        if (this$namespace == null ? other$namespace != null : !this$namespace.equals(other$namespace)) return false;
        final java.lang.Object this$authority = this.getAuthority();
        final java.lang.Object other$authority = other.getAuthority();
        if (this$authority == null ? other$authority != null : !this$authority.equals(other$authority)) return false;
        final java.lang.Object this$user = this.getUser();
        final java.lang.Object other$user = other.getUser();
        if (this$user == null ? other$user != null : !this$user.equals(other$user)) return false;
        final java.lang.Object this$password = this.getPassword();
        final java.lang.Object other$password = other.getPassword();
        if (this$password == null ? other$password != null : !this$password.equals(other$password)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof EtcdServerSettings;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = super.hashCode();
        result = result * PRIME + this.getPeriod();
        result = result * PRIME + (this.isAuthentication() ? 79 : 97);
        final java.lang.Object $endpoints = this.getEndpoints();
        result = result * PRIME + ($endpoints == null ? 43 : $endpoints.hashCode());
        final java.lang.Object $namespace = this.getNamespace();
        result = result * PRIME + ($namespace == null ? 43 : $namespace.hashCode());
        final java.lang.Object $authority = this.getAuthority();
        result = result * PRIME + ($authority == null ? 43 : $authority.hashCode());
        final java.lang.Object $user = this.getUser();
        result = result * PRIME + ($user == null ? 43 : $user.hashCode());
        final java.lang.Object $password = this.getPassword();
        result = result * PRIME + ($password == null ? 43 : $password.hashCode());
        return result;
    }
}
