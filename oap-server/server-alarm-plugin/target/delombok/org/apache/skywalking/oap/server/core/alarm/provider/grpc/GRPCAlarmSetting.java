// Generated by delombok at Thu Apr 18 20:40:58 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.alarm.provider.grpc;

import java.util.Objects;
import org.apache.skywalking.oap.server.core.alarm.provider.AlarmHookSettings;
import org.apache.skywalking.oap.server.core.alarm.provider.AlarmHooksType;

public class GRPCAlarmSetting extends AlarmHookSettings {
    private String targetHost;
    private int targetPort;

    public GRPCAlarmSetting(final String name, final AlarmHooksType type, final boolean isDefault) {
        super(name, type, isDefault);
    }

    public boolean isEmptySetting() {
        return Objects.isNull(targetHost);
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTargetHost(final String targetHost) {
        this.targetHost = targetHost;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTargetPort(final int targetPort) {
        this.targetPort = targetPort;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getTargetHost() {
        return this.targetHost;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getTargetPort() {
        return this.targetPort;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof GRPCAlarmSetting)) return false;
        final GRPCAlarmSetting other = (GRPCAlarmSetting) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (!super.equals(o)) return false;
        if (this.getTargetPort() != other.getTargetPort()) return false;
        final java.lang.Object this$targetHost = this.getTargetHost();
        final java.lang.Object other$targetHost = other.getTargetHost();
        if (this$targetHost == null ? other$targetHost != null : !this$targetHost.equals(other$targetHost)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof GRPCAlarmSetting;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = super.hashCode();
        result = result * PRIME + this.getTargetPort();
        final java.lang.Object $targetHost = this.getTargetHost();
        result = result * PRIME + ($targetHost == null ? 43 : $targetHost.hashCode());
        return result;
    }
}
