// Generated by delombok at Thu Apr 18 20:40:58 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.alarm.provider;

public class AlarmEntity {
    private final String scope;
    private final int scopeId;
    private final String name;
    private final String id0;
    private final String id1;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getScope() {
        return this.scope;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getScopeId() {
        return this.scopeId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getName() {
        return this.name;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getId0() {
        return this.id0;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getId1() {
        return this.id1;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof AlarmEntity)) return false;
        final AlarmEntity other = (AlarmEntity) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (this.getScopeId() != other.getScopeId()) return false;
        final java.lang.Object this$scope = this.getScope();
        final java.lang.Object other$scope = other.getScope();
        if (this$scope == null ? other$scope != null : !this$scope.equals(other$scope)) return false;
        final java.lang.Object this$name = this.getName();
        final java.lang.Object other$name = other.getName();
        if (this$name == null ? other$name != null : !this$name.equals(other$name)) return false;
        final java.lang.Object this$id0 = this.getId0();
        final java.lang.Object other$id0 = other.getId0();
        if (this$id0 == null ? other$id0 != null : !this$id0.equals(other$id0)) return false;
        final java.lang.Object this$id1 = this.getId1();
        final java.lang.Object other$id1 = other.getId1();
        if (this$id1 == null ? other$id1 != null : !this$id1.equals(other$id1)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof AlarmEntity;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + this.getScopeId();
        final java.lang.Object $scope = this.getScope();
        result = result * PRIME + ($scope == null ? 43 : $scope.hashCode());
        final java.lang.Object $name = this.getName();
        result = result * PRIME + ($name == null ? 43 : $name.hashCode());
        final java.lang.Object $id0 = this.getId0();
        result = result * PRIME + ($id0 == null ? 43 : $id0.hashCode());
        final java.lang.Object $id1 = this.getId1();
        result = result * PRIME + ($id1 == null ? 43 : $id1.hashCode());
        return result;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public AlarmEntity(final String scope, final int scopeId, final String name, final String id0, final String id1) {
        this.scope = scope;
        this.scopeId = scopeId;
        this.name = name;
        this.id0 = id0;
        this.id1 = id1;
    }
}
