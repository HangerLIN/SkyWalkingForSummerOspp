// Generated by delombok at Thu Apr 18 20:41:00 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.exporter.provider;

import org.apache.skywalking.oap.server.library.module.ModuleConfig;

public class ExporterSetting extends ModuleConfig {
    private boolean enableGRPCMetrics = false;
    private String gRPCTargetHost;
    private int gRPCTargetPort;
    private int bufferChannelSize = 20000;
    private int bufferChannelNum = 2;
    //kafka
    private boolean enableKafkaTrace = false;
    private boolean enableKafkaLog = false;
    private String kafkaBootstrapServers;
    private String kafkaProducerConfig;
    private String kafkaTopicTrace = "skywalking-export-trace";
    private String kafkaTopicLog = "skywalking-export-log";
    private boolean exportErrorStatusTraceOnly = false;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setEnableGRPCMetrics(final boolean enableGRPCMetrics) {
        this.enableGRPCMetrics = enableGRPCMetrics;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setGRPCTargetHost(final String gRPCTargetHost) {
        this.gRPCTargetHost = gRPCTargetHost;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setGRPCTargetPort(final int gRPCTargetPort) {
        this.gRPCTargetPort = gRPCTargetPort;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setBufferChannelSize(final int bufferChannelSize) {
        this.bufferChannelSize = bufferChannelSize;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setBufferChannelNum(final int bufferChannelNum) {
        this.bufferChannelNum = bufferChannelNum;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setEnableKafkaTrace(final boolean enableKafkaTrace) {
        this.enableKafkaTrace = enableKafkaTrace;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setEnableKafkaLog(final boolean enableKafkaLog) {
        this.enableKafkaLog = enableKafkaLog;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setKafkaBootstrapServers(final String kafkaBootstrapServers) {
        this.kafkaBootstrapServers = kafkaBootstrapServers;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setKafkaProducerConfig(final String kafkaProducerConfig) {
        this.kafkaProducerConfig = kafkaProducerConfig;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setKafkaTopicTrace(final String kafkaTopicTrace) {
        this.kafkaTopicTrace = kafkaTopicTrace;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setKafkaTopicLog(final String kafkaTopicLog) {
        this.kafkaTopicLog = kafkaTopicLog;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setExportErrorStatusTraceOnly(final boolean exportErrorStatusTraceOnly) {
        this.exportErrorStatusTraceOnly = exportErrorStatusTraceOnly;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isEnableGRPCMetrics() {
        return this.enableGRPCMetrics;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getGRPCTargetHost() {
        return this.gRPCTargetHost;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getGRPCTargetPort() {
        return this.gRPCTargetPort;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getBufferChannelSize() {
        return this.bufferChannelSize;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getBufferChannelNum() {
        return this.bufferChannelNum;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isEnableKafkaTrace() {
        return this.enableKafkaTrace;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isEnableKafkaLog() {
        return this.enableKafkaLog;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getKafkaBootstrapServers() {
        return this.kafkaBootstrapServers;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getKafkaProducerConfig() {
        return this.kafkaProducerConfig;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getKafkaTopicTrace() {
        return this.kafkaTopicTrace;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getKafkaTopicLog() {
        return this.kafkaTopicLog;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isExportErrorStatusTraceOnly() {
        return this.exportErrorStatusTraceOnly;
    }
}
