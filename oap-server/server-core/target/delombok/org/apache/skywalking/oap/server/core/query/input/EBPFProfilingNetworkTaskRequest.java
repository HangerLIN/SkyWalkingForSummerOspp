// Generated by delombok at Thu Apr 18 20:39:52 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.query.input;

import java.util.List;

public class EBPFProfilingNetworkTaskRequest {
    // Define which processes under the service instance need to be profiling
    private String instanceId;
    // The rule list for network profiling.
    // Set various rules for different HTTP URIs if necessary.
    private List<EBPFNetworkSamplingRule> samplings;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getInstanceId() {
        return this.instanceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<EBPFNetworkSamplingRule> getSamplings() {
        return this.samplings;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setInstanceId(final String instanceId) {
        this.instanceId = instanceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSamplings(final List<EBPFNetworkSamplingRule> samplings) {
        this.samplings = samplings;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof EBPFProfilingNetworkTaskRequest)) return false;
        final EBPFProfilingNetworkTaskRequest other = (EBPFProfilingNetworkTaskRequest) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$instanceId = this.getInstanceId();
        final java.lang.Object other$instanceId = other.getInstanceId();
        if (this$instanceId == null ? other$instanceId != null : !this$instanceId.equals(other$instanceId)) return false;
        final java.lang.Object this$samplings = this.getSamplings();
        final java.lang.Object other$samplings = other.getSamplings();
        if (this$samplings == null ? other$samplings != null : !this$samplings.equals(other$samplings)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof EBPFProfilingNetworkTaskRequest;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $instanceId = this.getInstanceId();
        result = result * PRIME + ($instanceId == null ? 43 : $instanceId.hashCode());
        final java.lang.Object $samplings = this.getSamplings();
        result = result * PRIME + ($samplings == null ? 43 : $samplings.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "EBPFProfilingNetworkTaskRequest(instanceId=" + this.getInstanceId() + ", samplings=" + this.getSamplings() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public EBPFProfilingNetworkTaskRequest(final String instanceId, final List<EBPFNetworkSamplingRule> samplings) {
        this.instanceId = instanceId;
        this.samplings = samplings;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public EBPFProfilingNetworkTaskRequest() {
    }
}
