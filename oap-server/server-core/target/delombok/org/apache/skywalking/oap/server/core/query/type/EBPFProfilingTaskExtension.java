// Generated by delombok at Thu Apr 18 20:39:52 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.query.type;

import org.apache.skywalking.oap.server.core.query.input.EBPFNetworkSamplingRule;
import java.util.List;

public class EBPFProfilingTaskExtension {
    private List<EBPFNetworkSamplingRule> networkSamplings;


    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static class EBPFProfilingTaskExtensionBuilder {
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private List<EBPFNetworkSamplingRule> networkSamplings;

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        EBPFProfilingTaskExtensionBuilder() {
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public EBPFProfilingTaskExtension.EBPFProfilingTaskExtensionBuilder networkSamplings(final List<EBPFNetworkSamplingRule> networkSamplings) {
            this.networkSamplings = networkSamplings;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public EBPFProfilingTaskExtension build() {
            return new EBPFProfilingTaskExtension(this.networkSamplings);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public java.lang.String toString() {
            return "EBPFProfilingTaskExtension.EBPFProfilingTaskExtensionBuilder(networkSamplings=" + this.networkSamplings + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static EBPFProfilingTaskExtension.EBPFProfilingTaskExtensionBuilder builder() {
        return new EBPFProfilingTaskExtension.EBPFProfilingTaskExtensionBuilder();
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<EBPFNetworkSamplingRule> getNetworkSamplings() {
        return this.networkSamplings;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setNetworkSamplings(final List<EBPFNetworkSamplingRule> networkSamplings) {
        this.networkSamplings = networkSamplings;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof EBPFProfilingTaskExtension)) return false;
        final EBPFProfilingTaskExtension other = (EBPFProfilingTaskExtension) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$networkSamplings = this.getNetworkSamplings();
        final java.lang.Object other$networkSamplings = other.getNetworkSamplings();
        if (this$networkSamplings == null ? other$networkSamplings != null : !this$networkSamplings.equals(other$networkSamplings)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof EBPFProfilingTaskExtension;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $networkSamplings = this.getNetworkSamplings();
        result = result * PRIME + ($networkSamplings == null ? 43 : $networkSamplings.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "EBPFProfilingTaskExtension(networkSamplings=" + this.getNetworkSamplings() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public EBPFProfilingTaskExtension() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public EBPFProfilingTaskExtension(final List<EBPFNetworkSamplingRule> networkSamplings) {
        this.networkSamplings = networkSamplings;
    }
}
