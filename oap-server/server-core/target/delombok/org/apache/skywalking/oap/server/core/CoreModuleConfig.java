// Generated by delombok at Thu Apr 18 20:39:51 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core;

import java.util.ArrayList;
import java.util.List;
import org.apache.skywalking.oap.server.core.config.SearchableTracesTagsWatcher;
import org.apache.skywalking.oap.server.core.source.ScopeDefaultColumn;
import org.apache.skywalking.oap.server.library.module.ModuleConfig;

public class CoreModuleConfig extends ModuleConfig {
    private String role = "Mixed";
    private String namespace;
    private String restHost;
    private int restPort;
    private String restContextPath;
    private int restMaxThreads = 200;
    private long restIdleTimeOut = 30000;
    private int restAcceptQueueSize = 0;
    private String gRPCHost;
    private int gRPCPort;
    private boolean gRPCSslEnabled = false;
    private String gRPCSslKeyPath;
    private String gRPCSslCertChainPath;
    private String gRPCSslTrustedCAPath;
    private int maxConcurrentCallsPerConnection;
    private int maxMessageSize;
    private int topNReportPeriod;
    /**
     * The period of L1 aggregation flush. Unit is ms.
     */
    private long l1FlushPeriod = 500;
    /**
     * The threshold of session time. Unit is ms. Default value is 70s.
     */
    private long storageSessionTimeout = 70000;
    private final List<String> downsampling;
    /**
     * The period of doing data persistence. Unit is second.
     */
    private int persistentPeriod = 25;
    private boolean enableDataKeeperExecutor = true;
    private int dataKeeperExecutePeriod = 5;
    /**
     * The time to live of all metrics data. Unit is day.
     */
    private int metricsDataTTL = 3;
    /**
     * The time to live of all record data, including tracing. Unit is Day.
     */
    private int recordDataTTL = 7;
    private int gRPCThreadPoolSize;
    private int gRPCThreadPoolQueueSize;
    /**
     * Timeout for cluster internal communication, in seconds.
     */
    private int remoteTimeout = 20;
    /**
     * The size of network address alias.
     */
    private long maxSizeOfNetworkAddressAlias = 1000000L;
    /**
     * Following are cache setting for none stream(s)
     */
    private long maxSizeOfProfileTask = 10000L;
    /**
     * Analyze profile snapshots paging size.
     */
    private int maxPageSizeOfQueryProfileSnapshot = 500;
    /**
     * Analyze profile snapshots max size.
     */
    private int maxSizeOfAnalyzeProfileSnapshot = 12000;
    /**
     * Query the eBPF Profiling data max duration(second) from database.
     */
    private int maxDurationOfQueryEBPFProfilingData = 30;
    /**
     * Thread Count of query the eBPF Profiling data.
     */
    private int maxThreadCountOfQueryEBPFProfilingData = Runtime.getRuntime().availableProcessors();
    /**
     * Extra model column are the column defined by {@link ScopeDefaultColumn.DefinedByField#requireDynamicActive()} ==
     * true. These columns of model are not required logically in aggregation or further query, and it will cause more
     * load for memory, network of OAP and storage.
     *
     * But, being activated, user could see the name in the storage entities, which make users easier to use 3rd party
     * tool, such as Kibana-&gt;ES, to query the data by themselves.
     */
    private boolean activeExtraModelColumns = false;
    /**
     * The max length of the service name.
     */
    private int serviceNameMaxLength = 70;
    /**
     * The max length of the service instance name.
     */
    private int instanceNameMaxLength = 70;
    /**
     * The max length of the endpoint name.
     *
     * <p>NOTICE</p>
     * In the current practice, we don't recommend the length over 190.
     */
    private int endpointNameMaxLength = 150;
    /**
     * Define the set of span tag keys, which should be searchable through the GraphQL.
     *
     * @since 8.2.0
     */
    private String searchableTracesTags = DEFAULT_SEARCHABLE_TAG_KEYS;
    private SearchableTracesTagsWatcher searchableTracesTagsWatcher;
    /**
     * Define the set of logs tag keys, which should be searchable through the GraphQL.
     *
     * @since 8.4.0
     */
    private String searchableLogsTags = "";
    /**
     * Define the set of Alarm tag keys, which should be searchable through the GraphQL.
     *
     * @since 8.6.0
     */
    private String searchableAlarmTags = "";
    /**
     * The max size of tags keys for autocomplete select.
     *
     * @since 9.1.0
     */
    private int autocompleteTagKeysQueryMaxSize = 100;
    /**
     * The max size of tags values for autocomplete select.
     *
     * @since 9.1.0
     */
    private int autocompleteTagValuesQueryMaxSize = 100;
    /**
     * The number of threads used to prepare metrics data to the storage.
     *
     * @since 8.7.0
     */
    private int prepareThreads = 2;
    private boolean enableEndpointNameGroupingByOpenapi = true;
    /**
     * The maximum size in bytes allowed for request headers.
     * Use -1 to disable it.
     */
    private int httpMaxRequestHeaderSize = 8192;
    /**
     * The period of HTTP URI pattern recognition. Unit is second.
     * @since 9.5.0
     */
    private int syncPeriodHttpUriRecognitionPattern = 10;
    /**
     * The training period of HTTP URI pattern recognition. Unit is second.
     * @since 9.5.0
     */
    private int trainingPeriodHttpUriRecognitionPattern = 60;
    /**
     * The max number of HTTP URIs per service for further URI pattern recognition.
     * @since 9.5.0
     */
    private int maxHttpUrisNumberPerService = 3000;
    /**
     * The UI menu should activate fetch interval, default 20s
     */
    private int uiMenuRefreshInterval = 20;
    /**
     * The service cache refresh interval, default 10s
     */
    private int serviceCacheRefreshInterval = 10;

    public CoreModuleConfig() {
        this.downsampling = new ArrayList<>();
    }


    /**
     * OAP server could work in different roles.
     */
    public enum Role {
        /**
         * Default role. OAP works as the {@link #Receiver} and {@link #Aggregator}
         */
        Mixed, /**
         * Receiver mode OAP open the service to the agents, analysis and aggregate the results and forward the results
         * to {@link #Mixed} and {@link #Aggregator} roles OAP. The only exception is for {@link
         * org.apache.skywalking.oap.server.core.analysis.record.Record}, they don't require 2nd round distributed
         * aggregation, is being pushed into the storage from the receiver OAP directly.
         */
        Receiver, /**
         * Aggregator mode OAP receives data from {@link #Mixed} and {@link #Aggregator} OAP nodes, and do 2nd round
         * aggregation. Then save the final result to the storage.
         */
        Aggregator;

        public static Role fromName(String name) {
            for (Role role : Role.values()) {
                if (role.name().equalsIgnoreCase(name)) {
                    return role;
                }
            }
            return Mixed;
        }
    }

    /**
     * SkyWalking Java Agent provides the recommended tag keys for other language agents or SDKs. This field declare the
     * recommended keys should be searchable.
     */
    private static final String DEFAULT_SEARCHABLE_TAG_KEYS = String.join(Const.COMMA, "http.method", "status_code", "db.type", "db.instance", "mq.queue", "mq.topic", "mq.broker");

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getRole() {
        return this.role;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getNamespace() {
        return this.namespace;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getRestHost() {
        return this.restHost;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getRestPort() {
        return this.restPort;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getRestContextPath() {
        return this.restContextPath;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getRestMaxThreads() {
        return this.restMaxThreads;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getRestIdleTimeOut() {
        return this.restIdleTimeOut;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getRestAcceptQueueSize() {
        return this.restAcceptQueueSize;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getGRPCHost() {
        return this.gRPCHost;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getGRPCPort() {
        return this.gRPCPort;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isGRPCSslEnabled() {
        return this.gRPCSslEnabled;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getGRPCSslKeyPath() {
        return this.gRPCSslKeyPath;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getGRPCSslCertChainPath() {
        return this.gRPCSslCertChainPath;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getGRPCSslTrustedCAPath() {
        return this.gRPCSslTrustedCAPath;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getMaxConcurrentCallsPerConnection() {
        return this.maxConcurrentCallsPerConnection;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getMaxMessageSize() {
        return this.maxMessageSize;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getTopNReportPeriod() {
        return this.topNReportPeriod;
    }

    /**
     * The period of L1 aggregation flush. Unit is ms.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getL1FlushPeriod() {
        return this.l1FlushPeriod;
    }

    /**
     * The threshold of session time. Unit is ms. Default value is 70s.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getStorageSessionTimeout() {
        return this.storageSessionTimeout;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<String> getDownsampling() {
        return this.downsampling;
    }

    /**
     * The period of doing data persistence. Unit is second.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getPersistentPeriod() {
        return this.persistentPeriod;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isEnableDataKeeperExecutor() {
        return this.enableDataKeeperExecutor;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getDataKeeperExecutePeriod() {
        return this.dataKeeperExecutePeriod;
    }

    /**
     * The time to live of all metrics data. Unit is day.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getMetricsDataTTL() {
        return this.metricsDataTTL;
    }

    /**
     * The time to live of all record data, including tracing. Unit is Day.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getRecordDataTTL() {
        return this.recordDataTTL;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getGRPCThreadPoolSize() {
        return this.gRPCThreadPoolSize;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getGRPCThreadPoolQueueSize() {
        return this.gRPCThreadPoolQueueSize;
    }

    /**
     * Timeout for cluster internal communication, in seconds.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getRemoteTimeout() {
        return this.remoteTimeout;
    }

    /**
     * The size of network address alias.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getMaxSizeOfNetworkAddressAlias() {
        return this.maxSizeOfNetworkAddressAlias;
    }

    /**
     * Following are cache setting for none stream(s)
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getMaxSizeOfProfileTask() {
        return this.maxSizeOfProfileTask;
    }

    /**
     * Analyze profile snapshots paging size.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getMaxPageSizeOfQueryProfileSnapshot() {
        return this.maxPageSizeOfQueryProfileSnapshot;
    }

    /**
     * Analyze profile snapshots max size.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getMaxSizeOfAnalyzeProfileSnapshot() {
        return this.maxSizeOfAnalyzeProfileSnapshot;
    }

    /**
     * Query the eBPF Profiling data max duration(second) from database.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getMaxDurationOfQueryEBPFProfilingData() {
        return this.maxDurationOfQueryEBPFProfilingData;
    }

    /**
     * Thread Count of query the eBPF Profiling data.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getMaxThreadCountOfQueryEBPFProfilingData() {
        return this.maxThreadCountOfQueryEBPFProfilingData;
    }

    /**
     * Extra model column are the column defined by {@link ScopeDefaultColumn.DefinedByField#requireDynamicActive()} ==
     * true. These columns of model are not required logically in aggregation or further query, and it will cause more
     * load for memory, network of OAP and storage.
     *
     * But, being activated, user could see the name in the storage entities, which make users easier to use 3rd party
     * tool, such as Kibana-&gt;ES, to query the data by themselves.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isActiveExtraModelColumns() {
        return this.activeExtraModelColumns;
    }

    /**
     * The max length of the service name.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getServiceNameMaxLength() {
        return this.serviceNameMaxLength;
    }

    /**
     * The max length of the service instance name.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getInstanceNameMaxLength() {
        return this.instanceNameMaxLength;
    }

    /**
     * The max length of the endpoint name.
     *
     * <p>NOTICE</p>
     * In the current practice, we don't recommend the length over 190.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getEndpointNameMaxLength() {
        return this.endpointNameMaxLength;
    }

    /**
     * The maximum size in bytes allowed for request headers.
     * Use -1 to disable it.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getHttpMaxRequestHeaderSize() {
        return this.httpMaxRequestHeaderSize;
    }

    /**
     * The period of HTTP URI pattern recognition. Unit is second.
     * @since 9.5.0
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getSyncPeriodHttpUriRecognitionPattern() {
        return this.syncPeriodHttpUriRecognitionPattern;
    }

    /**
     * The training period of HTTP URI pattern recognition. Unit is second.
     * @since 9.5.0
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getTrainingPeriodHttpUriRecognitionPattern() {
        return this.trainingPeriodHttpUriRecognitionPattern;
    }

    /**
     * The max number of HTTP URIs per service for further URI pattern recognition.
     * @since 9.5.0
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getMaxHttpUrisNumberPerService() {
        return this.maxHttpUrisNumberPerService;
    }

    /**
     * The UI menu should activate fetch interval, default 20s
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getUiMenuRefreshInterval() {
        return this.uiMenuRefreshInterval;
    }

    /**
     * The period of doing data persistence. Unit is second.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setPersistentPeriod(final int persistentPeriod) {
        this.persistentPeriod = persistentPeriod;
    }

    /**
     * Define the set of span tag keys, which should be searchable through the GraphQL.
     *
     * @since 8.2.0
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSearchableTracesTags(final String searchableTracesTags) {
        this.searchableTracesTags = searchableTracesTags;
    }

    /**
     * Define the set of span tag keys, which should be searchable through the GraphQL.
     *
     * @since 8.2.0
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getSearchableTracesTags() {
        return this.searchableTracesTags;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSearchableTracesTagsWatcher(final SearchableTracesTagsWatcher searchableTracesTagsWatcher) {
        this.searchableTracesTagsWatcher = searchableTracesTagsWatcher;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public SearchableTracesTagsWatcher getSearchableTracesTagsWatcher() {
        return this.searchableTracesTagsWatcher;
    }

    /**
     * Define the set of logs tag keys, which should be searchable through the GraphQL.
     *
     * @since 8.4.0
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSearchableLogsTags(final String searchableLogsTags) {
        this.searchableLogsTags = searchableLogsTags;
    }

    /**
     * Define the set of logs tag keys, which should be searchable through the GraphQL.
     *
     * @since 8.4.0
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getSearchableLogsTags() {
        return this.searchableLogsTags;
    }

    /**
     * Define the set of Alarm tag keys, which should be searchable through the GraphQL.
     *
     * @since 8.6.0
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSearchableAlarmTags(final String searchableAlarmTags) {
        this.searchableAlarmTags = searchableAlarmTags;
    }

    /**
     * Define the set of Alarm tag keys, which should be searchable through the GraphQL.
     *
     * @since 8.6.0
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getSearchableAlarmTags() {
        return this.searchableAlarmTags;
    }

    /**
     * The max size of tags keys for autocomplete select.
     *
     * @since 9.1.0
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setAutocompleteTagKeysQueryMaxSize(final int autocompleteTagKeysQueryMaxSize) {
        this.autocompleteTagKeysQueryMaxSize = autocompleteTagKeysQueryMaxSize;
    }

    /**
     * The max size of tags keys for autocomplete select.
     *
     * @since 9.1.0
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getAutocompleteTagKeysQueryMaxSize() {
        return this.autocompleteTagKeysQueryMaxSize;
    }

    /**
     * The max size of tags values for autocomplete select.
     *
     * @since 9.1.0
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setAutocompleteTagValuesQueryMaxSize(final int autocompleteTagValuesQueryMaxSize) {
        this.autocompleteTagValuesQueryMaxSize = autocompleteTagValuesQueryMaxSize;
    }

    /**
     * The max size of tags values for autocomplete select.
     *
     * @since 9.1.0
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getAutocompleteTagValuesQueryMaxSize() {
        return this.autocompleteTagValuesQueryMaxSize;
    }

    /**
     * The number of threads used to prepare metrics data to the storage.
     *
     * @since 8.7.0
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setPrepareThreads(final int prepareThreads) {
        this.prepareThreads = prepareThreads;
    }

    /**
     * The number of threads used to prepare metrics data to the storage.
     *
     * @since 8.7.0
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getPrepareThreads() {
        return this.prepareThreads;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isEnableEndpointNameGroupingByOpenapi() {
        return this.enableEndpointNameGroupingByOpenapi;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setEnableEndpointNameGroupingByOpenapi(final boolean enableEndpointNameGroupingByOpenapi) {
        this.enableEndpointNameGroupingByOpenapi = enableEndpointNameGroupingByOpenapi;
    }

    /**
     * The service cache refresh interval, default 10s
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setServiceCacheRefreshInterval(final int serviceCacheRefreshInterval) {
        this.serviceCacheRefreshInterval = serviceCacheRefreshInterval;
    }

    /**
     * The service cache refresh interval, default 10s
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getServiceCacheRefreshInterval() {
        return this.serviceCacheRefreshInterval;
    }
}
