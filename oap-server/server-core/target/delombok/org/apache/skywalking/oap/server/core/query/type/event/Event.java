// Generated by delombok at Thu Apr 18 20:39:52 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.query.type.event;

import com.google.gson.Gson;
import com.google.gson.JsonSyntaxException;
import com.google.gson.reflect.TypeToken;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import org.apache.skywalking.oap.server.core.query.type.KeyValue;
import org.apache.skywalking.oap.server.library.util.StringUtil;

public class Event {
    private static final Gson GSON = new Gson();
    private String uuid;
    private Source source;
    private String name;
    private EventType type;
    private String message;
    private List<KeyValue> parameters;
    private long startTime;
    private long endTime;
    private String layer;

    public void setParameters(final List<KeyValue> parameters) {
        this.parameters = parameters;
    }

    public void setParameters(final String json) {
        if (StringUtil.isNotEmpty(json)) {
            try {
                final Map<String, String> map = GSON.fromJson(json, new TypeToken<Map<String, String>>() {
                }.getType());
                this.parameters = map.entrySet().stream().map(e -> new KeyValue(e.getKey(), e.getValue())).collect(Collectors.toList());
            } catch (JsonSyntaxException e) {
                this.parameters = new ArrayList<>(2);
                this.parameters.add(new KeyValue("json_parse", "false"));
                this.parameters.add(new KeyValue("raw_parameters", json));
            }
        }
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Event() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getUuid() {
        return this.uuid;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Source getSource() {
        return this.source;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getName() {
        return this.name;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public EventType getType() {
        return this.type;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getMessage() {
        return this.message;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<KeyValue> getParameters() {
        return this.parameters;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getStartTime() {
        return this.startTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getEndTime() {
        return this.endTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getLayer() {
        return this.layer;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setUuid(final String uuid) {
        this.uuid = uuid;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSource(final Source source) {
        this.source = source;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setName(final String name) {
        this.name = name;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setType(final EventType type) {
        this.type = type;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setMessage(final String message) {
        this.message = message;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setStartTime(final long startTime) {
        this.startTime = startTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setEndTime(final long endTime) {
        this.endTime = endTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setLayer(final String layer) {
        this.layer = layer;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Event)) return false;
        final Event other = (Event) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (this.getStartTime() != other.getStartTime()) return false;
        if (this.getEndTime() != other.getEndTime()) return false;
        final java.lang.Object this$uuid = this.getUuid();
        final java.lang.Object other$uuid = other.getUuid();
        if (this$uuid == null ? other$uuid != null : !this$uuid.equals(other$uuid)) return false;
        final java.lang.Object this$source = this.getSource();
        final java.lang.Object other$source = other.getSource();
        if (this$source == null ? other$source != null : !this$source.equals(other$source)) return false;
        final java.lang.Object this$name = this.getName();
        final java.lang.Object other$name = other.getName();
        if (this$name == null ? other$name != null : !this$name.equals(other$name)) return false;
        final java.lang.Object this$type = this.getType();
        final java.lang.Object other$type = other.getType();
        if (this$type == null ? other$type != null : !this$type.equals(other$type)) return false;
        final java.lang.Object this$message = this.getMessage();
        final java.lang.Object other$message = other.getMessage();
        if (this$message == null ? other$message != null : !this$message.equals(other$message)) return false;
        final java.lang.Object this$parameters = this.getParameters();
        final java.lang.Object other$parameters = other.getParameters();
        if (this$parameters == null ? other$parameters != null : !this$parameters.equals(other$parameters)) return false;
        final java.lang.Object this$layer = this.getLayer();
        final java.lang.Object other$layer = other.getLayer();
        if (this$layer == null ? other$layer != null : !this$layer.equals(other$layer)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof Event;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final long $startTime = this.getStartTime();
        result = result * PRIME + (int) ($startTime >>> 32 ^ $startTime);
        final long $endTime = this.getEndTime();
        result = result * PRIME + (int) ($endTime >>> 32 ^ $endTime);
        final java.lang.Object $uuid = this.getUuid();
        result = result * PRIME + ($uuid == null ? 43 : $uuid.hashCode());
        final java.lang.Object $source = this.getSource();
        result = result * PRIME + ($source == null ? 43 : $source.hashCode());
        final java.lang.Object $name = this.getName();
        result = result * PRIME + ($name == null ? 43 : $name.hashCode());
        final java.lang.Object $type = this.getType();
        result = result * PRIME + ($type == null ? 43 : $type.hashCode());
        final java.lang.Object $message = this.getMessage();
        result = result * PRIME + ($message == null ? 43 : $message.hashCode());
        final java.lang.Object $parameters = this.getParameters();
        result = result * PRIME + ($parameters == null ? 43 : $parameters.hashCode());
        final java.lang.Object $layer = this.getLayer();
        result = result * PRIME + ($layer == null ? 43 : $layer.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "Event(uuid=" + this.getUuid() + ", source=" + this.getSource() + ", name=" + this.getName() + ", type=" + this.getType() + ", message=" + this.getMessage() + ", parameters=" + this.getParameters() + ", startTime=" + this.getStartTime() + ", endTime=" + this.getEndTime() + ", layer=" + this.getLayer() + ")";
    }
}
