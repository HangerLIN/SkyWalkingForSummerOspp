// Generated by delombok at Thu Apr 18 20:39:52 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.query.type;

import java.util.HashSet;
import java.util.Set;
import org.apache.skywalking.oap.server.core.analysis.IDManager;

public class Service {
    private String id;
    private String name;
    private String shortName;
    private String group;
    private boolean normal;
    private Set<String> layers = new HashSet<>();

    public void setId(String id) {
        this.id = id;
        IDManager.ServiceID.ServiceIDDefinition def = IDManager.ServiceID.analysisId(id);
        this.normal = def.isReal();
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Service)) return false;
        final Service other = (Service) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (this.isNormal() != other.isNormal()) return false;
        final java.lang.Object this$id = this.getId();
        final java.lang.Object other$id = other.getId();
        if (this$id == null ? other$id != null : !this$id.equals(other$id)) return false;
        final java.lang.Object this$name = this.getName();
        final java.lang.Object other$name = other.getName();
        if (this$name == null ? other$name != null : !this$name.equals(other$name)) return false;
        final java.lang.Object this$shortName = this.getShortName();
        final java.lang.Object other$shortName = other.getShortName();
        if (this$shortName == null ? other$shortName != null : !this$shortName.equals(other$shortName)) return false;
        final java.lang.Object this$group = this.getGroup();
        final java.lang.Object other$group = other.getGroup();
        if (this$group == null ? other$group != null : !this$group.equals(other$group)) return false;
        final java.lang.Object this$layers = this.getLayers();
        final java.lang.Object other$layers = other.getLayers();
        if (this$layers == null ? other$layers != null : !this$layers.equals(other$layers)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof Service;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + (this.isNormal() ? 79 : 97);
        final java.lang.Object $id = this.getId();
        result = result * PRIME + ($id == null ? 43 : $id.hashCode());
        final java.lang.Object $name = this.getName();
        result = result * PRIME + ($name == null ? 43 : $name.hashCode());
        final java.lang.Object $shortName = this.getShortName();
        result = result * PRIME + ($shortName == null ? 43 : $shortName.hashCode());
        final java.lang.Object $group = this.getGroup();
        result = result * PRIME + ($group == null ? 43 : $group.hashCode());
        final java.lang.Object $layers = this.getLayers();
        result = result * PRIME + ($layers == null ? 43 : $layers.hashCode());
        return result;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getId() {
        return this.id;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getName() {
        return this.name;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setName(final String name) {
        this.name = name;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getShortName() {
        return this.shortName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setShortName(final String shortName) {
        this.shortName = shortName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getGroup() {
        return this.group;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setGroup(final String group) {
        this.group = group;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isNormal() {
        return this.normal;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Set<String> getLayers() {
        return this.layers;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setLayers(final Set<String> layers) {
        this.layers = layers;
    }
}
