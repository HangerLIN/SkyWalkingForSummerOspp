// Generated by delombok at Thu Apr 18 20:39:51 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.cluster;

public class ClusterHealthStatus {
    private boolean health;
    private String reason;
    public static final ClusterHealthStatus HEALTH = new ClusterHealthStatus(true, null);

    public static ClusterHealthStatus unHealth(String reason) {
        return new ClusterHealthStatus(false, reason);
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public ClusterHealthStatus() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public ClusterHealthStatus(final boolean health, final String reason) {
        this.health = health;
        this.reason = reason;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isHealth() {
        return this.health;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getReason() {
        return this.reason;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setHealth(final boolean health) {
        this.health = health;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setReason(final String reason) {
        this.reason = reason;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof ClusterHealthStatus)) return false;
        final ClusterHealthStatus other = (ClusterHealthStatus) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (this.isHealth() != other.isHealth()) return false;
        final java.lang.Object this$reason = this.getReason();
        final java.lang.Object other$reason = other.getReason();
        if (this$reason == null ? other$reason != null : !this$reason.equals(other$reason)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof ClusterHealthStatus;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + (this.isHealth() ? 79 : 97);
        final java.lang.Object $reason = this.getReason();
        result = result * PRIME + ($reason == null ? 43 : $reason.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "ClusterHealthStatus(health=" + this.isHealth() + ", reason=" + this.getReason() + ")";
    }
}
