// Generated by delombok at Thu Apr 18 20:39:52 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.query.type;

import org.apache.skywalking.oap.server.core.profiling.continuous.storage.ContinuousProfilingMonitorType;

/**
 * Continuous profiling task single trigger casus
 */
public class ContinuousProfilingTriggeredCause {
    private ContinuousProfilingMonitorType type;
    private ContinuousProfilingSingleValueCause singleValue;
    private ContinuousProfilingURICause uri;
    private String message;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public ContinuousProfilingTriggeredCause() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public ContinuousProfilingMonitorType getType() {
        return this.type;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public ContinuousProfilingSingleValueCause getSingleValue() {
        return this.singleValue;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public ContinuousProfilingURICause getUri() {
        return this.uri;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getMessage() {
        return this.message;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setType(final ContinuousProfilingMonitorType type) {
        this.type = type;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSingleValue(final ContinuousProfilingSingleValueCause singleValue) {
        this.singleValue = singleValue;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setUri(final ContinuousProfilingURICause uri) {
        this.uri = uri;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setMessage(final String message) {
        this.message = message;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof ContinuousProfilingTriggeredCause)) return false;
        final ContinuousProfilingTriggeredCause other = (ContinuousProfilingTriggeredCause) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$type = this.getType();
        final java.lang.Object other$type = other.getType();
        if (this$type == null ? other$type != null : !this$type.equals(other$type)) return false;
        final java.lang.Object this$singleValue = this.getSingleValue();
        final java.lang.Object other$singleValue = other.getSingleValue();
        if (this$singleValue == null ? other$singleValue != null : !this$singleValue.equals(other$singleValue)) return false;
        final java.lang.Object this$uri = this.getUri();
        final java.lang.Object other$uri = other.getUri();
        if (this$uri == null ? other$uri != null : !this$uri.equals(other$uri)) return false;
        final java.lang.Object this$message = this.getMessage();
        final java.lang.Object other$message = other.getMessage();
        if (this$message == null ? other$message != null : !this$message.equals(other$message)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof ContinuousProfilingTriggeredCause;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $type = this.getType();
        result = result * PRIME + ($type == null ? 43 : $type.hashCode());
        final java.lang.Object $singleValue = this.getSingleValue();
        result = result * PRIME + ($singleValue == null ? 43 : $singleValue.hashCode());
        final java.lang.Object $uri = this.getUri();
        result = result * PRIME + ($uri == null ? 43 : $uri.hashCode());
        final java.lang.Object $message = this.getMessage();
        result = result * PRIME + ($message == null ? 43 : $message.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "ContinuousProfilingTriggeredCause(type=" + this.getType() + ", singleValue=" + this.getSingleValue() + ", uri=" + this.getUri() + ", message=" + this.getMessage() + ")";
    }
}
