// Generated by delombok at Thu Apr 18 20:39:52 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.query.type;

public class EBPFProfilingSchedule {
    private String scheduleId;
    private String taskId;
    private String processId;
    private Process process;
    private long startTime;
    private long endTime;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public EBPFProfilingSchedule() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getScheduleId() {
        return this.scheduleId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getTaskId() {
        return this.taskId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getProcessId() {
        return this.processId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Process getProcess() {
        return this.process;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getStartTime() {
        return this.startTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getEndTime() {
        return this.endTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setScheduleId(final String scheduleId) {
        this.scheduleId = scheduleId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTaskId(final String taskId) {
        this.taskId = taskId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setProcessId(final String processId) {
        this.processId = processId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setProcess(final Process process) {
        this.process = process;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setStartTime(final long startTime) {
        this.startTime = startTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setEndTime(final long endTime) {
        this.endTime = endTime;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof EBPFProfilingSchedule)) return false;
        final EBPFProfilingSchedule other = (EBPFProfilingSchedule) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (this.getStartTime() != other.getStartTime()) return false;
        if (this.getEndTime() != other.getEndTime()) return false;
        final java.lang.Object this$scheduleId = this.getScheduleId();
        final java.lang.Object other$scheduleId = other.getScheduleId();
        if (this$scheduleId == null ? other$scheduleId != null : !this$scheduleId.equals(other$scheduleId)) return false;
        final java.lang.Object this$taskId = this.getTaskId();
        final java.lang.Object other$taskId = other.getTaskId();
        if (this$taskId == null ? other$taskId != null : !this$taskId.equals(other$taskId)) return false;
        final java.lang.Object this$processId = this.getProcessId();
        final java.lang.Object other$processId = other.getProcessId();
        if (this$processId == null ? other$processId != null : !this$processId.equals(other$processId)) return false;
        final java.lang.Object this$process = this.getProcess();
        final java.lang.Object other$process = other.getProcess();
        if (this$process == null ? other$process != null : !this$process.equals(other$process)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof EBPFProfilingSchedule;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final long $startTime = this.getStartTime();
        result = result * PRIME + (int) ($startTime >>> 32 ^ $startTime);
        final long $endTime = this.getEndTime();
        result = result * PRIME + (int) ($endTime >>> 32 ^ $endTime);
        final java.lang.Object $scheduleId = this.getScheduleId();
        result = result * PRIME + ($scheduleId == null ? 43 : $scheduleId.hashCode());
        final java.lang.Object $taskId = this.getTaskId();
        result = result * PRIME + ($taskId == null ? 43 : $taskId.hashCode());
        final java.lang.Object $processId = this.getProcessId();
        result = result * PRIME + ($processId == null ? 43 : $processId.hashCode());
        final java.lang.Object $process = this.getProcess();
        result = result * PRIME + ($process == null ? 43 : $process.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "EBPFProfilingSchedule(scheduleId=" + this.getScheduleId() + ", taskId=" + this.getTaskId() + ", processId=" + this.getProcessId() + ", process=" + this.getProcess() + ", startTime=" + this.getStartTime() + ", endTime=" + this.getEndTime() + ")";
    }
}
