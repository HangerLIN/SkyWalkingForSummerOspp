// Generated by delombok at Thu Apr 18 20:39:51 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.source;

import com.google.common.base.Charsets;
import com.google.common.hash.Hashing;
import static org.apache.skywalking.oap.server.core.source.DefaultScopeDefine.EBPF_PROFILING_SCHEDULE;

@ScopeDeclaration(id = EBPF_PROFILING_SCHEDULE, name = "EBPFProcessProfilingSchedule")
@ScopeDefaultColumn.VirtualColumnDefinition(fieldName = "entityId", columnName = "entity_id", isID = true, type = String.class)
public class EBPFProcessProfilingSchedule extends Source {
    private volatile String entityId;

    @Override
    public int scope() {
        return EBPF_PROFILING_SCHEDULE;
    }

    @Override
    public String getEntityId() {
        if (entityId == null) {
            entityId = Hashing.sha256().newHasher().putString(String.format("%s_%s_%d", taskId, processId, startTime), Charsets.UTF_8).hash().toString();
        }
        return entityId;
    }

    private String processId;
    private String taskId;
    private long startTime;
    private long currentTime;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setEntityId(final String entityId) {
        this.entityId = entityId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setProcessId(final String processId) {
        this.processId = processId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTaskId(final String taskId) {
        this.taskId = taskId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setStartTime(final long startTime) {
        this.startTime = startTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setCurrentTime(final long currentTime) {
        this.currentTime = currentTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getProcessId() {
        return this.processId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getTaskId() {
        return this.taskId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getStartTime() {
        return this.startTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getCurrentTime() {
        return this.currentTime;
    }
}
