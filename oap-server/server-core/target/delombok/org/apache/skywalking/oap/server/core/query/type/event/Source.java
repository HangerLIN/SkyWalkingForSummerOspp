// Generated by delombok at Thu Apr 18 20:39:52 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.query.type.event;

public class Source {
    private String service;
    private String serviceInstance;
    private String endpoint;


    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static class SourceBuilder {
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private String service;
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private String serviceInstance;
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private String endpoint;

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        SourceBuilder() {
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public Source.SourceBuilder service(final String service) {
            this.service = service;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public Source.SourceBuilder serviceInstance(final String serviceInstance) {
            this.serviceInstance = serviceInstance;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public Source.SourceBuilder endpoint(final String endpoint) {
            this.endpoint = endpoint;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public Source build() {
            return new Source(this.service, this.serviceInstance, this.endpoint);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public java.lang.String toString() {
            return "Source.SourceBuilder(service=" + this.service + ", serviceInstance=" + this.serviceInstance + ", endpoint=" + this.endpoint + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static Source.SourceBuilder builder() {
        return new Source.SourceBuilder();
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getService() {
        return this.service;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getServiceInstance() {
        return this.serviceInstance;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getEndpoint() {
        return this.endpoint;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setService(final String service) {
        this.service = service;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setServiceInstance(final String serviceInstance) {
        this.serviceInstance = serviceInstance;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setEndpoint(final String endpoint) {
        this.endpoint = endpoint;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Source)) return false;
        final Source other = (Source) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$service = this.getService();
        final java.lang.Object other$service = other.getService();
        if (this$service == null ? other$service != null : !this$service.equals(other$service)) return false;
        final java.lang.Object this$serviceInstance = this.getServiceInstance();
        final java.lang.Object other$serviceInstance = other.getServiceInstance();
        if (this$serviceInstance == null ? other$serviceInstance != null : !this$serviceInstance.equals(other$serviceInstance)) return false;
        final java.lang.Object this$endpoint = this.getEndpoint();
        final java.lang.Object other$endpoint = other.getEndpoint();
        if (this$endpoint == null ? other$endpoint != null : !this$endpoint.equals(other$endpoint)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof Source;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $service = this.getService();
        result = result * PRIME + ($service == null ? 43 : $service.hashCode());
        final java.lang.Object $serviceInstance = this.getServiceInstance();
        result = result * PRIME + ($serviceInstance == null ? 43 : $serviceInstance.hashCode());
        final java.lang.Object $endpoint = this.getEndpoint();
        result = result * PRIME + ($endpoint == null ? 43 : $endpoint.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "Source(service=" + this.getService() + ", serviceInstance=" + this.getServiceInstance() + ", endpoint=" + this.getEndpoint() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Source() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Source(final String service, final String serviceInstance, final String endpoint) {
        this.service = service;
        this.serviceInstance = serviceInstance;
        this.endpoint = endpoint;
    }
}
