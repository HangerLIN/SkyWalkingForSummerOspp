// Generated by delombok at Thu Apr 18 20:39:52 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.query.input;

import org.apache.skywalking.oap.server.core.profiling.ebpf.storage.EBPFProfilingTargetType;
import java.util.List;

public class EBPFProfilingTaskFixedTimeCreationRequest {
    // Define which processes under the service need to be profiling
    private String serviceId;
    // Aggregate which processes need to be profiling from labels
    private List<String> processLabels;
    // The task start timestamp(ms), if less than or equal zero means the task starts ASAP
    private long startTime;
    // the profiling duration(s)
    private int duration;
    // the task profiling target type
    private EBPFProfilingTargetType targetType;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getServiceId() {
        return this.serviceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<String> getProcessLabels() {
        return this.processLabels;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getStartTime() {
        return this.startTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getDuration() {
        return this.duration;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public EBPFProfilingTargetType getTargetType() {
        return this.targetType;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setServiceId(final String serviceId) {
        this.serviceId = serviceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setProcessLabels(final List<String> processLabels) {
        this.processLabels = processLabels;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setStartTime(final long startTime) {
        this.startTime = startTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setDuration(final int duration) {
        this.duration = duration;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTargetType(final EBPFProfilingTargetType targetType) {
        this.targetType = targetType;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof EBPFProfilingTaskFixedTimeCreationRequest)) return false;
        final EBPFProfilingTaskFixedTimeCreationRequest other = (EBPFProfilingTaskFixedTimeCreationRequest) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (this.getStartTime() != other.getStartTime()) return false;
        if (this.getDuration() != other.getDuration()) return false;
        final java.lang.Object this$serviceId = this.getServiceId();
        final java.lang.Object other$serviceId = other.getServiceId();
        if (this$serviceId == null ? other$serviceId != null : !this$serviceId.equals(other$serviceId)) return false;
        final java.lang.Object this$processLabels = this.getProcessLabels();
        final java.lang.Object other$processLabels = other.getProcessLabels();
        if (this$processLabels == null ? other$processLabels != null : !this$processLabels.equals(other$processLabels)) return false;
        final java.lang.Object this$targetType = this.getTargetType();
        final java.lang.Object other$targetType = other.getTargetType();
        if (this$targetType == null ? other$targetType != null : !this$targetType.equals(other$targetType)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof EBPFProfilingTaskFixedTimeCreationRequest;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final long $startTime = this.getStartTime();
        result = result * PRIME + (int) ($startTime >>> 32 ^ $startTime);
        result = result * PRIME + this.getDuration();
        final java.lang.Object $serviceId = this.getServiceId();
        result = result * PRIME + ($serviceId == null ? 43 : $serviceId.hashCode());
        final java.lang.Object $processLabels = this.getProcessLabels();
        result = result * PRIME + ($processLabels == null ? 43 : $processLabels.hashCode());
        final java.lang.Object $targetType = this.getTargetType();
        result = result * PRIME + ($targetType == null ? 43 : $targetType.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "EBPFProfilingTaskFixedTimeCreationRequest(serviceId=" + this.getServiceId() + ", processLabels=" + this.getProcessLabels() + ", startTime=" + this.getStartTime() + ", duration=" + this.getDuration() + ", targetType=" + this.getTargetType() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public EBPFProfilingTaskFixedTimeCreationRequest(final String serviceId, final List<String> processLabels, final long startTime, final int duration, final EBPFProfilingTargetType targetType) {
        this.serviceId = serviceId;
        this.processLabels = processLabels;
        this.startTime = startTime;
        this.duration = duration;
        this.targetType = targetType;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public EBPFProfilingTaskFixedTimeCreationRequest() {
    }
}
