// Generated by delombok at Thu Apr 18 20:39:51 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.source;

import java.util.ArrayList;
import java.util.List;
import org.apache.skywalking.oap.server.core.UnexpectedException;
import org.apache.skywalking.oap.server.core.analysis.manual.searchtag.Tag;
import org.apache.skywalking.oap.server.core.query.type.ContentType;

public abstract class AbstractLog extends Source {
    private long timestamp;
    private String serviceId;
    private String serviceInstanceId;
    private String endpointId;
    private String traceId;
    private String traceSegmentId;
    private int spanId;
    private ContentType contentType = ContentType.NONE;
    private String content;
    private byte[] tagsRawData;
    private List<Tag> tags = new ArrayList<>();
    private boolean error = false;

    @Override
    public String getEntityId() {
        throw new UnexpectedException("getEntityId is not supported in AbstractLog source");
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTimestamp(final long timestamp) {
        this.timestamp = timestamp;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setServiceId(final String serviceId) {
        this.serviceId = serviceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setServiceInstanceId(final String serviceInstanceId) {
        this.serviceInstanceId = serviceInstanceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setEndpointId(final String endpointId) {
        this.endpointId = endpointId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTraceId(final String traceId) {
        this.traceId = traceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTraceSegmentId(final String traceSegmentId) {
        this.traceSegmentId = traceSegmentId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSpanId(final int spanId) {
        this.spanId = spanId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setContentType(final ContentType contentType) {
        this.contentType = contentType;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setContent(final String content) {
        this.content = content;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTagsRawData(final byte[] tagsRawData) {
        this.tagsRawData = tagsRawData;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTags(final List<Tag> tags) {
        this.tags = tags;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setError(final boolean error) {
        this.error = error;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getTimestamp() {
        return this.timestamp;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getServiceId() {
        return this.serviceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getServiceInstanceId() {
        return this.serviceInstanceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getEndpointId() {
        return this.endpointId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getTraceId() {
        return this.traceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getTraceSegmentId() {
        return this.traceSegmentId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getSpanId() {
        return this.spanId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public ContentType getContentType() {
        return this.contentType;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getContent() {
        return this.content;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public byte[] getTagsRawData() {
        return this.tagsRawData;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<Tag> getTags() {
        return this.tags;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isError() {
        return this.error;
    }
}
