// Generated by delombok at Thu Apr 18 20:39:51 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.source;

import com.google.gson.JsonObject;
import org.apache.skywalking.oap.server.core.analysis.IDManager;
import org.apache.skywalking.oap.server.core.analysis.manual.process.ProcessDetectType;
import org.apache.skywalking.oap.server.core.query.enumeration.ProfilingSupportStatus;
import java.util.List;
import static org.apache.skywalking.oap.server.core.source.DefaultScopeDefine.PROCESS;
import static org.apache.skywalking.oap.server.core.source.DefaultScopeDefine.PROCESS_CATALOG_NAME;

@ScopeDeclaration(id = PROCESS, name = "Process", catalog = PROCESS_CATALOG_NAME)
@ScopeDefaultColumn.VirtualColumnDefinition(fieldName = "entityId", columnName = "entity_id", isID = true, type = String.class)
public class Process extends Source {
    private volatile String entityId;

    @Override
    public int scope() {
        return PROCESS;
    }

    @Override
    public String getEntityId() {
        if (entityId == null) {
            entityId = IDManager.ProcessID.buildId(instanceId, name);
        }
        return entityId;
    }

    private String instanceId;
    private String serviceId;
    private String name;
    private String serviceName;
    private String instanceName;
    private boolean isServiceNormal;
    private String agentId;
    private ProcessDetectType detectType;
    private JsonObject properties;
    private List<String> labels;
    private ProfilingSupportStatus profilingSupportStatus;

    @Override
    public void prepare() {
        serviceId = IDManager.ServiceID.buildId(serviceName, isServiceNormal);
        instanceId = IDManager.ServiceInstanceID.buildId(serviceId, instanceName);
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getInstanceId() {
        return this.instanceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getServiceId() {
        return this.serviceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getName() {
        return this.name;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setName(final String name) {
        this.name = name;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getServiceName() {
        return this.serviceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setServiceName(final String serviceName) {
        this.serviceName = serviceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getInstanceName() {
        return this.instanceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setInstanceName(final String instanceName) {
        this.instanceName = instanceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isServiceNormal() {
        return this.isServiceNormal;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setServiceNormal(final boolean isServiceNormal) {
        this.isServiceNormal = isServiceNormal;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getAgentId() {
        return this.agentId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setAgentId(final String agentId) {
        this.agentId = agentId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public ProcessDetectType getDetectType() {
        return this.detectType;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setDetectType(final ProcessDetectType detectType) {
        this.detectType = detectType;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public JsonObject getProperties() {
        return this.properties;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setProperties(final JsonObject properties) {
        this.properties = properties;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setLabels(final List<String> labels) {
        this.labels = labels;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<String> getLabels() {
        return this.labels;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setProfilingSupportStatus(final ProfilingSupportStatus profilingSupportStatus) {
        this.profilingSupportStatus = profilingSupportStatus;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public ProfilingSupportStatus getProfilingSupportStatus() {
        return this.profilingSupportStatus;
    }
}
