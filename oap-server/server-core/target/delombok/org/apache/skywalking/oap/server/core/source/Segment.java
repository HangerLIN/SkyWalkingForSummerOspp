// Generated by delombok at Thu Apr 18 20:39:51 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.source;

import java.util.ArrayList;
import java.util.List;
import org.apache.skywalking.oap.server.core.analysis.manual.searchtag.Tag;
import static org.apache.skywalking.oap.server.core.source.DefaultScopeDefine.SEGMENT;

@ScopeDeclaration(id = SEGMENT, name = "Segment")
public class Segment extends Source {
    @Override
    public int scope() {
        return DefaultScopeDefine.SEGMENT;
    }

    @Override
    public String getEntityId() {
        return segmentId;
    }

    private String segmentId;
    private String traceId;
    private String serviceId;
    private String serviceInstanceId;
    private String endpointId;
    private long startTime;
    private int latency;
    private int isError;
    private byte[] dataBinary;
    private List<Tag> tags = new ArrayList<>();

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "Segment(segmentId=" + this.getSegmentId() + ", traceId=" + this.getTraceId() + ", serviceId=" + this.getServiceId() + ", serviceInstanceId=" + this.getServiceInstanceId() + ", endpointId=" + this.getEndpointId() + ", startTime=" + this.getStartTime() + ", latency=" + this.getLatency() + ", isError=" + this.getIsError() + ", dataBinary=" + java.util.Arrays.toString(this.getDataBinary()) + ", tags=" + this.getTags() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSegmentId(final String segmentId) {
        this.segmentId = segmentId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getSegmentId() {
        return this.segmentId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTraceId(final String traceId) {
        this.traceId = traceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getTraceId() {
        return this.traceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setServiceId(final String serviceId) {
        this.serviceId = serviceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getServiceId() {
        return this.serviceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setServiceInstanceId(final String serviceInstanceId) {
        this.serviceInstanceId = serviceInstanceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getServiceInstanceId() {
        return this.serviceInstanceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setEndpointId(final String endpointId) {
        this.endpointId = endpointId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getEndpointId() {
        return this.endpointId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setStartTime(final long startTime) {
        this.startTime = startTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getStartTime() {
        return this.startTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setLatency(final int latency) {
        this.latency = latency;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getLatency() {
        return this.latency;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setIsError(final int isError) {
        this.isError = isError;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getIsError() {
        return this.isError;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setDataBinary(final byte[] dataBinary) {
        this.dataBinary = dataBinary;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public byte[] getDataBinary() {
        return this.dataBinary;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTags(final List<Tag> tags) {
        this.tags = tags;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<Tag> getTags() {
        return this.tags;
    }
}
