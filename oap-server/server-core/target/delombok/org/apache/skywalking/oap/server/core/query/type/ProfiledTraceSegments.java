// Generated by delombok at Thu Apr 18 20:39:52 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.query.type;

import java.util.ArrayList;
import java.util.List;

public class ProfiledTraceSegments {
    private String traceId;
    private String instanceId;
    private String instanceName;
    private List<String> endpointNames;
    private int duration;
    private String start;
    private List<ProfiledSpan> spans;
    private boolean containsProfiled;

    public ProfiledTraceSegments() {
        this.endpointNames = new ArrayList<>();
        this.spans = new ArrayList<>();
    }

    public void merge(ProfiledTraceSegments other) {
        this.spans.addAll(other.spans);
        if (!this.containsProfiled) {
            this.containsProfiled = other.containsProfiled;
        }
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getTraceId() {
        return this.traceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getInstanceId() {
        return this.instanceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getInstanceName() {
        return this.instanceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<String> getEndpointNames() {
        return this.endpointNames;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getDuration() {
        return this.duration;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getStart() {
        return this.start;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<ProfiledSpan> getSpans() {
        return this.spans;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isContainsProfiled() {
        return this.containsProfiled;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTraceId(final String traceId) {
        this.traceId = traceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setInstanceId(final String instanceId) {
        this.instanceId = instanceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setInstanceName(final String instanceName) {
        this.instanceName = instanceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setEndpointNames(final List<String> endpointNames) {
        this.endpointNames = endpointNames;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setDuration(final int duration) {
        this.duration = duration;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setStart(final String start) {
        this.start = start;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSpans(final List<ProfiledSpan> spans) {
        this.spans = spans;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setContainsProfiled(final boolean containsProfiled) {
        this.containsProfiled = containsProfiled;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof ProfiledTraceSegments)) return false;
        final ProfiledTraceSegments other = (ProfiledTraceSegments) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (this.getDuration() != other.getDuration()) return false;
        if (this.isContainsProfiled() != other.isContainsProfiled()) return false;
        final java.lang.Object this$traceId = this.getTraceId();
        final java.lang.Object other$traceId = other.getTraceId();
        if (this$traceId == null ? other$traceId != null : !this$traceId.equals(other$traceId)) return false;
        final java.lang.Object this$instanceId = this.getInstanceId();
        final java.lang.Object other$instanceId = other.getInstanceId();
        if (this$instanceId == null ? other$instanceId != null : !this$instanceId.equals(other$instanceId)) return false;
        final java.lang.Object this$instanceName = this.getInstanceName();
        final java.lang.Object other$instanceName = other.getInstanceName();
        if (this$instanceName == null ? other$instanceName != null : !this$instanceName.equals(other$instanceName)) return false;
        final java.lang.Object this$endpointNames = this.getEndpointNames();
        final java.lang.Object other$endpointNames = other.getEndpointNames();
        if (this$endpointNames == null ? other$endpointNames != null : !this$endpointNames.equals(other$endpointNames)) return false;
        final java.lang.Object this$start = this.getStart();
        final java.lang.Object other$start = other.getStart();
        if (this$start == null ? other$start != null : !this$start.equals(other$start)) return false;
        final java.lang.Object this$spans = this.getSpans();
        final java.lang.Object other$spans = other.getSpans();
        if (this$spans == null ? other$spans != null : !this$spans.equals(other$spans)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof ProfiledTraceSegments;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + this.getDuration();
        result = result * PRIME + (this.isContainsProfiled() ? 79 : 97);
        final java.lang.Object $traceId = this.getTraceId();
        result = result * PRIME + ($traceId == null ? 43 : $traceId.hashCode());
        final java.lang.Object $instanceId = this.getInstanceId();
        result = result * PRIME + ($instanceId == null ? 43 : $instanceId.hashCode());
        final java.lang.Object $instanceName = this.getInstanceName();
        result = result * PRIME + ($instanceName == null ? 43 : $instanceName.hashCode());
        final java.lang.Object $endpointNames = this.getEndpointNames();
        result = result * PRIME + ($endpointNames == null ? 43 : $endpointNames.hashCode());
        final java.lang.Object $start = this.getStart();
        result = result * PRIME + ($start == null ? 43 : $start.hashCode());
        final java.lang.Object $spans = this.getSpans();
        result = result * PRIME + ($spans == null ? 43 : $spans.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "ProfiledTraceSegments(traceId=" + this.getTraceId() + ", instanceId=" + this.getInstanceId() + ", instanceName=" + this.getInstanceName() + ", endpointNames=" + this.getEndpointNames() + ", duration=" + this.getDuration() + ", start=" + this.getStart() + ", spans=" + this.getSpans() + ", containsProfiled=" + this.isContainsProfiled() + ")";
    }
}
