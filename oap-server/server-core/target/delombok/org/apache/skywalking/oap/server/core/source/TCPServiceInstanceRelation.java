// Generated by delombok at Thu Apr 18 20:39:51 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.apache.skywalking.oap.server.core.source;

import org.apache.skywalking.oap.server.core.analysis.Layer;
import org.apache.skywalking.oap.server.library.util.StringUtil;
import org.apache.skywalking.oap.server.core.analysis.IDManager;
import static org.apache.skywalking.oap.server.core.source.DefaultScopeDefine.TCP_SERVICE_INSTANCE_RELATION;
import static org.apache.skywalking.oap.server.core.source.DefaultScopeDefine.SERVICE_INSTANCE_RELATION_CATALOG_NAME;

@ScopeDeclaration(id = TCP_SERVICE_INSTANCE_RELATION, name = "TCPServiceInstanceRelation", catalog = SERVICE_INSTANCE_RELATION_CATALOG_NAME)
@ScopeDefaultColumn.VirtualColumnDefinition(fieldName = "entityId", columnName = "entity_id", isID = true, type = String.class)
public class TCPServiceInstanceRelation extends Source {
    private String entityId;

    @Override
    public int scope() {
        return DefaultScopeDefine.TCP_SERVICE_INSTANCE_RELATION;
    }

    @Override
    public String getEntityId() {
        if (StringUtil.isEmpty(entityId)) {
            entityId = IDManager.ServiceInstanceID.buildRelationId(new IDManager.ServiceInstanceID.ServiceInstanceRelationDefine(sourceServiceInstanceId, destServiceInstanceId));
        }
        return entityId;
    }

    private String sourceServiceInstanceId;
    private String sourceServiceId;
    @ScopeDefaultColumn.DefinedByField(columnName = "source_service_name", requireDynamicActive = true)
    private String sourceServiceName;
    private Layer sourceServiceLayer;
    @ScopeDefaultColumn.DefinedByField(columnName = "source_service_instance_name", requireDynamicActive = true)
    private String sourceServiceInstanceName;
    private String destServiceInstanceId;
    private String destServiceId;
    private Layer destServiceLayer;
    @ScopeDefaultColumn.DefinedByField(columnName = "dest_service_name", requireDynamicActive = true)
    private String destServiceName;
    @ScopeDefaultColumn.DefinedByField(columnName = "dest_service_instance_name", requireDynamicActive = true)
    private String destServiceInstanceName;
    private int componentId;
    private DetectPoint detectPoint;
    private String tlsMode;
    private SideCar sideCar = new SideCar();
    private long receivedBytes;
    private long sentBytes;

    @Override
    public void prepare() {
        sourceServiceId = IDManager.ServiceID.buildId(sourceServiceName, sourceServiceLayer.isNormal());
        destServiceId = IDManager.ServiceID.buildId(destServiceName, destServiceLayer.isNormal());
        sourceServiceInstanceId = IDManager.ServiceInstanceID.buildId(sourceServiceId, sourceServiceInstanceName);
        destServiceInstanceId = IDManager.ServiceInstanceID.buildId(destServiceId, destServiceInstanceName);
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getSourceServiceInstanceId() {
        return this.sourceServiceInstanceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getSourceServiceId() {
        return this.sourceServiceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getSourceServiceName() {
        return this.sourceServiceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSourceServiceName(final String sourceServiceName) {
        this.sourceServiceName = sourceServiceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Layer getSourceServiceLayer() {
        return this.sourceServiceLayer;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSourceServiceLayer(final Layer sourceServiceLayer) {
        this.sourceServiceLayer = sourceServiceLayer;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getSourceServiceInstanceName() {
        return this.sourceServiceInstanceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSourceServiceInstanceName(final String sourceServiceInstanceName) {
        this.sourceServiceInstanceName = sourceServiceInstanceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getDestServiceInstanceId() {
        return this.destServiceInstanceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getDestServiceId() {
        return this.destServiceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Layer getDestServiceLayer() {
        return this.destServiceLayer;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setDestServiceLayer(final Layer destServiceLayer) {
        this.destServiceLayer = destServiceLayer;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getDestServiceName() {
        return this.destServiceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setDestServiceName(final String destServiceName) {
        this.destServiceName = destServiceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getDestServiceInstanceName() {
        return this.destServiceInstanceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setDestServiceInstanceName(final String destServiceInstanceName) {
        this.destServiceInstanceName = destServiceInstanceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getComponentId() {
        return this.componentId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setComponentId(final int componentId) {
        this.componentId = componentId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public DetectPoint getDetectPoint() {
        return this.detectPoint;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setDetectPoint(final DetectPoint detectPoint) {
        this.detectPoint = detectPoint;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getTlsMode() {
        return this.tlsMode;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTlsMode(final String tlsMode) {
        this.tlsMode = tlsMode;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public SideCar getSideCar() {
        return this.sideCar;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSideCar(final SideCar sideCar) {
        this.sideCar = sideCar;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getReceivedBytes() {
        return this.receivedBytes;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setReceivedBytes(final long receivedBytes) {
        this.receivedBytes = receivedBytes;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getSentBytes() {
        return this.sentBytes;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSentBytes(final long sentBytes) {
        this.sentBytes = sentBytes;
    }
}
