// Generated by delombok at Thu Apr 18 20:40:19 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.skywalking.oap.server.receiver.browser.provider.parser.performance.listener;

import org.apache.skywalking.oap.server.core.browser.source.BrowserAppPagePerf;
import org.apache.skywalking.oap.server.core.browser.source.BrowserAppPageTraffic;
import org.apache.skywalking.oap.server.core.browser.source.BrowserAppPerf;
import org.apache.skywalking.oap.server.core.browser.source.BrowserAppPerfSource;
import org.apache.skywalking.oap.server.core.browser.source.BrowserAppSingleVersionPerf;
import org.apache.skywalking.oap.server.core.browser.source.BrowserAppSingleVersionTraffic;
import org.apache.skywalking.oap.server.core.browser.source.BrowserAppTraffic;
import org.apache.skywalking.oap.server.core.browser.source.BrowserAppTrafficCategory;
import org.apache.skywalking.oap.server.core.browser.source.BrowserAppTrafficSource;
import org.apache.skywalking.oap.server.core.config.NamingControl;
import org.apache.skywalking.oap.server.core.source.Source;

/**
 * Browser traffic and performance related source.
 */
class SourceBuilder {
    private final NamingControl namingControl;
    private String service;

    public void setService(final String service) {
        this.service = namingControl.formatServiceName(service);
    }

    private String serviceVersion;

    public void setServiceVersion(final String serviceVersion) {
        this.serviceVersion = namingControl.formatInstanceName(serviceVersion);
    }

    private String patePath;

    public void setPatePath(final String patePath) {
        this.patePath = namingControl.formatEndpointName(service, patePath);
    }

    private long timeBucket;
    // performance data detail
    private int redirectTime;
    private int dnsTime;
    private int ttfbTime;
    private int tcpTime;
    private int transTime;
    private int domAnalysisTime;
    private int fptTime;
    private int domReadyTime;
    private int loadPageTime;
    private int resTime;
    private int sslTime;
    private int ttlTime;
    private int firstPackTime;
    private int fmpTime;

    private void toSource(Source source) {
        source.setTimeBucket(timeBucket);
    }

    private void toBrowserAppTrafficSource(BrowserAppTrafficSource source) {
        toSource(source);
        source.setTrafficCategory(BrowserAppTrafficCategory.NORMAL);
    }

    /**
     * Browser service meta and traffic metrics related source.
     */
    BrowserAppTraffic toBrowserAppTraffic() {
        BrowserAppTraffic traffic = new BrowserAppTraffic();
        traffic.setName(service);
        toBrowserAppTrafficSource(traffic);
        return traffic;
    }

    /**
     * Browser single version meta and traffic metrics related source.
     */
    BrowserAppSingleVersionTraffic toBrowserAppSingleVersionTraffic() {
        BrowserAppSingleVersionTraffic traffic = new BrowserAppSingleVersionTraffic();
        traffic.setName(serviceVersion);
        traffic.setServiceName(service);
        toBrowserAppTrafficSource(traffic);
        return traffic;
    }

    /**
     * Browser page meta and traffic metrics related source.
     */
    BrowserAppPageTraffic toBrowserAppPageTraffic() {
        BrowserAppPageTraffic traffic = new BrowserAppPageTraffic();
        traffic.setName(patePath);
        traffic.setServiceName(service);
        toBrowserAppTrafficSource(traffic);
        return traffic;
    }

    private void toBrowserAppPerfSource(BrowserAppPerfSource source) {
        toSource(source);
        source.setRedirectTime(redirectTime);
        source.setDnsTime(dnsTime);
        source.setTtfbTime(ttfbTime);
        source.setTcpTime(tcpTime);
        source.setTransTime(transTime);
        source.setDomAnalysisTime(domAnalysisTime);
        source.setFptTime(fptTime);
        source.setDomReadyTime(domReadyTime);
        source.setLoadPageTime(loadPageTime);
        source.setResTime(resTime);
        source.setSslTime(sslTime);
        source.setTtlTime(ttlTime);
        source.setFirstPackTime(firstPackTime);
        source.setFmpTime(fmpTime);
    }

    /**
     * Browser service performance related source.
     */
    BrowserAppPerf toBrowserAppPerf() {
        BrowserAppPerf perf = new BrowserAppPerf();
        perf.setName(service);
        toBrowserAppPerfSource(perf);
        return perf;
    }

    /**
     * Browser single version performance related source.
     */
    BrowserAppSingleVersionPerf toBrowserAppSingleVersionPerf() {
        BrowserAppSingleVersionPerf perf = new BrowserAppSingleVersionPerf();
        perf.setName(serviceVersion);
        perf.setServiceName(service);
        toBrowserAppPerfSource(perf);
        return perf;
    }

    /**
     * Browser page performance related source.
     */
    BrowserAppPagePerf toBrowserAppPagePerf() {
        BrowserAppPagePerf perf = new BrowserAppPagePerf();
        perf.setName(patePath);
        perf.setServiceName(service);
        toBrowserAppPerfSource(perf);
        return perf;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public SourceBuilder(final NamingControl namingControl) {
        this.namingControl = namingControl;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getService() {
        return this.service;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getServiceVersion() {
        return this.serviceVersion;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getPatePath() {
        return this.patePath;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTimeBucket(final long timeBucket) {
        this.timeBucket = timeBucket;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getTimeBucket() {
        return this.timeBucket;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setRedirectTime(final int redirectTime) {
        this.redirectTime = redirectTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getRedirectTime() {
        return this.redirectTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setDnsTime(final int dnsTime) {
        this.dnsTime = dnsTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getDnsTime() {
        return this.dnsTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTtfbTime(final int ttfbTime) {
        this.ttfbTime = ttfbTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getTtfbTime() {
        return this.ttfbTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTcpTime(final int tcpTime) {
        this.tcpTime = tcpTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getTcpTime() {
        return this.tcpTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTransTime(final int transTime) {
        this.transTime = transTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getTransTime() {
        return this.transTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setDomAnalysisTime(final int domAnalysisTime) {
        this.domAnalysisTime = domAnalysisTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getDomAnalysisTime() {
        return this.domAnalysisTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setFptTime(final int fptTime) {
        this.fptTime = fptTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getFptTime() {
        return this.fptTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setDomReadyTime(final int domReadyTime) {
        this.domReadyTime = domReadyTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getDomReadyTime() {
        return this.domReadyTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setLoadPageTime(final int loadPageTime) {
        this.loadPageTime = loadPageTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getLoadPageTime() {
        return this.loadPageTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setResTime(final int resTime) {
        this.resTime = resTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getResTime() {
        return this.resTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSslTime(final int sslTime) {
        this.sslTime = sslTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getSslTime() {
        return this.sslTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTtlTime(final int ttlTime) {
        this.ttlTime = ttlTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getTtlTime() {
        return this.ttlTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setFirstPackTime(final int firstPackTime) {
        this.firstPackTime = firstPackTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getFirstPackTime() {
        return this.firstPackTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setFmpTime(final int fmpTime) {
        this.fmpTime = fmpTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getFmpTime() {
        return this.fmpTime;
    }
}
