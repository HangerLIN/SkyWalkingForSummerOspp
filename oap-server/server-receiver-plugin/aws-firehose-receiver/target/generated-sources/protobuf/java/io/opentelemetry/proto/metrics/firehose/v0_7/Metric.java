// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opentelemetry/proto/metrics/v1/metrics.proto

package io.opentelemetry.proto.metrics.firehose.v0_7;

/**
 * <pre>
 * Defines a Metric which has one or more timeseries.
 * The data model and relation between entities is shown in the
 * diagram below. Here, "DataPoint" is the term used to refer to any
 * one of the specific data point value types, and "points" is the term used
 * to refer to any one of the lists of points contained in the Metric.
 * - Metric is composed of a metadata and data.
 * - Metadata part contains a name, description, unit.
 * - Data is one of the possible types (Gauge, Sum, Histogram, etc.).
 * - DataPoint contains timestamps, labels, and one of the possible value type
 *   fields.
 *     Metric
 *  +------------+
 *  |name        |
 *  |description |
 *  |unit        |     +------------------------------------+
 *  |data        |---&gt; |Gauge, Sum, Histogram, Summary, ... |
 *  +------------+     +------------------------------------+
 *    Data [One of Gauge, Sum, Histogram, Summary, ...]
 *  +-----------+
 *  |...        |  // Metadata about the Data.
 *  |points     |--+
 *  +-----------+  |
 *                 |      +---------------------------+
 *                 |      |DataPoint 1                |
 *                 v      |+------+------+   +------+ |
 *              +-----+   ||label |label |...|label | |
 *              |  1  |--&gt;||value1|value2|...|valueN| |
 *              +-----+   |+------+------+   +------+ |
 *              |  .  |   |+-----+                    |
 *              |  .  |   ||value|                    |
 *              |  .  |   |+-----+                    |
 *              |  .  |   +---------------------------+
 *              |  .  |                   .
 *              |  .  |                   .
 *              |  .  |                   .
 *              |  .  |   +---------------------------+
 *              |  .  |   |DataPoint M                |
 *              +-----+   |+------+------+   +------+ |
 *              |  M  |--&gt;||label |label |...|label | |
 *              +-----+   ||value1|value2|...|valueN| |
 *                        |+------+------+   +------+ |
 *                        |+-----+                    |
 *                        ||value|                    |
 *                        |+-----+                    |
 *                        +---------------------------+
 * All DataPoint types have three common fields:
 * - Labels zero or more key-value pairs associated with the data point.
 * - StartTimeUnixNano MUST be set to the start of the interval when the data's
 *   type includes an AggregationTemporality. This field is not set otherwise.
 * - TimeUnixNano MUST be set to:
 *   - the moment when an aggregation is reported (independent of the
 *     aggregation temporality).
 *   - the instantaneous time of the event.
 * </pre>
 *
 * Protobuf type {@code opentelemetry.proto.metrics.v1.Metric}
 */
public final class Metric extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opentelemetry.proto.metrics.v1.Metric)
    MetricOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Metric.newBuilder() to construct.
  private Metric(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Metric() {
    name_ = "";
    description_ = "";
    unit_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Metric();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Metric(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            description_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            unit_ = s;
            break;
          }
          case 34: {
            io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge.Builder subBuilder = null;
            if (dataCase_ == 4) {
              subBuilder = ((io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge) data_).toBuilder();
            }
            data_ =
                input.readMessage(io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge) data_);
              data_ = subBuilder.buildPartial();
            }
            dataCase_ = 4;
            break;
          }
          case 42: {
            io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge.Builder subBuilder = null;
            if (dataCase_ == 5) {
              subBuilder = ((io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge) data_).toBuilder();
            }
            data_ =
                input.readMessage(io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge) data_);
              data_ = subBuilder.buildPartial();
            }
            dataCase_ = 5;
            break;
          }
          case 50: {
            io.opentelemetry.proto.metrics.firehose.v0_7.IntSum.Builder subBuilder = null;
            if (dataCase_ == 6) {
              subBuilder = ((io.opentelemetry.proto.metrics.firehose.v0_7.IntSum) data_).toBuilder();
            }
            data_ =
                input.readMessage(io.opentelemetry.proto.metrics.firehose.v0_7.IntSum.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.opentelemetry.proto.metrics.firehose.v0_7.IntSum) data_);
              data_ = subBuilder.buildPartial();
            }
            dataCase_ = 6;
            break;
          }
          case 58: {
            io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum.Builder subBuilder = null;
            if (dataCase_ == 7) {
              subBuilder = ((io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum) data_).toBuilder();
            }
            data_ =
                input.readMessage(io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum) data_);
              data_ = subBuilder.buildPartial();
            }
            dataCase_ = 7;
            break;
          }
          case 66: {
            io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram.Builder subBuilder = null;
            if (dataCase_ == 8) {
              subBuilder = ((io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram) data_).toBuilder();
            }
            data_ =
                input.readMessage(io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram) data_);
              data_ = subBuilder.buildPartial();
            }
            dataCase_ = 8;
            break;
          }
          case 74: {
            io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram.Builder subBuilder = null;
            if (dataCase_ == 9) {
              subBuilder = ((io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram) data_).toBuilder();
            }
            data_ =
                input.readMessage(io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram) data_);
              data_ = subBuilder.buildPartial();
            }
            dataCase_ = 9;
            break;
          }
          case 90: {
            io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary.Builder subBuilder = null;
            if (dataCase_ == 11) {
              subBuilder = ((io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary) data_).toBuilder();
            }
            data_ =
                input.readMessage(io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary) data_);
              data_ = subBuilder.buildPartial();
            }
            dataCase_ = 11;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.opentelemetry.proto.metrics.firehose.v0_7.MetricsProto.internal_static_opentelemetry_proto_metrics_v1_Metric_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.opentelemetry.proto.metrics.firehose.v0_7.MetricsProto.internal_static_opentelemetry_proto_metrics_v1_Metric_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.opentelemetry.proto.metrics.firehose.v0_7.Metric.class, io.opentelemetry.proto.metrics.firehose.v0_7.Metric.Builder.class);
  }

  private int dataCase_ = 0;
  private java.lang.Object data_;
  public enum DataCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    INT_GAUGE(4),
    DOUBLE_GAUGE(5),
    INT_SUM(6),
    DOUBLE_SUM(7),
    INT_HISTOGRAM(8),
    DOUBLE_HISTOGRAM(9),
    DOUBLE_SUMMARY(11),
    DATA_NOT_SET(0);
    private final int value;
    private DataCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DataCase valueOf(int value) {
      return forNumber(value);
    }

    public static DataCase forNumber(int value) {
      switch (value) {
        case 4: return INT_GAUGE;
        case 5: return DOUBLE_GAUGE;
        case 6: return INT_SUM;
        case 7: return DOUBLE_SUM;
        case 8: return INT_HISTOGRAM;
        case 9: return DOUBLE_HISTOGRAM;
        case 11: return DOUBLE_SUMMARY;
        case 0: return DATA_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public DataCase
  getDataCase() {
    return DataCase.forNumber(
        dataCase_);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * name of the metric, including its DNS name prefix. It must be unique.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * name of the metric, including its DNS name prefix. It must be unique.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 2;
  private volatile java.lang.Object description_;
  /**
   * <pre>
   * description of the metric, which can be used in documentation.
   * </pre>
   *
   * <code>string description = 2;</code>
   * @return The description.
   */
  @java.lang.Override
  public java.lang.String getDescription() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      description_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * description of the metric, which can be used in documentation.
   * </pre>
   *
   * <code>string description = 2;</code>
   * @return The bytes for description.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDescriptionBytes() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      description_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int UNIT_FIELD_NUMBER = 3;
  private volatile java.lang.Object unit_;
  /**
   * <pre>
   * unit in which the metric value is reported. Follows the format
   * described by http://unitsofmeasure.org/ucum.html.
   * </pre>
   *
   * <code>string unit = 3;</code>
   * @return The unit.
   */
  @java.lang.Override
  public java.lang.String getUnit() {
    java.lang.Object ref = unit_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      unit_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * unit in which the metric value is reported. Follows the format
   * described by http://unitsofmeasure.org/ucum.html.
   * </pre>
   *
   * <code>string unit = 3;</code>
   * @return The bytes for unit.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUnitBytes() {
    java.lang.Object ref = unit_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      unit_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INT_GAUGE_FIELD_NUMBER = 4;
  /**
   * <code>.opentelemetry.proto.metrics.v1.IntGauge int_gauge = 4;</code>
   * @return Whether the intGauge field is set.
   */
  @java.lang.Override
  public boolean hasIntGauge() {
    return dataCase_ == 4;
  }
  /**
   * <code>.opentelemetry.proto.metrics.v1.IntGauge int_gauge = 4;</code>
   * @return The intGauge.
   */
  @java.lang.Override
  public io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge getIntGauge() {
    if (dataCase_ == 4) {
       return (io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge) data_;
    }
    return io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge.getDefaultInstance();
  }
  /**
   * <code>.opentelemetry.proto.metrics.v1.IntGauge int_gauge = 4;</code>
   */
  @java.lang.Override
  public io.opentelemetry.proto.metrics.firehose.v0_7.IntGaugeOrBuilder getIntGaugeOrBuilder() {
    if (dataCase_ == 4) {
       return (io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge) data_;
    }
    return io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge.getDefaultInstance();
  }

  public static final int DOUBLE_GAUGE_FIELD_NUMBER = 5;
  /**
   * <code>.opentelemetry.proto.metrics.v1.DoubleGauge double_gauge = 5;</code>
   * @return Whether the doubleGauge field is set.
   */
  @java.lang.Override
  public boolean hasDoubleGauge() {
    return dataCase_ == 5;
  }
  /**
   * <code>.opentelemetry.proto.metrics.v1.DoubleGauge double_gauge = 5;</code>
   * @return The doubleGauge.
   */
  @java.lang.Override
  public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge getDoubleGauge() {
    if (dataCase_ == 5) {
       return (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge) data_;
    }
    return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge.getDefaultInstance();
  }
  /**
   * <code>.opentelemetry.proto.metrics.v1.DoubleGauge double_gauge = 5;</code>
   */
  @java.lang.Override
  public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGaugeOrBuilder getDoubleGaugeOrBuilder() {
    if (dataCase_ == 5) {
       return (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge) data_;
    }
    return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge.getDefaultInstance();
  }

  public static final int INT_SUM_FIELD_NUMBER = 6;
  /**
   * <code>.opentelemetry.proto.metrics.v1.IntSum int_sum = 6;</code>
   * @return Whether the intSum field is set.
   */
  @java.lang.Override
  public boolean hasIntSum() {
    return dataCase_ == 6;
  }
  /**
   * <code>.opentelemetry.proto.metrics.v1.IntSum int_sum = 6;</code>
   * @return The intSum.
   */
  @java.lang.Override
  public io.opentelemetry.proto.metrics.firehose.v0_7.IntSum getIntSum() {
    if (dataCase_ == 6) {
       return (io.opentelemetry.proto.metrics.firehose.v0_7.IntSum) data_;
    }
    return io.opentelemetry.proto.metrics.firehose.v0_7.IntSum.getDefaultInstance();
  }
  /**
   * <code>.opentelemetry.proto.metrics.v1.IntSum int_sum = 6;</code>
   */
  @java.lang.Override
  public io.opentelemetry.proto.metrics.firehose.v0_7.IntSumOrBuilder getIntSumOrBuilder() {
    if (dataCase_ == 6) {
       return (io.opentelemetry.proto.metrics.firehose.v0_7.IntSum) data_;
    }
    return io.opentelemetry.proto.metrics.firehose.v0_7.IntSum.getDefaultInstance();
  }

  public static final int DOUBLE_SUM_FIELD_NUMBER = 7;
  /**
   * <code>.opentelemetry.proto.metrics.v1.DoubleSum double_sum = 7;</code>
   * @return Whether the doubleSum field is set.
   */
  @java.lang.Override
  public boolean hasDoubleSum() {
    return dataCase_ == 7;
  }
  /**
   * <code>.opentelemetry.proto.metrics.v1.DoubleSum double_sum = 7;</code>
   * @return The doubleSum.
   */
  @java.lang.Override
  public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum getDoubleSum() {
    if (dataCase_ == 7) {
       return (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum) data_;
    }
    return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum.getDefaultInstance();
  }
  /**
   * <code>.opentelemetry.proto.metrics.v1.DoubleSum double_sum = 7;</code>
   */
  @java.lang.Override
  public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSumOrBuilder getDoubleSumOrBuilder() {
    if (dataCase_ == 7) {
       return (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum) data_;
    }
    return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum.getDefaultInstance();
  }

  public static final int INT_HISTOGRAM_FIELD_NUMBER = 8;
  /**
   * <code>.opentelemetry.proto.metrics.v1.IntHistogram int_histogram = 8;</code>
   * @return Whether the intHistogram field is set.
   */
  @java.lang.Override
  public boolean hasIntHistogram() {
    return dataCase_ == 8;
  }
  /**
   * <code>.opentelemetry.proto.metrics.v1.IntHistogram int_histogram = 8;</code>
   * @return The intHistogram.
   */
  @java.lang.Override
  public io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram getIntHistogram() {
    if (dataCase_ == 8) {
       return (io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram) data_;
    }
    return io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram.getDefaultInstance();
  }
  /**
   * <code>.opentelemetry.proto.metrics.v1.IntHistogram int_histogram = 8;</code>
   */
  @java.lang.Override
  public io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogramOrBuilder getIntHistogramOrBuilder() {
    if (dataCase_ == 8) {
       return (io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram) data_;
    }
    return io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram.getDefaultInstance();
  }

  public static final int DOUBLE_HISTOGRAM_FIELD_NUMBER = 9;
  /**
   * <code>.opentelemetry.proto.metrics.v1.DoubleHistogram double_histogram = 9;</code>
   * @return Whether the doubleHistogram field is set.
   */
  @java.lang.Override
  public boolean hasDoubleHistogram() {
    return dataCase_ == 9;
  }
  /**
   * <code>.opentelemetry.proto.metrics.v1.DoubleHistogram double_histogram = 9;</code>
   * @return The doubleHistogram.
   */
  @java.lang.Override
  public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram getDoubleHistogram() {
    if (dataCase_ == 9) {
       return (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram) data_;
    }
    return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram.getDefaultInstance();
  }
  /**
   * <code>.opentelemetry.proto.metrics.v1.DoubleHistogram double_histogram = 9;</code>
   */
  @java.lang.Override
  public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogramOrBuilder getDoubleHistogramOrBuilder() {
    if (dataCase_ == 9) {
       return (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram) data_;
    }
    return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram.getDefaultInstance();
  }

  public static final int DOUBLE_SUMMARY_FIELD_NUMBER = 11;
  /**
   * <code>.opentelemetry.proto.metrics.v1.DoubleSummary double_summary = 11;</code>
   * @return Whether the doubleSummary field is set.
   */
  @java.lang.Override
  public boolean hasDoubleSummary() {
    return dataCase_ == 11;
  }
  /**
   * <code>.opentelemetry.proto.metrics.v1.DoubleSummary double_summary = 11;</code>
   * @return The doubleSummary.
   */
  @java.lang.Override
  public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary getDoubleSummary() {
    if (dataCase_ == 11) {
       return (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary) data_;
    }
    return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary.getDefaultInstance();
  }
  /**
   * <code>.opentelemetry.proto.metrics.v1.DoubleSummary double_summary = 11;</code>
   */
  @java.lang.Override
  public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummaryOrBuilder getDoubleSummaryOrBuilder() {
    if (dataCase_ == 11) {
       return (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary) data_;
    }
    return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(unit_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, unit_);
    }
    if (dataCase_ == 4) {
      output.writeMessage(4, (io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge) data_);
    }
    if (dataCase_ == 5) {
      output.writeMessage(5, (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge) data_);
    }
    if (dataCase_ == 6) {
      output.writeMessage(6, (io.opentelemetry.proto.metrics.firehose.v0_7.IntSum) data_);
    }
    if (dataCase_ == 7) {
      output.writeMessage(7, (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum) data_);
    }
    if (dataCase_ == 8) {
      output.writeMessage(8, (io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram) data_);
    }
    if (dataCase_ == 9) {
      output.writeMessage(9, (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram) data_);
    }
    if (dataCase_ == 11) {
      output.writeMessage(11, (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary) data_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(unit_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, unit_);
    }
    if (dataCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge) data_);
    }
    if (dataCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge) data_);
    }
    if (dataCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (io.opentelemetry.proto.metrics.firehose.v0_7.IntSum) data_);
    }
    if (dataCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum) data_);
    }
    if (dataCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, (io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram) data_);
    }
    if (dataCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram) data_);
    }
    if (dataCase_ == 11) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary) data_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.opentelemetry.proto.metrics.firehose.v0_7.Metric)) {
      return super.equals(obj);
    }
    io.opentelemetry.proto.metrics.firehose.v0_7.Metric other = (io.opentelemetry.proto.metrics.firehose.v0_7.Metric) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getDescription()
        .equals(other.getDescription())) return false;
    if (!getUnit()
        .equals(other.getUnit())) return false;
    if (!getDataCase().equals(other.getDataCase())) return false;
    switch (dataCase_) {
      case 4:
        if (!getIntGauge()
            .equals(other.getIntGauge())) return false;
        break;
      case 5:
        if (!getDoubleGauge()
            .equals(other.getDoubleGauge())) return false;
        break;
      case 6:
        if (!getIntSum()
            .equals(other.getIntSum())) return false;
        break;
      case 7:
        if (!getDoubleSum()
            .equals(other.getDoubleSum())) return false;
        break;
      case 8:
        if (!getIntHistogram()
            .equals(other.getIntHistogram())) return false;
        break;
      case 9:
        if (!getDoubleHistogram()
            .equals(other.getDoubleHistogram())) return false;
        break;
      case 11:
        if (!getDoubleSummary()
            .equals(other.getDoubleSummary())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getDescription().hashCode();
    hash = (37 * hash) + UNIT_FIELD_NUMBER;
    hash = (53 * hash) + getUnit().hashCode();
    switch (dataCase_) {
      case 4:
        hash = (37 * hash) + INT_GAUGE_FIELD_NUMBER;
        hash = (53 * hash) + getIntGauge().hashCode();
        break;
      case 5:
        hash = (37 * hash) + DOUBLE_GAUGE_FIELD_NUMBER;
        hash = (53 * hash) + getDoubleGauge().hashCode();
        break;
      case 6:
        hash = (37 * hash) + INT_SUM_FIELD_NUMBER;
        hash = (53 * hash) + getIntSum().hashCode();
        break;
      case 7:
        hash = (37 * hash) + DOUBLE_SUM_FIELD_NUMBER;
        hash = (53 * hash) + getDoubleSum().hashCode();
        break;
      case 8:
        hash = (37 * hash) + INT_HISTOGRAM_FIELD_NUMBER;
        hash = (53 * hash) + getIntHistogram().hashCode();
        break;
      case 9:
        hash = (37 * hash) + DOUBLE_HISTOGRAM_FIELD_NUMBER;
        hash = (53 * hash) + getDoubleHistogram().hashCode();
        break;
      case 11:
        hash = (37 * hash) + DOUBLE_SUMMARY_FIELD_NUMBER;
        hash = (53 * hash) + getDoubleSummary().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.opentelemetry.proto.metrics.firehose.v0_7.Metric parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opentelemetry.proto.metrics.firehose.v0_7.Metric parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opentelemetry.proto.metrics.firehose.v0_7.Metric parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opentelemetry.proto.metrics.firehose.v0_7.Metric parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opentelemetry.proto.metrics.firehose.v0_7.Metric parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.opentelemetry.proto.metrics.firehose.v0_7.Metric parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.opentelemetry.proto.metrics.firehose.v0_7.Metric parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opentelemetry.proto.metrics.firehose.v0_7.Metric parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opentelemetry.proto.metrics.firehose.v0_7.Metric parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.opentelemetry.proto.metrics.firehose.v0_7.Metric parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.opentelemetry.proto.metrics.firehose.v0_7.Metric parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.opentelemetry.proto.metrics.firehose.v0_7.Metric parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.opentelemetry.proto.metrics.firehose.v0_7.Metric prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Defines a Metric which has one or more timeseries.
   * The data model and relation between entities is shown in the
   * diagram below. Here, "DataPoint" is the term used to refer to any
   * one of the specific data point value types, and "points" is the term used
   * to refer to any one of the lists of points contained in the Metric.
   * - Metric is composed of a metadata and data.
   * - Metadata part contains a name, description, unit.
   * - Data is one of the possible types (Gauge, Sum, Histogram, etc.).
   * - DataPoint contains timestamps, labels, and one of the possible value type
   *   fields.
   *     Metric
   *  +------------+
   *  |name        |
   *  |description |
   *  |unit        |     +------------------------------------+
   *  |data        |---&gt; |Gauge, Sum, Histogram, Summary, ... |
   *  +------------+     +------------------------------------+
   *    Data [One of Gauge, Sum, Histogram, Summary, ...]
   *  +-----------+
   *  |...        |  // Metadata about the Data.
   *  |points     |--+
   *  +-----------+  |
   *                 |      +---------------------------+
   *                 |      |DataPoint 1                |
   *                 v      |+------+------+   +------+ |
   *              +-----+   ||label |label |...|label | |
   *              |  1  |--&gt;||value1|value2|...|valueN| |
   *              +-----+   |+------+------+   +------+ |
   *              |  .  |   |+-----+                    |
   *              |  .  |   ||value|                    |
   *              |  .  |   |+-----+                    |
   *              |  .  |   +---------------------------+
   *              |  .  |                   .
   *              |  .  |                   .
   *              |  .  |                   .
   *              |  .  |   +---------------------------+
   *              |  .  |   |DataPoint M                |
   *              +-----+   |+------+------+   +------+ |
   *              |  M  |--&gt;||label |label |...|label | |
   *              +-----+   ||value1|value2|...|valueN| |
   *                        |+------+------+   +------+ |
   *                        |+-----+                    |
   *                        ||value|                    |
   *                        |+-----+                    |
   *                        +---------------------------+
   * All DataPoint types have three common fields:
   * - Labels zero or more key-value pairs associated with the data point.
   * - StartTimeUnixNano MUST be set to the start of the interval when the data's
   *   type includes an AggregationTemporality. This field is not set otherwise.
   * - TimeUnixNano MUST be set to:
   *   - the moment when an aggregation is reported (independent of the
   *     aggregation temporality).
   *   - the instantaneous time of the event.
   * </pre>
   *
   * Protobuf type {@code opentelemetry.proto.metrics.v1.Metric}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opentelemetry.proto.metrics.v1.Metric)
      io.opentelemetry.proto.metrics.firehose.v0_7.MetricOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.opentelemetry.proto.metrics.firehose.v0_7.MetricsProto.internal_static_opentelemetry_proto_metrics_v1_Metric_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.opentelemetry.proto.metrics.firehose.v0_7.MetricsProto.internal_static_opentelemetry_proto_metrics_v1_Metric_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.opentelemetry.proto.metrics.firehose.v0_7.Metric.class, io.opentelemetry.proto.metrics.firehose.v0_7.Metric.Builder.class);
    }

    // Construct using io.opentelemetry.proto.metrics.firehose.v0_7.Metric.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      description_ = "";

      unit_ = "";

      dataCase_ = 0;
      data_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.opentelemetry.proto.metrics.firehose.v0_7.MetricsProto.internal_static_opentelemetry_proto_metrics_v1_Metric_descriptor;
    }

    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.Metric getDefaultInstanceForType() {
      return io.opentelemetry.proto.metrics.firehose.v0_7.Metric.getDefaultInstance();
    }

    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.Metric build() {
      io.opentelemetry.proto.metrics.firehose.v0_7.Metric result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.Metric buildPartial() {
      io.opentelemetry.proto.metrics.firehose.v0_7.Metric result = new io.opentelemetry.proto.metrics.firehose.v0_7.Metric(this);
      result.name_ = name_;
      result.description_ = description_;
      result.unit_ = unit_;
      if (dataCase_ == 4) {
        if (intGaugeBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = intGaugeBuilder_.build();
        }
      }
      if (dataCase_ == 5) {
        if (doubleGaugeBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = doubleGaugeBuilder_.build();
        }
      }
      if (dataCase_ == 6) {
        if (intSumBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = intSumBuilder_.build();
        }
      }
      if (dataCase_ == 7) {
        if (doubleSumBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = doubleSumBuilder_.build();
        }
      }
      if (dataCase_ == 8) {
        if (intHistogramBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = intHistogramBuilder_.build();
        }
      }
      if (dataCase_ == 9) {
        if (doubleHistogramBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = doubleHistogramBuilder_.build();
        }
      }
      if (dataCase_ == 11) {
        if (doubleSummaryBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = doubleSummaryBuilder_.build();
        }
      }
      result.dataCase_ = dataCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.opentelemetry.proto.metrics.firehose.v0_7.Metric) {
        return mergeFrom((io.opentelemetry.proto.metrics.firehose.v0_7.Metric)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.opentelemetry.proto.metrics.firehose.v0_7.Metric other) {
      if (other == io.opentelemetry.proto.metrics.firehose.v0_7.Metric.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (!other.getDescription().isEmpty()) {
        description_ = other.description_;
        onChanged();
      }
      if (!other.getUnit().isEmpty()) {
        unit_ = other.unit_;
        onChanged();
      }
      switch (other.getDataCase()) {
        case INT_GAUGE: {
          mergeIntGauge(other.getIntGauge());
          break;
        }
        case DOUBLE_GAUGE: {
          mergeDoubleGauge(other.getDoubleGauge());
          break;
        }
        case INT_SUM: {
          mergeIntSum(other.getIntSum());
          break;
        }
        case DOUBLE_SUM: {
          mergeDoubleSum(other.getDoubleSum());
          break;
        }
        case INT_HISTOGRAM: {
          mergeIntHistogram(other.getIntHistogram());
          break;
        }
        case DOUBLE_HISTOGRAM: {
          mergeDoubleHistogram(other.getDoubleHistogram());
          break;
        }
        case DOUBLE_SUMMARY: {
          mergeDoubleSummary(other.getDoubleSummary());
          break;
        }
        case DATA_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.opentelemetry.proto.metrics.firehose.v0_7.Metric parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.opentelemetry.proto.metrics.firehose.v0_7.Metric) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int dataCase_ = 0;
    private java.lang.Object data_;
    public DataCase
        getDataCase() {
      return DataCase.forNumber(
          dataCase_);
    }

    public Builder clearData() {
      dataCase_ = 0;
      data_ = null;
      onChanged();
      return this;
    }


    private java.lang.Object name_ = "";
    /**
     * <pre>
     * name of the metric, including its DNS name prefix. It must be unique.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * name of the metric, including its DNS name prefix. It must be unique.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * name of the metric, including its DNS name prefix. It must be unique.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * name of the metric, including its DNS name prefix. It must be unique.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * name of the metric, including its DNS name prefix. It must be unique.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object description_ = "";
    /**
     * <pre>
     * description of the metric, which can be used in documentation.
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The description.
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * description of the metric, which can be used in documentation.
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The bytes for description.
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * description of the metric, which can be used in documentation.
     * </pre>
     *
     * <code>string description = 2;</code>
     * @param value The description to set.
     * @return This builder for chaining.
     */
    public Builder setDescription(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      description_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * description of the metric, which can be used in documentation.
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDescription() {
      
      description_ = getDefaultInstance().getDescription();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * description of the metric, which can be used in documentation.
     * </pre>
     *
     * <code>string description = 2;</code>
     * @param value The bytes for description to set.
     * @return This builder for chaining.
     */
    public Builder setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      description_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object unit_ = "";
    /**
     * <pre>
     * unit in which the metric value is reported. Follows the format
     * described by http://unitsofmeasure.org/ucum.html.
     * </pre>
     *
     * <code>string unit = 3;</code>
     * @return The unit.
     */
    public java.lang.String getUnit() {
      java.lang.Object ref = unit_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        unit_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * unit in which the metric value is reported. Follows the format
     * described by http://unitsofmeasure.org/ucum.html.
     * </pre>
     *
     * <code>string unit = 3;</code>
     * @return The bytes for unit.
     */
    public com.google.protobuf.ByteString
        getUnitBytes() {
      java.lang.Object ref = unit_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        unit_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * unit in which the metric value is reported. Follows the format
     * described by http://unitsofmeasure.org/ucum.html.
     * </pre>
     *
     * <code>string unit = 3;</code>
     * @param value The unit to set.
     * @return This builder for chaining.
     */
    public Builder setUnit(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      unit_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * unit in which the metric value is reported. Follows the format
     * described by http://unitsofmeasure.org/ucum.html.
     * </pre>
     *
     * <code>string unit = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearUnit() {
      
      unit_ = getDefaultInstance().getUnit();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * unit in which the metric value is reported. Follows the format
     * described by http://unitsofmeasure.org/ucum.html.
     * </pre>
     *
     * <code>string unit = 3;</code>
     * @param value The bytes for unit to set.
     * @return This builder for chaining.
     */
    public Builder setUnitBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      unit_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge, io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.IntGaugeOrBuilder> intGaugeBuilder_;
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntGauge int_gauge = 4;</code>
     * @return Whether the intGauge field is set.
     */
    @java.lang.Override
    public boolean hasIntGauge() {
      return dataCase_ == 4;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntGauge int_gauge = 4;</code>
     * @return The intGauge.
     */
    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge getIntGauge() {
      if (intGaugeBuilder_ == null) {
        if (dataCase_ == 4) {
          return (io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge) data_;
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge.getDefaultInstance();
      } else {
        if (dataCase_ == 4) {
          return intGaugeBuilder_.getMessage();
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge.getDefaultInstance();
      }
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntGauge int_gauge = 4;</code>
     */
    public Builder setIntGauge(io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge value) {
      if (intGaugeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        intGaugeBuilder_.setMessage(value);
      }
      dataCase_ = 4;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntGauge int_gauge = 4;</code>
     */
    public Builder setIntGauge(
        io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge.Builder builderForValue) {
      if (intGaugeBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        intGaugeBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 4;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntGauge int_gauge = 4;</code>
     */
    public Builder mergeIntGauge(io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge value) {
      if (intGaugeBuilder_ == null) {
        if (dataCase_ == 4 &&
            data_ != io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge.getDefaultInstance()) {
          data_ = io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge.newBuilder((io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge) data_)
              .mergeFrom(value).buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 4) {
          intGaugeBuilder_.mergeFrom(value);
        }
        intGaugeBuilder_.setMessage(value);
      }
      dataCase_ = 4;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntGauge int_gauge = 4;</code>
     */
    public Builder clearIntGauge() {
      if (intGaugeBuilder_ == null) {
        if (dataCase_ == 4) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 4) {
          dataCase_ = 0;
          data_ = null;
        }
        intGaugeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntGauge int_gauge = 4;</code>
     */
    public io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge.Builder getIntGaugeBuilder() {
      return getIntGaugeFieldBuilder().getBuilder();
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntGauge int_gauge = 4;</code>
     */
    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.IntGaugeOrBuilder getIntGaugeOrBuilder() {
      if ((dataCase_ == 4) && (intGaugeBuilder_ != null)) {
        return intGaugeBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 4) {
          return (io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge) data_;
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge.getDefaultInstance();
      }
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntGauge int_gauge = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge, io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.IntGaugeOrBuilder> 
        getIntGaugeFieldBuilder() {
      if (intGaugeBuilder_ == null) {
        if (!(dataCase_ == 4)) {
          data_ = io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge.getDefaultInstance();
        }
        intGaugeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge, io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.IntGaugeOrBuilder>(
                (io.opentelemetry.proto.metrics.firehose.v0_7.IntGauge) data_,
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      dataCase_ = 4;
      onChanged();;
      return intGaugeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGaugeOrBuilder> doubleGaugeBuilder_;
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleGauge double_gauge = 5;</code>
     * @return Whether the doubleGauge field is set.
     */
    @java.lang.Override
    public boolean hasDoubleGauge() {
      return dataCase_ == 5;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleGauge double_gauge = 5;</code>
     * @return The doubleGauge.
     */
    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge getDoubleGauge() {
      if (doubleGaugeBuilder_ == null) {
        if (dataCase_ == 5) {
          return (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge) data_;
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge.getDefaultInstance();
      } else {
        if (dataCase_ == 5) {
          return doubleGaugeBuilder_.getMessage();
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge.getDefaultInstance();
      }
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleGauge double_gauge = 5;</code>
     */
    public Builder setDoubleGauge(io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge value) {
      if (doubleGaugeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        doubleGaugeBuilder_.setMessage(value);
      }
      dataCase_ = 5;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleGauge double_gauge = 5;</code>
     */
    public Builder setDoubleGauge(
        io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge.Builder builderForValue) {
      if (doubleGaugeBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        doubleGaugeBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 5;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleGauge double_gauge = 5;</code>
     */
    public Builder mergeDoubleGauge(io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge value) {
      if (doubleGaugeBuilder_ == null) {
        if (dataCase_ == 5 &&
            data_ != io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge.getDefaultInstance()) {
          data_ = io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge.newBuilder((io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge) data_)
              .mergeFrom(value).buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 5) {
          doubleGaugeBuilder_.mergeFrom(value);
        }
        doubleGaugeBuilder_.setMessage(value);
      }
      dataCase_ = 5;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleGauge double_gauge = 5;</code>
     */
    public Builder clearDoubleGauge() {
      if (doubleGaugeBuilder_ == null) {
        if (dataCase_ == 5) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 5) {
          dataCase_ = 0;
          data_ = null;
        }
        doubleGaugeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleGauge double_gauge = 5;</code>
     */
    public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge.Builder getDoubleGaugeBuilder() {
      return getDoubleGaugeFieldBuilder().getBuilder();
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleGauge double_gauge = 5;</code>
     */
    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGaugeOrBuilder getDoubleGaugeOrBuilder() {
      if ((dataCase_ == 5) && (doubleGaugeBuilder_ != null)) {
        return doubleGaugeBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 5) {
          return (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge) data_;
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge.getDefaultInstance();
      }
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleGauge double_gauge = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGaugeOrBuilder> 
        getDoubleGaugeFieldBuilder() {
      if (doubleGaugeBuilder_ == null) {
        if (!(dataCase_ == 5)) {
          data_ = io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge.getDefaultInstance();
        }
        doubleGaugeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGaugeOrBuilder>(
                (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleGauge) data_,
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      dataCase_ = 5;
      onChanged();;
      return doubleGaugeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.opentelemetry.proto.metrics.firehose.v0_7.IntSum, io.opentelemetry.proto.metrics.firehose.v0_7.IntSum.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.IntSumOrBuilder> intSumBuilder_;
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntSum int_sum = 6;</code>
     * @return Whether the intSum field is set.
     */
    @java.lang.Override
    public boolean hasIntSum() {
      return dataCase_ == 6;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntSum int_sum = 6;</code>
     * @return The intSum.
     */
    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.IntSum getIntSum() {
      if (intSumBuilder_ == null) {
        if (dataCase_ == 6) {
          return (io.opentelemetry.proto.metrics.firehose.v0_7.IntSum) data_;
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.IntSum.getDefaultInstance();
      } else {
        if (dataCase_ == 6) {
          return intSumBuilder_.getMessage();
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.IntSum.getDefaultInstance();
      }
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntSum int_sum = 6;</code>
     */
    public Builder setIntSum(io.opentelemetry.proto.metrics.firehose.v0_7.IntSum value) {
      if (intSumBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        intSumBuilder_.setMessage(value);
      }
      dataCase_ = 6;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntSum int_sum = 6;</code>
     */
    public Builder setIntSum(
        io.opentelemetry.proto.metrics.firehose.v0_7.IntSum.Builder builderForValue) {
      if (intSumBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        intSumBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 6;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntSum int_sum = 6;</code>
     */
    public Builder mergeIntSum(io.opentelemetry.proto.metrics.firehose.v0_7.IntSum value) {
      if (intSumBuilder_ == null) {
        if (dataCase_ == 6 &&
            data_ != io.opentelemetry.proto.metrics.firehose.v0_7.IntSum.getDefaultInstance()) {
          data_ = io.opentelemetry.proto.metrics.firehose.v0_7.IntSum.newBuilder((io.opentelemetry.proto.metrics.firehose.v0_7.IntSum) data_)
              .mergeFrom(value).buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 6) {
          intSumBuilder_.mergeFrom(value);
        }
        intSumBuilder_.setMessage(value);
      }
      dataCase_ = 6;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntSum int_sum = 6;</code>
     */
    public Builder clearIntSum() {
      if (intSumBuilder_ == null) {
        if (dataCase_ == 6) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 6) {
          dataCase_ = 0;
          data_ = null;
        }
        intSumBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntSum int_sum = 6;</code>
     */
    public io.opentelemetry.proto.metrics.firehose.v0_7.IntSum.Builder getIntSumBuilder() {
      return getIntSumFieldBuilder().getBuilder();
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntSum int_sum = 6;</code>
     */
    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.IntSumOrBuilder getIntSumOrBuilder() {
      if ((dataCase_ == 6) && (intSumBuilder_ != null)) {
        return intSumBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 6) {
          return (io.opentelemetry.proto.metrics.firehose.v0_7.IntSum) data_;
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.IntSum.getDefaultInstance();
      }
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntSum int_sum = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opentelemetry.proto.metrics.firehose.v0_7.IntSum, io.opentelemetry.proto.metrics.firehose.v0_7.IntSum.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.IntSumOrBuilder> 
        getIntSumFieldBuilder() {
      if (intSumBuilder_ == null) {
        if (!(dataCase_ == 6)) {
          data_ = io.opentelemetry.proto.metrics.firehose.v0_7.IntSum.getDefaultInstance();
        }
        intSumBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opentelemetry.proto.metrics.firehose.v0_7.IntSum, io.opentelemetry.proto.metrics.firehose.v0_7.IntSum.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.IntSumOrBuilder>(
                (io.opentelemetry.proto.metrics.firehose.v0_7.IntSum) data_,
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      dataCase_ = 6;
      onChanged();;
      return intSumBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSumOrBuilder> doubleSumBuilder_;
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSum double_sum = 7;</code>
     * @return Whether the doubleSum field is set.
     */
    @java.lang.Override
    public boolean hasDoubleSum() {
      return dataCase_ == 7;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSum double_sum = 7;</code>
     * @return The doubleSum.
     */
    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum getDoubleSum() {
      if (doubleSumBuilder_ == null) {
        if (dataCase_ == 7) {
          return (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum) data_;
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum.getDefaultInstance();
      } else {
        if (dataCase_ == 7) {
          return doubleSumBuilder_.getMessage();
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum.getDefaultInstance();
      }
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSum double_sum = 7;</code>
     */
    public Builder setDoubleSum(io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum value) {
      if (doubleSumBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        doubleSumBuilder_.setMessage(value);
      }
      dataCase_ = 7;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSum double_sum = 7;</code>
     */
    public Builder setDoubleSum(
        io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum.Builder builderForValue) {
      if (doubleSumBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        doubleSumBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 7;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSum double_sum = 7;</code>
     */
    public Builder mergeDoubleSum(io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum value) {
      if (doubleSumBuilder_ == null) {
        if (dataCase_ == 7 &&
            data_ != io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum.getDefaultInstance()) {
          data_ = io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum.newBuilder((io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum) data_)
              .mergeFrom(value).buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 7) {
          doubleSumBuilder_.mergeFrom(value);
        }
        doubleSumBuilder_.setMessage(value);
      }
      dataCase_ = 7;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSum double_sum = 7;</code>
     */
    public Builder clearDoubleSum() {
      if (doubleSumBuilder_ == null) {
        if (dataCase_ == 7) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 7) {
          dataCase_ = 0;
          data_ = null;
        }
        doubleSumBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSum double_sum = 7;</code>
     */
    public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum.Builder getDoubleSumBuilder() {
      return getDoubleSumFieldBuilder().getBuilder();
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSum double_sum = 7;</code>
     */
    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSumOrBuilder getDoubleSumOrBuilder() {
      if ((dataCase_ == 7) && (doubleSumBuilder_ != null)) {
        return doubleSumBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 7) {
          return (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum) data_;
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum.getDefaultInstance();
      }
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSum double_sum = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSumOrBuilder> 
        getDoubleSumFieldBuilder() {
      if (doubleSumBuilder_ == null) {
        if (!(dataCase_ == 7)) {
          data_ = io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum.getDefaultInstance();
        }
        doubleSumBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSumOrBuilder>(
                (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSum) data_,
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      dataCase_ = 7;
      onChanged();;
      return doubleSumBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram, io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogramOrBuilder> intHistogramBuilder_;
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntHistogram int_histogram = 8;</code>
     * @return Whether the intHistogram field is set.
     */
    @java.lang.Override
    public boolean hasIntHistogram() {
      return dataCase_ == 8;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntHistogram int_histogram = 8;</code>
     * @return The intHistogram.
     */
    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram getIntHistogram() {
      if (intHistogramBuilder_ == null) {
        if (dataCase_ == 8) {
          return (io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram) data_;
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram.getDefaultInstance();
      } else {
        if (dataCase_ == 8) {
          return intHistogramBuilder_.getMessage();
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram.getDefaultInstance();
      }
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntHistogram int_histogram = 8;</code>
     */
    public Builder setIntHistogram(io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram value) {
      if (intHistogramBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        intHistogramBuilder_.setMessage(value);
      }
      dataCase_ = 8;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntHistogram int_histogram = 8;</code>
     */
    public Builder setIntHistogram(
        io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram.Builder builderForValue) {
      if (intHistogramBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        intHistogramBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 8;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntHistogram int_histogram = 8;</code>
     */
    public Builder mergeIntHistogram(io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram value) {
      if (intHistogramBuilder_ == null) {
        if (dataCase_ == 8 &&
            data_ != io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram.getDefaultInstance()) {
          data_ = io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram.newBuilder((io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram) data_)
              .mergeFrom(value).buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 8) {
          intHistogramBuilder_.mergeFrom(value);
        }
        intHistogramBuilder_.setMessage(value);
      }
      dataCase_ = 8;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntHistogram int_histogram = 8;</code>
     */
    public Builder clearIntHistogram() {
      if (intHistogramBuilder_ == null) {
        if (dataCase_ == 8) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 8) {
          dataCase_ = 0;
          data_ = null;
        }
        intHistogramBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntHistogram int_histogram = 8;</code>
     */
    public io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram.Builder getIntHistogramBuilder() {
      return getIntHistogramFieldBuilder().getBuilder();
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntHistogram int_histogram = 8;</code>
     */
    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogramOrBuilder getIntHistogramOrBuilder() {
      if ((dataCase_ == 8) && (intHistogramBuilder_ != null)) {
        return intHistogramBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 8) {
          return (io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram) data_;
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram.getDefaultInstance();
      }
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.IntHistogram int_histogram = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram, io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogramOrBuilder> 
        getIntHistogramFieldBuilder() {
      if (intHistogramBuilder_ == null) {
        if (!(dataCase_ == 8)) {
          data_ = io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram.getDefaultInstance();
        }
        intHistogramBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram, io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogramOrBuilder>(
                (io.opentelemetry.proto.metrics.firehose.v0_7.IntHistogram) data_,
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      dataCase_ = 8;
      onChanged();;
      return intHistogramBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogramOrBuilder> doubleHistogramBuilder_;
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleHistogram double_histogram = 9;</code>
     * @return Whether the doubleHistogram field is set.
     */
    @java.lang.Override
    public boolean hasDoubleHistogram() {
      return dataCase_ == 9;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleHistogram double_histogram = 9;</code>
     * @return The doubleHistogram.
     */
    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram getDoubleHistogram() {
      if (doubleHistogramBuilder_ == null) {
        if (dataCase_ == 9) {
          return (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram) data_;
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram.getDefaultInstance();
      } else {
        if (dataCase_ == 9) {
          return doubleHistogramBuilder_.getMessage();
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram.getDefaultInstance();
      }
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleHistogram double_histogram = 9;</code>
     */
    public Builder setDoubleHistogram(io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram value) {
      if (doubleHistogramBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        doubleHistogramBuilder_.setMessage(value);
      }
      dataCase_ = 9;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleHistogram double_histogram = 9;</code>
     */
    public Builder setDoubleHistogram(
        io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram.Builder builderForValue) {
      if (doubleHistogramBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        doubleHistogramBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 9;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleHistogram double_histogram = 9;</code>
     */
    public Builder mergeDoubleHistogram(io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram value) {
      if (doubleHistogramBuilder_ == null) {
        if (dataCase_ == 9 &&
            data_ != io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram.getDefaultInstance()) {
          data_ = io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram.newBuilder((io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram) data_)
              .mergeFrom(value).buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 9) {
          doubleHistogramBuilder_.mergeFrom(value);
        }
        doubleHistogramBuilder_.setMessage(value);
      }
      dataCase_ = 9;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleHistogram double_histogram = 9;</code>
     */
    public Builder clearDoubleHistogram() {
      if (doubleHistogramBuilder_ == null) {
        if (dataCase_ == 9) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 9) {
          dataCase_ = 0;
          data_ = null;
        }
        doubleHistogramBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleHistogram double_histogram = 9;</code>
     */
    public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram.Builder getDoubleHistogramBuilder() {
      return getDoubleHistogramFieldBuilder().getBuilder();
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleHistogram double_histogram = 9;</code>
     */
    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogramOrBuilder getDoubleHistogramOrBuilder() {
      if ((dataCase_ == 9) && (doubleHistogramBuilder_ != null)) {
        return doubleHistogramBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 9) {
          return (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram) data_;
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram.getDefaultInstance();
      }
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleHistogram double_histogram = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogramOrBuilder> 
        getDoubleHistogramFieldBuilder() {
      if (doubleHistogramBuilder_ == null) {
        if (!(dataCase_ == 9)) {
          data_ = io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram.getDefaultInstance();
        }
        doubleHistogramBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogramOrBuilder>(
                (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleHistogram) data_,
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      dataCase_ = 9;
      onChanged();;
      return doubleHistogramBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummaryOrBuilder> doubleSummaryBuilder_;
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSummary double_summary = 11;</code>
     * @return Whether the doubleSummary field is set.
     */
    @java.lang.Override
    public boolean hasDoubleSummary() {
      return dataCase_ == 11;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSummary double_summary = 11;</code>
     * @return The doubleSummary.
     */
    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary getDoubleSummary() {
      if (doubleSummaryBuilder_ == null) {
        if (dataCase_ == 11) {
          return (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary) data_;
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary.getDefaultInstance();
      } else {
        if (dataCase_ == 11) {
          return doubleSummaryBuilder_.getMessage();
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary.getDefaultInstance();
      }
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSummary double_summary = 11;</code>
     */
    public Builder setDoubleSummary(io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary value) {
      if (doubleSummaryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        doubleSummaryBuilder_.setMessage(value);
      }
      dataCase_ = 11;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSummary double_summary = 11;</code>
     */
    public Builder setDoubleSummary(
        io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary.Builder builderForValue) {
      if (doubleSummaryBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        doubleSummaryBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 11;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSummary double_summary = 11;</code>
     */
    public Builder mergeDoubleSummary(io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary value) {
      if (doubleSummaryBuilder_ == null) {
        if (dataCase_ == 11 &&
            data_ != io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary.getDefaultInstance()) {
          data_ = io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary.newBuilder((io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary) data_)
              .mergeFrom(value).buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 11) {
          doubleSummaryBuilder_.mergeFrom(value);
        }
        doubleSummaryBuilder_.setMessage(value);
      }
      dataCase_ = 11;
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSummary double_summary = 11;</code>
     */
    public Builder clearDoubleSummary() {
      if (doubleSummaryBuilder_ == null) {
        if (dataCase_ == 11) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 11) {
          dataCase_ = 0;
          data_ = null;
        }
        doubleSummaryBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSummary double_summary = 11;</code>
     */
    public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary.Builder getDoubleSummaryBuilder() {
      return getDoubleSummaryFieldBuilder().getBuilder();
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSummary double_summary = 11;</code>
     */
    @java.lang.Override
    public io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummaryOrBuilder getDoubleSummaryOrBuilder() {
      if ((dataCase_ == 11) && (doubleSummaryBuilder_ != null)) {
        return doubleSummaryBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 11) {
          return (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary) data_;
        }
        return io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary.getDefaultInstance();
      }
    }
    /**
     * <code>.opentelemetry.proto.metrics.v1.DoubleSummary double_summary = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummaryOrBuilder> 
        getDoubleSummaryFieldBuilder() {
      if (doubleSummaryBuilder_ == null) {
        if (!(dataCase_ == 11)) {
          data_ = io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary.getDefaultInstance();
        }
        doubleSummaryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary.Builder, io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummaryOrBuilder>(
                (io.opentelemetry.proto.metrics.firehose.v0_7.DoubleSummary) data_,
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      dataCase_ = 11;
      onChanged();;
      return doubleSummaryBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opentelemetry.proto.metrics.v1.Metric)
  }

  // @@protoc_insertion_point(class_scope:opentelemetry.proto.metrics.v1.Metric)
  private static final io.opentelemetry.proto.metrics.firehose.v0_7.Metric DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.opentelemetry.proto.metrics.firehose.v0_7.Metric();
  }

  public static io.opentelemetry.proto.metrics.firehose.v0_7.Metric getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Metric>
      PARSER = new com.google.protobuf.AbstractParser<Metric>() {
    @java.lang.Override
    public Metric parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Metric(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Metric> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Metric> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.opentelemetry.proto.metrics.firehose.v0_7.Metric getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

