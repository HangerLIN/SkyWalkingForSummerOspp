// Generated by delombok at Thu Apr 18 20:41:10 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.skywalking.generator;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

@JsonDeserialize(builder = FixedStringGenerator.Builder.class)
public final class FixedStringGenerator implements Generator<String> {
    private final String value;

    public FixedStringGenerator(Builder builder) {
        value = builder.value;
    }

    @Override
    public String next() {
        return value;
    }


    public static class Builder {
        private String value;

        public FixedStringGenerator build() {
            return new FixedStringGenerator(this);
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public Builder() {
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public String getValue() {
            return this.value;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public void setValue(final String value) {
            this.value = value;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public boolean equals(final java.lang.Object o) {
            if (o == this) return true;
            if (!(o instanceof FixedStringGenerator.Builder)) return false;
            final FixedStringGenerator.Builder other = (FixedStringGenerator.Builder) o;
            if (!other.canEqual((java.lang.Object) this)) return false;
            final java.lang.Object this$value = this.getValue();
            final java.lang.Object other$value = other.getValue();
            if (this$value == null ? other$value != null : !this$value.equals(other$value)) return false;
            return true;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        protected boolean canEqual(final java.lang.Object other) {
            return other instanceof FixedStringGenerator.Builder;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public int hashCode() {
            final int PRIME = 59;
            int result = 1;
            final java.lang.Object $value = this.getValue();
            result = result * PRIME + ($value == null ? 43 : $value.hashCode());
            return result;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public java.lang.String toString() {
            return "FixedStringGenerator.Builder(value=" + this.getValue() + ")";
        }
    }

    @Override
    public String toString() {
        return String.valueOf(next());
    }
}
