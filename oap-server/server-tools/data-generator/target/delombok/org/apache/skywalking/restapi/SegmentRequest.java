// Generated by delombok at Thu Apr 18 20:41:10 CST 2024
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.skywalking.restapi;

import java.util.List;
import java.util.stream.Collectors;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import org.apache.skywalking.apm.network.language.agent.v3.SegmentObject;
import org.apache.skywalking.apm.network.language.agent.v3.SpanObject;
import org.apache.skywalking.generator.Generator;
import org.apache.skywalking.oap.server.core.analysis.IDManager;
import org.apache.skywalking.oap.server.core.analysis.TimeBucket;
import org.apache.skywalking.oap.server.core.analysis.manual.searchtag.Tag;
import org.apache.skywalking.oap.server.core.source.Segment;

@JsonTypeInfo(use = JsonTypeInfo.Id.NONE)
public final class SegmentRequest implements Generator<Segment> {
    private Generator<String> segmentId;
    private Generator<String> traceId;
    private Generator<String> serviceName;
    private Generator<String> serviceInstanceName;
    private Generator<String> endpointName;
    private Generator<Long> startTime;
    private Generator<Long> latency;
    private Generator<Long> error;
    private Generator<List<TagGenerator>> tags;
    private Generator<List<SpanGenerator>> spans;

    @Override
    public Segment next() {
        final String traceId = getTraceId().next();
        final String serviceName = getServiceName().next();
        final String serviceInstanceName = getServiceInstanceName().next();
        final String endpointName = getEndpointName().next();
        final String segmentId = getSegmentId().next();
        final SegmentObject segmentObj = SegmentObject.newBuilder().setTraceId(traceId).setTraceSegmentId(segmentId).addAllSpans(getSpans().next().stream().map(SpanGenerator::next).collect(Collectors.<SpanObject>toList())).setService(serviceName).setServiceInstance(serviceInstanceName).build();
        // Reset the span generator to generate the span id from 0
        getSpans().reset();
        final Segment segment = new Segment();
        segment.setSegmentId(segmentId);
        segment.setTraceId(traceId);
        segment.setServiceId(IDManager.ServiceID.buildId(serviceName, true));
        segment.setServiceInstanceId(IDManager.ServiceInstanceID.buildId(segment.getServiceId(), serviceInstanceName));
        segment.setEndpointId(IDManager.EndpointID.buildId(segment.getServiceId(), endpointName));
        segment.setStartTime(getStartTime().next());
        segment.setLatency(getLatency().next().intValue());
        segment.setIsError(getError().next().intValue());
        segment.setTimeBucket(TimeBucket.getRecordTimeBucket(segment.getStartTime()));
        segment.setTags(getTags().next().stream().map(TagGenerator::next).collect(Collectors.<Tag>toList()));
        segment.setDataBinary(segmentObj.toByteArray());
        return segment;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public SegmentRequest() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Generator<String> getSegmentId() {
        return this.segmentId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Generator<String> getTraceId() {
        return this.traceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Generator<String> getServiceName() {
        return this.serviceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Generator<String> getServiceInstanceName() {
        return this.serviceInstanceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Generator<String> getEndpointName() {
        return this.endpointName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Generator<Long> getStartTime() {
        return this.startTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Generator<Long> getLatency() {
        return this.latency;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Generator<Long> getError() {
        return this.error;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Generator<List<TagGenerator>> getTags() {
        return this.tags;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Generator<List<SpanGenerator>> getSpans() {
        return this.spans;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSegmentId(final Generator<String> segmentId) {
        this.segmentId = segmentId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTraceId(final Generator<String> traceId) {
        this.traceId = traceId;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setServiceName(final Generator<String> serviceName) {
        this.serviceName = serviceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setServiceInstanceName(final Generator<String> serviceInstanceName) {
        this.serviceInstanceName = serviceInstanceName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setEndpointName(final Generator<String> endpointName) {
        this.endpointName = endpointName;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setStartTime(final Generator<Long> startTime) {
        this.startTime = startTime;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setLatency(final Generator<Long> latency) {
        this.latency = latency;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setError(final Generator<Long> error) {
        this.error = error;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTags(final Generator<List<TagGenerator>> tags) {
        this.tags = tags;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSpans(final Generator<List<SpanGenerator>> spans) {
        this.spans = spans;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof SegmentRequest)) return false;
        final SegmentRequest other = (SegmentRequest) o;
        final java.lang.Object this$segmentId = this.getSegmentId();
        final java.lang.Object other$segmentId = other.getSegmentId();
        if (this$segmentId == null ? other$segmentId != null : !this$segmentId.equals(other$segmentId)) return false;
        final java.lang.Object this$traceId = this.getTraceId();
        final java.lang.Object other$traceId = other.getTraceId();
        if (this$traceId == null ? other$traceId != null : !this$traceId.equals(other$traceId)) return false;
        final java.lang.Object this$serviceName = this.getServiceName();
        final java.lang.Object other$serviceName = other.getServiceName();
        if (this$serviceName == null ? other$serviceName != null : !this$serviceName.equals(other$serviceName)) return false;
        final java.lang.Object this$serviceInstanceName = this.getServiceInstanceName();
        final java.lang.Object other$serviceInstanceName = other.getServiceInstanceName();
        if (this$serviceInstanceName == null ? other$serviceInstanceName != null : !this$serviceInstanceName.equals(other$serviceInstanceName)) return false;
        final java.lang.Object this$endpointName = this.getEndpointName();
        final java.lang.Object other$endpointName = other.getEndpointName();
        if (this$endpointName == null ? other$endpointName != null : !this$endpointName.equals(other$endpointName)) return false;
        final java.lang.Object this$startTime = this.getStartTime();
        final java.lang.Object other$startTime = other.getStartTime();
        if (this$startTime == null ? other$startTime != null : !this$startTime.equals(other$startTime)) return false;
        final java.lang.Object this$latency = this.getLatency();
        final java.lang.Object other$latency = other.getLatency();
        if (this$latency == null ? other$latency != null : !this$latency.equals(other$latency)) return false;
        final java.lang.Object this$error = this.getError();
        final java.lang.Object other$error = other.getError();
        if (this$error == null ? other$error != null : !this$error.equals(other$error)) return false;
        final java.lang.Object this$tags = this.getTags();
        final java.lang.Object other$tags = other.getTags();
        if (this$tags == null ? other$tags != null : !this$tags.equals(other$tags)) return false;
        final java.lang.Object this$spans = this.getSpans();
        final java.lang.Object other$spans = other.getSpans();
        if (this$spans == null ? other$spans != null : !this$spans.equals(other$spans)) return false;
        return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $segmentId = this.getSegmentId();
        result = result * PRIME + ($segmentId == null ? 43 : $segmentId.hashCode());
        final java.lang.Object $traceId = this.getTraceId();
        result = result * PRIME + ($traceId == null ? 43 : $traceId.hashCode());
        final java.lang.Object $serviceName = this.getServiceName();
        result = result * PRIME + ($serviceName == null ? 43 : $serviceName.hashCode());
        final java.lang.Object $serviceInstanceName = this.getServiceInstanceName();
        result = result * PRIME + ($serviceInstanceName == null ? 43 : $serviceInstanceName.hashCode());
        final java.lang.Object $endpointName = this.getEndpointName();
        result = result * PRIME + ($endpointName == null ? 43 : $endpointName.hashCode());
        final java.lang.Object $startTime = this.getStartTime();
        result = result * PRIME + ($startTime == null ? 43 : $startTime.hashCode());
        final java.lang.Object $latency = this.getLatency();
        result = result * PRIME + ($latency == null ? 43 : $latency.hashCode());
        final java.lang.Object $error = this.getError();
        result = result * PRIME + ($error == null ? 43 : $error.hashCode());
        final java.lang.Object $tags = this.getTags();
        result = result * PRIME + ($tags == null ? 43 : $tags.hashCode());
        final java.lang.Object $spans = this.getSpans();
        result = result * PRIME + ($spans == null ? 43 : $spans.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "SegmentRequest(segmentId=" + this.getSegmentId() + ", traceId=" + this.getTraceId() + ", serviceName=" + this.getServiceName() + ", serviceInstanceName=" + this.getServiceInstanceName() + ", endpointName=" + this.getEndpointName() + ", startTime=" + this.getStartTime() + ", latency=" + this.getLatency() + ", error=" + this.getError() + ", tags=" + this.getTags() + ", spans=" + this.getSpans() + ")";
    }
}
